{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/assets/Excited.mp4","webpack:///./src/plugins/bootstrap-vue.js","webpack:///./src/App.vue?dc8f","webpack:///./src/App.vue?bff9","webpack:///./src/views/Home.vue?57e3","webpack:///./src/components/WorkEntry.vue?c683","webpack:///src/components/WorkEntry.vue","webpack:///./src/components/WorkEntry.vue?ac2e","webpack:///./src/components/WorkEntry.vue","webpack:///src/views/Home.vue","webpack:///./src/views/Home.vue?493c","webpack:///./src/views/Home.vue","webpack:///./src/views/Helper/Helper.vue?947f","webpack:///./src/components/Elasticity.vue?8da4","webpack:///./src/components/TokenInfo.vue?d952","webpack:///src/components/TokenInfo.vue","webpack:///./src/components/TokenInfo.vue?6130","webpack:///./src/components/TokenInfo.vue","webpack:///src/components/Elasticity.vue","webpack:///./src/components/Elasticity.vue?5398","webpack:///./src/components/Elasticity.vue","webpack:///./src/components/TemperatureInput.vue?a818","webpack:///src/components/TemperatureInput.vue","webpack:///./src/components/TemperatureInput.vue?d1c5","webpack:///./src/components/TemperatureInput.vue","webpack:///./src/components/Token.vue?d354","webpack:///src/components/Token.vue","webpack:///./src/components/Token.vue?15c9","webpack:///./src/components/Token.vue","webpack:///./src/components/CombatSims.vue?ccfe","webpack:///src/components/CombatSims.vue","webpack:///./src/components/CombatSims.vue?944b","webpack:///./src/components/CombatSims.vue","webpack:///./src/components/HeatSim.vue?e925","webpack:///src/components/HeatSim.vue","webpack:///./src/components/HeatSim.vue?ea17","webpack:///./src/components/HeatSim.vue","webpack:///./src/components/Citation.vue?cfa2","webpack:///src/components/Citation.vue","webpack:///./src/components/Citation.vue?85e6","webpack:///./src/components/Citation.vue","webpack:///src/views/Helper/Helper.vue","webpack:///./src/views/Helper/Helper.vue?84f6","webpack:///./src/views/Helper/Helper.vue","webpack:///./src/views/Roguelike.vue?1ce5","webpack:///src/views/Roguelike.vue","webpack:///./src/views/Roguelike.vue?e925","webpack:///./src/views/Roguelike.vue","webpack:///./src/views/Atmospherics.vue?ef6f","webpack:///./src/components/CodeMathProse.vue?d8cf","webpack:///src/components/CodeMathProse.vue","webpack:///./src/components/CodeMathProse.vue?daec","webpack:///./src/components/CodeMathProse.vue","webpack:///./src/components/fdmDemonstration.vue?0b57","webpack:///src/components/fdmDemonstration.vue","webpack:///./src/components/fdmDemonstration.vue?0df6","webpack:///./src/components/fdmDemonstration.vue","webpack:///src/views/Atmospherics.vue","webpack:///./src/views/Atmospherics.vue?4a2e","webpack:///./src/views/Atmospherics.vue","webpack:///./src/router/index.js","webpack:///./src/main.js","webpack:///./src/App.vue?c650","webpack:///./src/assets/LINDA.mp4","webpack:///./src/assets/Optimize.mp4","webpack:///./src/assets/FiniteDifference3.mp4"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","jsonpScriptSrc","p","installedWasmModules","wasmImportObjects","p0i32","exports","p1i32","p2i32","module","l","e","promises","installedChunkData","promise","Promise","resolve","reject","onScriptComplete","script","document","createElement","charset","timeout","nc","setAttribute","src","error","Error","event","onerror","onload","clearTimeout","chunk","errorType","type","realSrc","target","message","name","request","undefined","setTimeout","head","appendChild","wasmModules","forEach","wasmModuleId","installedWasmModuleData","importObject","req","fetch","WebAssembly","compileStreaming","all","then","items","instantiate","instantiateStreaming","bytesPromise","x","arrayBuffer","bytes","res","w","instance","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","err","console","jsonpArray","window","oldJsonpFunction","slice","Vue","use","BootstrapVue","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","_v","staticRenderFns","component","scopedSlots","_u","fn","on","$event","$bvModal","hide","proxy","directives","rawName","modifiers","arg","_s","blurb","_t","href","components","model","callback","$$v","curTab","expression","staticStyle","adj","color","matValue","_n","melting_exists","melting","boiling_exists","boiling","heatdam_exists","heatdam","colddam_exists","colddam","ignition_exists","ignition","specHeat","solidDensity","liquidDensity","molarMass","strengthPlaceholders","realisticPlaceholders","tensileYield","Math","round","tensileFracture","shearYield","shearFracture","compressiveFracture","compressiveYield","maxEdge","elasticity","solidName","impactYield","impactFracture","impactElasticity","shearElasticity","speedOfSound","stressStrainCurve","toughness","stiffness","_e","shouldShowAll","copyRaw","buttonText","liquidName","gasName","solidAdj","liquidAdj","gasAdj","reasonableEdged","bluntDefense","magmaSafe","compressiveElasticity","bulk","tensileElasticity","young","shear","bendingYield","bendingFracture","bendingElasticity","realisticElasticity","anchor","update_elasticity","lam√©","poisson_state","poisson","dfwiki","description","id","exists","set_exists","tempTypes","tempType","temp","set_value","token","placeholder","number","tokenValue","$emit","attacks","defense","values","Material","Weapon","Attack","sanitize","running","temp_one","temp_two","other_spec_heat","popoverID","show","getSigFig","num","trailers","sigFigs","sig","f","toMatrix","arr","options","selected","score","computed","code","displayArray","do_fdm","VueRouter","routes","path","Home","Helper","Roguelike","Atmospherics","router","base","process","VueKatex","globalOptions","hljs","registerLanguage","rust","hljsVuePlugin","config","productionTip","render","h","App","$mount"],"mappings":"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","file":"js/app.7c0591be.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"js/\" + ({\"about\":\"about\"}[chunkId]||chunkId) + \".\" + {\"about\":\"59d0a5b8\",\"chunk-57a68258\":\"df314b47\"}[chunkId] + \".js\"\n \t}\n\n \t// object to store loaded and loading wasm modules\n \tvar installedWasmModules = {};\n\n \tfunction promiseResolve() { return Promise.resolve(); }\n\n \tvar wasmImportObjects = {\n \t\t\"f87f\": function() {\n \t\t\treturn {\n \t\t\t\t\"./putnam_github_io_bg.js\": {\n \t\t\t\t\t\"__wbindgen_object_drop_ref\": function(p0i32) {\n \t\t\t\t\t\treturn installedModules[\"675b\"].exports[\"__wbindgen_object_drop_ref\"](p0i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbindgen_is_undefined\": function(p0i32) {\n \t\t\t\t\t\treturn installedModules[\"675b\"].exports[\"__wbindgen_is_undefined\"](p0i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbindgen_in\": function(p0i32,p1i32) {\n \t\t\t\t\t\treturn installedModules[\"675b\"].exports[\"__wbindgen_in\"](p0i32,p1i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbindgen_number_get\": function(p0i32,p1i32) {\n \t\t\t\t\t\treturn installedModules[\"675b\"].exports[\"__wbindgen_number_get\"](p0i32,p1i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbindgen_boolean_get\": function(p0i32) {\n \t\t\t\t\t\treturn installedModules[\"675b\"].exports[\"__wbindgen_boolean_get\"](p0i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbindgen_string_get\": function(p0i32,p1i32) {\n \t\t\t\t\t\treturn installedModules[\"675b\"].exports[\"__wbindgen_string_get\"](p0i32,p1i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbindgen_is_object\": function(p0i32) {\n \t\t\t\t\t\treturn installedModules[\"675b\"].exports[\"__wbindgen_is_object\"](p0i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbindgen_jsval_loose_eq\": function(p0i32,p1i32) {\n \t\t\t\t\t\treturn installedModules[\"675b\"].exports[\"__wbindgen_jsval_loose_eq\"](p0i32,p1i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbindgen_error_new\": function(p0i32,p1i32) {\n \t\t\t\t\t\treturn installedModules[\"675b\"].exports[\"__wbindgen_error_new\"](p0i32,p1i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbindgen_object_clone_ref\": function(p0i32) {\n \t\t\t\t\t\treturn installedModules[\"675b\"].exports[\"__wbindgen_object_clone_ref\"](p0i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_getwithrefkey_15c62c2b8546208d\": function(p0i32,p1i32) {\n \t\t\t\t\t\treturn installedModules[\"675b\"].exports[\"__wbg_getwithrefkey_15c62c2b8546208d\"](p0i32,p1i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_new_abda76e883ba8a5f\": function() {\n \t\t\t\t\t\treturn installedModules[\"675b\"].exports[\"__wbg_new_abda76e883ba8a5f\"]();\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_stack_658279fe44541cf6\": function(p0i32,p1i32) {\n \t\t\t\t\t\treturn installedModules[\"675b\"].exports[\"__wbg_stack_658279fe44541cf6\"](p0i32,p1i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_error_f851667af71bcfc6\": function(p0i32,p1i32) {\n \t\t\t\t\t\treturn installedModules[\"675b\"].exports[\"__wbg_error_f851667af71bcfc6\"](p0i32,p1i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_process_0cc2ada8524d6f83\": function(p0i32) {\n \t\t\t\t\t\treturn installedModules[\"675b\"].exports[\"__wbg_process_0cc2ada8524d6f83\"](p0i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_versions_c11acceab27a6c87\": function(p0i32) {\n \t\t\t\t\t\treturn installedModules[\"675b\"].exports[\"__wbg_versions_c11acceab27a6c87\"](p0i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_node_7ff1ce49caf23815\": function(p0i32) {\n \t\t\t\t\t\treturn installedModules[\"675b\"].exports[\"__wbg_node_7ff1ce49caf23815\"](p0i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbindgen_is_string\": function(p0i32) {\n \t\t\t\t\t\treturn installedModules[\"675b\"].exports[\"__wbindgen_is_string\"](p0i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_require_a746e79b322b9336\": function(p0i32,p1i32,p2i32) {\n \t\t\t\t\t\treturn installedModules[\"675b\"].exports[\"__wbg_require_a746e79b322b9336\"](p0i32,p1i32,p2i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_crypto_2036bed7c44c25e7\": function(p0i32) {\n \t\t\t\t\t\treturn installedModules[\"675b\"].exports[\"__wbg_crypto_2036bed7c44c25e7\"](p0i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_msCrypto_a21fc88caf1ecdc8\": function(p0i32) {\n \t\t\t\t\t\treturn installedModules[\"675b\"].exports[\"__wbg_msCrypto_a21fc88caf1ecdc8\"](p0i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_getRandomValues_b99eec4244a475bb\": function(p0i32,p1i32) {\n \t\t\t\t\t\treturn installedModules[\"675b\"].exports[\"__wbg_getRandomValues_b99eec4244a475bb\"](p0i32,p1i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_static_accessor_NODE_MODULE_cf6401cc1091279e\": function() {\n \t\t\t\t\t\treturn installedModules[\"675b\"].exports[\"__wbg_static_accessor_NODE_MODULE_cf6401cc1091279e\"]();\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_randomFillSync_065afffde01daa66\": function(p0i32,p1i32,p2i32) {\n \t\t\t\t\t\treturn installedModules[\"675b\"].exports[\"__wbg_randomFillSync_065afffde01daa66\"](p0i32,p1i32,p2i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_get_57245cc7d7c7619d\": function(p0i32,p1i32) {\n \t\t\t\t\t\treturn installedModules[\"675b\"].exports[\"__wbg_get_57245cc7d7c7619d\"](p0i32,p1i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_length_6e3bbe7c8bd4dbd8\": function(p0i32) {\n \t\t\t\t\t\treturn installedModules[\"675b\"].exports[\"__wbg_length_6e3bbe7c8bd4dbd8\"](p0i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbindgen_is_function\": function(p0i32) {\n \t\t\t\t\t\treturn installedModules[\"675b\"].exports[\"__wbindgen_is_function\"](p0i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_newnoargs_b5b063fc6c2f0376\": function(p0i32,p1i32) {\n \t\t\t\t\t\treturn installedModules[\"675b\"].exports[\"__wbg_newnoargs_b5b063fc6c2f0376\"](p0i32,p1i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_next_579e583d33566a86\": function(p0i32) {\n \t\t\t\t\t\treturn installedModules[\"675b\"].exports[\"__wbg_next_579e583d33566a86\"](p0i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_next_aaef7c8aa5e212ac\": function(p0i32) {\n \t\t\t\t\t\treturn installedModules[\"675b\"].exports[\"__wbg_next_aaef7c8aa5e212ac\"](p0i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_done_1b73b0672e15f234\": function(p0i32) {\n \t\t\t\t\t\treturn installedModules[\"675b\"].exports[\"__wbg_done_1b73b0672e15f234\"](p0i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_value_1ccc36bc03462d71\": function(p0i32) {\n \t\t\t\t\t\treturn installedModules[\"675b\"].exports[\"__wbg_value_1ccc36bc03462d71\"](p0i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_iterator_6f9d4f28845f426c\": function() {\n \t\t\t\t\t\treturn installedModules[\"675b\"].exports[\"__wbg_iterator_6f9d4f28845f426c\"]();\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_get_765201544a2b6869\": function(p0i32,p1i32) {\n \t\t\t\t\t\treturn installedModules[\"675b\"].exports[\"__wbg_get_765201544a2b6869\"](p0i32,p1i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_call_97ae9d8645dc388b\": function(p0i32,p1i32) {\n \t\t\t\t\t\treturn installedModules[\"675b\"].exports[\"__wbg_call_97ae9d8645dc388b\"](p0i32,p1i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbindgen_string_new\": function(p0i32,p1i32) {\n \t\t\t\t\t\treturn installedModules[\"675b\"].exports[\"__wbindgen_string_new\"](p0i32,p1i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_self_6d479506f72c6a71\": function() {\n \t\t\t\t\t\treturn installedModules[\"675b\"].exports[\"__wbg_self_6d479506f72c6a71\"]();\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_window_f2557cc78490aceb\": function() {\n \t\t\t\t\t\treturn installedModules[\"675b\"].exports[\"__wbg_window_f2557cc78490aceb\"]();\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_globalThis_7f206bda628d5286\": function() {\n \t\t\t\t\t\treturn installedModules[\"675b\"].exports[\"__wbg_globalThis_7f206bda628d5286\"]();\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_global_ba75c50d1cf384f4\": function() {\n \t\t\t\t\t\treturn installedModules[\"675b\"].exports[\"__wbg_global_ba75c50d1cf384f4\"]();\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_isArray_27c46c67f498e15d\": function(p0i32) {\n \t\t\t\t\t\treturn installedModules[\"675b\"].exports[\"__wbg_isArray_27c46c67f498e15d\"](p0i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_instanceof_ArrayBuffer_e5e48f4762c5610b\": function(p0i32) {\n \t\t\t\t\t\treturn installedModules[\"675b\"].exports[\"__wbg_instanceof_ArrayBuffer_e5e48f4762c5610b\"](p0i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_buffer_3f3d764d4747d564\": function(p0i32) {\n \t\t\t\t\t\treturn installedModules[\"675b\"].exports[\"__wbg_buffer_3f3d764d4747d564\"](p0i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_new_8c3f0052272a457a\": function(p0i32) {\n \t\t\t\t\t\treturn installedModules[\"675b\"].exports[\"__wbg_new_8c3f0052272a457a\"](p0i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_set_83db9690f9353e79\": function(p0i32,p1i32,p2i32) {\n \t\t\t\t\t\treturn installedModules[\"675b\"].exports[\"__wbg_set_83db9690f9353e79\"](p0i32,p1i32,p2i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_length_9e1ae1900cb0fbd5\": function(p0i32) {\n \t\t\t\t\t\treturn installedModules[\"675b\"].exports[\"__wbg_length_9e1ae1900cb0fbd5\"](p0i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_instanceof_Uint8Array_971eeda69eb75003\": function(p0i32) {\n \t\t\t\t\t\treturn installedModules[\"675b\"].exports[\"__wbg_instanceof_Uint8Array_971eeda69eb75003\"](p0i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_newwithlength_f5933855e4f48a19\": function(p0i32) {\n \t\t\t\t\t\treturn installedModules[\"675b\"].exports[\"__wbg_newwithlength_f5933855e4f48a19\"](p0i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_subarray_58ad4efbb5bcb886\": function(p0i32,p1i32,p2i32) {\n \t\t\t\t\t\treturn installedModules[\"675b\"].exports[\"__wbg_subarray_58ad4efbb5bcb886\"](p0i32,p1i32,p2i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbindgen_debug_string\": function(p0i32,p1i32) {\n \t\t\t\t\t\treturn installedModules[\"675b\"].exports[\"__wbindgen_debug_string\"](p0i32,p1i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbindgen_throw\": function(p0i32,p1i32) {\n \t\t\t\t\t\treturn installedModules[\"675b\"].exports[\"__wbindgen_throw\"](p0i32,p1i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbindgen_memory\": function() {\n \t\t\t\t\t\treturn installedModules[\"675b\"].exports[\"__wbindgen_memory\"]();\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t};\n \t\t},\n \t};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n\n \t\t// Fetch + compile chunk loading for webassembly\n\n \t\tvar wasmModules = {\"chunk-57a68258\":[\"f87f\"]}[chunkId] || [];\n\n \t\twasmModules.forEach(function(wasmModuleId) {\n \t\t\tvar installedWasmModuleData = installedWasmModules[wasmModuleId];\n\n \t\t\t// a Promise means \"currently loading\" or \"already loaded\".\n \t\t\tif(installedWasmModuleData)\n \t\t\t\tpromises.push(installedWasmModuleData);\n \t\t\telse {\n \t\t\t\tvar importObject = wasmImportObjects[wasmModuleId]();\n \t\t\t\tvar req = fetch(__webpack_require__.p + \"\" + {\"f87f\":\"058c5dee9d1392383e0e\"}[wasmModuleId] + \".module.wasm\");\n \t\t\t\tvar promise;\n \t\t\t\tif(importObject instanceof Promise && typeof WebAssembly.compileStreaming === 'function') {\n \t\t\t\t\tpromise = Promise.all([WebAssembly.compileStreaming(req), importObject]).then(function(items) {\n \t\t\t\t\t\treturn WebAssembly.instantiate(items[0], items[1]);\n \t\t\t\t\t});\n \t\t\t\t} else if(typeof WebAssembly.instantiateStreaming === 'function') {\n \t\t\t\t\tpromise = WebAssembly.instantiateStreaming(req, importObject);\n \t\t\t\t} else {\n \t\t\t\t\tvar bytesPromise = req.then(function(x) { return x.arrayBuffer(); });\n \t\t\t\t\tpromise = bytesPromise.then(function(bytes) {\n \t\t\t\t\t\treturn WebAssembly.instantiate(bytes, importObject);\n \t\t\t\t\t});\n \t\t\t\t}\n \t\t\t\tpromises.push(installedWasmModules[wasmModuleId] = promise.then(function(res) {\n \t\t\t\t\treturn __webpack_require__.w[wasmModuleId] = (res.instance || res).exports;\n \t\t\t\t}));\n \t\t\t}\n \t\t});\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \t// object with all WebAssembly.instance exports\n \t__webpack_require__.w = {};\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","module.exports = __webpack_public_path__ + \"media/Excited.42279c1a.mp4\";","import Vue from 'vue'\n\nimport BootstrapVue from 'bootstrap-vue'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'bootstrap-vue/dist/bootstrap-vue.css'\n\nVue.use(BootstrapVue)\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"dark\",attrs:{\"id\":\"app\"}},[_c('div',{attrs:{\"id\":\"nav\"}},[_c('router-link',{attrs:{\"to\":\"/\"}},[_vm._v(\"Home\")]),_vm._v(\" | \"),_c('router-link',{attrs:{\"to\":\"/about\"}},[_vm._v(\"About\")]),_vm._v(\" | \"),_c('router-link',{attrs:{\"to\":\"/helper\"}},[_vm._v(\"DF material helper\")]),_vm._v(\" | \"),_c('router-link',{attrs:{\"to\":\"/roguelike\"}},[_vm._v(\"Roguelike?\")])],1),_c('router-view')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=bba7c6b2&\"\nvar script = {}\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('b-container',{attrs:{\"fluid\":\"\"}},[_c('b-row',{attrs:{\"no-gutters\":\"\"}},[_c('b-col',[_c('b-card',[_c('b-card-title',[_vm._v(\" Open source projects \")]),_c('b-card-sub-title',[_vm._v(\" Programming projects worth \"),_c('i',[_vm._v(\"something\")]),_vm._v(\". \")]),_c('work-entry',{attrs:{\"name\":\"Auxmos\",\"href\":\"https://github.com/Putnam3145/auxmos\",\"blurb\":\"Multithreaded atmospherics plugin for BYOND\"}},[_vm._v(\" A total rewrite of Space Station 13's atmospherics in Rust. Multithreaded, with a lot of experiments thereof in the branches. Most of my time with it has been spent on algorithmic improvements. It performs very well, though the integration has been somewhat painful, helped along greatly by the fact that Auxtools, the library it's based on, is quite robust. Overall, the project is very fun for me, and, while some of the more monolithic functions in it horrify me, I still enjoy programming it and learning new things in the process. \"),_c('b-link',{attrs:{\"to\":\"atmospherics\"}},[_vm._v(\"Here's a significantly more in-depth look at it, including the history of SS13's atmos.\")])],1),_c('work-entry',{attrs:{\"name\":\"Janet-D\",\"href\":\"https://github.com/Putnam3145/janet-d\",\"blurb\":\"Template-based bindings for a lisp-like\"}},[_vm._v(\" A high-level interface to the \"),_c('b-link',{attrs:{\"href\":\"https://janet-lang.org/\"}},[_vm._v(\"Janet scripting language\")]),_vm._v(\" for \"),_c('b-link',{attrs:{\"href\":\"https://dlang.org/\"}},[_vm._v(\"D\")]),_vm._v(\". I primarily wrote this because I like D and don't particularly like Lua, so I was desparate to find another scripting language to work with. It's gone onto the backburner somewhat due to a combination of low interest and low demand, but it was and is very fun to make. \")],1),_c('work-entry',{attrs:{\"name\":\"Dhatetris\",\"href\":\"https://github.com/Putnam3145/dhatetris\",\"blurb\":\"Hatetris TGM\"}},[_vm._v(\" A more standards-compliant version of qntm's \"),_c('b-link',{attrs:{\"href\":\"https://qntm.org/hatetris\"}},[_vm._v(\"Hatetris\")]),_vm._v(\", whose \"),_c('b-link',{attrs:{\"href\":\"https://qntm.org/self\"}},[_vm._v(\"Javascript love\")]),_vm._v(\" I can respect but cannot agree with. The primary differences between the original hatetris and this one are, first, that mine goes a few levels deep using an inverse-minimax algorithm to try to find the most pessimal move a few moves ahead in parallel; second, that mine controls more like the usual standards, with T-spins, wall kicks, holds and so on. Primarily I wanted to do some OpenGL. Unfortunately, the library I was using had only compatibility with OpenGL 2, so I didn't really learn much useful. \")],1),_c('work-entry',{attrs:{\"name\":\"Misc. D modules\",\"href\":\"https://github.com/Putnam3145/D-modules\",\"blurb\":\"Higher-dimensional algebra, mostly\"}},[_vm._v(\" A few D modules I've made: a template that implements the \"),_c('b-link',{attrs:{\"href\":\"https://en.wikipedia.org/wiki/Cayley%E2%80%93Dickson_construction\"}},[_vm._v(\"Cayley-Dickson construction\")]),_vm._v(\" over the complex numbers and beyond (the template aliases itself to complex numbers at low enough recursion), a manual implementation of quaternions, and a wrapper around an arbitrary value that lets you set that value using a function called entirely in a separate thread. That last one was made when I was pretty naive with threading, so, go easy on it. \")],1),_c('work-entry',{attrs:{\"name\":\"DF material helper\",\"href\":\"https://putnam3145.github.io/helper\",\"blurb\":\"Educational modding tool\"}},[_vm._v(\" I love Dwarf Fortress, and it's sparked a mild enthusiasm in me of many subjects. This is the product of one such minor enthusiasm. This is a little online widget that helps guide you through the creation of a modded material in Dwarf Fortress, providing the physical and gameplay ramifications of various material properties. Perhaps my favorite part is the elasticity page, which uses various real properties of materials Dwarf Fortress itself doesn't quite get to, and includes an embed to an interactive graph showing how the poisson ratio can be seen as a constrained proportionality constant between the elastic moduli in isotropic homogenous materials. \")])],1)],1),_c('b-col',[_c('b-card',[_c('b-card-title',[_vm._v(\" Dwarf Fortress mods \")]),_c('b-card-sub-title',[_vm._v(\" How I got started. \")]),_c('work-entry',{attrs:{\"name\":\"Fortbent\",\"href\":\"http://www.bay12forums.com/smf/index.php?topic=89267.0\",\"blurb\":\"Homestuck mod, oh no!\"}},[_vm._v(\" My first ever programming project, unfortunately. Also grew outside of scope, so hard that unlike the DBZ mod I no longer find myself able to support it. Features a new relationship system built by hacking on top of Dwarf Fortress's, a new in-game semi-economy based on goings-on elsewhere in your fortress's civilization, 144 hand-coded class/aspect combos (this was a mistake), procedurally generated combination attacks based on each of those (also a mistake), and an entire custom skills system built to support this, all in Lua. One may figure out why I said I dislike Lua. \")]),_c('work-entry',{attrs:{\"name\":\"SCP\",\"href\":\"http://www.bay12forums.com/smf/index.php?topic=105645.0\",\"blurb\":\"SCP wiki mod\"}},[_vm._v(\" Less a mod and more a series of tech demos. Demonstration of Dwarf Fortress's unused multiple-souls vector with Dr. Bright; the robustness of Dwarf Fortress's materials system with SCP-294; demonstration of how complicated behavior can be replicated with mere interactions with SCP-173; and so on and so forth. Had the beginnings of a more \\\"management-sim\\\" like system in the form of \\\"trust points\\\" that can be gained by successfully containing SCPs and spent on equipment, safer SCPs etc., but I eventually decided that if I'm going to make an SCP management sim, I'd be better of making it standalone. I haven't, primarily because the idea doesn't actually interest me that much. \")]),_c('work-entry',{attrs:{\"name\":\"Sparking\",\"href\":\"http://www.bay12forums.com/smf/index.php?topic=100799.0\",\"blurb\":\"Dragon Ball mod, what?\"}},[_vm._v(\" A Dragon Ball Z mod that I started when I was 17 and got waaaaaay beyond the originally planned scope. Has a fully-featured transformations system built on top of another fully-featured ki system, both written in Lua using DFHack. One may notice a pattern. The main reason this has lasted so long for me is specifically because of how much I enjoy implementing new ideas and techniques I've learned about: for a very long time, whenever I would think up a new way to interact with Dwarf Fortress, this mod is where I would do it. The overall effect is a mod that is terrifyingly fully-featured and thought-out for me; it doesn't help that I actually play it. \")]),_c('work-entry',{attrs:{\"name\":\"Fantastic\",\"href\":\"http://www.bay12forums.com/smf/index.php?topic=150752.0\",\"blurb\":\"Mini-mods\"}},[_vm._v(\" I just throw whatever minor things I make into this mod pack whenever I make them. Primary feature is Materials+, which used an older version of the above material helper to implement nearly every metal on the periodic table, with reasonably accurate features. Bit of a silly mod: molybdenum short swords abound. Depending on how the steam release goes, I'm likely to break this into many smaller releases. \")])],1)],1),_c('b-col',[_c('b-card',[_c('b-card-title',[_vm._v(\" Contributions \")]),_c('b-card-sub-title',[_vm._v(\" Contributing is as important as creating \")]),_c('b-modal',{attrs:{\"id\":\"cit_warn\",\"body-bg-variant\":\"dark\",\"body-text-variant\":\"light\",\"header-border-variant\":\"dark\",\"footer-border-variant\":\"dark\",\"footer-bg-variant\":\"warning\",\"header-bg-variant\":\"dark\",\"header-text-variant\":\"light\"},scopedSlots:_vm._u([{key:\"modal-footer\",fn:function(){return [_c('b-button',{attrs:{\"variant\":\"success\"},on:{\"click\":function($event){return _vm.$bvModal.hide('cit_warn')}}},[_vm._v(\"No\")]),_c('b-button',{attrs:{\"variant\":\"danger\",\"href\":\"https://github.com/Citadel-Station-13/Citadel-Station-13\"}},[_vm._v(\"Yes\")])]},proxy:true}])},[_vm._v(\" Repository contains NSFW content. Are you sure? \")]),_c('work-entry',{attrs:{\"name\":\"Space Station 13\",\"href\":\"https://spacestation13.com/\",\"blurb\":\"Before Among Us and Dwarf Fortress, there was this\"}},[_vm._v(\" A simulationist social deduction game. I'm a maintainer for the \"),_c('b-button',{directives:[{name:\"b-modal\",rawName:\"v-b-modal.cit_warn\",modifiers:{\"cit_warn\":true}}],attrs:{\"variant\":\"link\"}},[_vm._v(\"Citadel Station 13 fork.\")]),_vm._v(\" Actual programming work done includes overhauling the \\\"dynamic\\\" game mode to be more responsive to changes in game state, a \"),_c('b-link',{attrs:{\"href\":\"https://github.com/Putnam3145/extools\"}},[_vm._v(\"port of C++-implemented atmospherics\")]),_vm._v(\", the aforementioned auxmos and optimization of NSFW game systems that it seems nobody else could tolerate dealing with. \")],1),_c('work-entry',{attrs:{\"name\":\"DFHack\",\"href\":\"https://github.com/DFHack/dfhack\",\"blurb\":\"Memory hacking library for Dwarf Fortress\"}},[_vm._v(\" A high-level memory hacking library for Dwarf Fortress. All of the mods on this page use it extensively. I've contributed various scripts and occasional data structure research to it. My excessive use of DFHack in modding eventually made me come to the realization that it's less \\\"modding\\\" that I enjoy and more \\\"creating systems that interact with existing systems\\\", which is why I'm a Space Station 13 maintainer now. \")]),_c('work-entry',{attrs:{\"name\":\"Auxtools\",\"href\":\"https://github.com/willox/auxtools\",\"blurb\":\"External tools for BYOND\"}},[_vm._v(\" In somewhat of the same vein as DFHack. A Rust-based project that hooks into BYOND's internals, allowing access to many of its features from within a Rust program. Used to make auxmos. I've personally contributed a few bugfixes and features to it, including the methods for accessing turf tiles. \")])],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('b-card',[_c('b-card-title',[_c('b-button',{directives:[{name:\"b-toggle\",rawName:\"v-b-toggle:[name]\",arg:_vm.name}],attrs:{\"block\":\"\",\"variant\":\"primary\"}},[_vm._v(_vm._s(_vm.name))])],1),_c('b-card-sub-title',[_vm._v(\" \"+_vm._s(_vm.blurb)+\" \")]),_c('b-collapse',{attrs:{\"id\":_vm.name}},[_c('b-card-text',[_vm._t(\"default\")],2),_c('b-card-footer',[_c('b-link',{attrs:{\"href\":_vm.href}},[_vm._v(\"Link\")])],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <b-card>\n        <b-card-title>\n            <b-button block variant=\"primary\" v-b-toggle:[name]>{{name}}</b-button>\n        </b-card-title>\n        <b-card-sub-title>\n            {{blurb}}\n        </b-card-sub-title>\n        <b-collapse :id = \"name\">\n        <b-card-text>\n        <slot></slot>\n        </b-card-text>\n        <b-card-footer>\n            <b-link :href=\"href\">Link</b-link>\n        </b-card-footer>\n        </b-collapse>\n    </b-card>\n</template>\n\n<script>\nexport default {\n    props: {\n        name: String,\n        href: String,\n        blurb: String\n    }\n}\n</script>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./WorkEntry.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./WorkEntry.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./WorkEntry.vue?vue&type=template&id=3f5d2d96&\"\nimport script from \"./WorkEntry.vue?vue&type=script&lang=js&\"\nexport * from \"./WorkEntry.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\n  <b-container fluid>\n    <b-row no-gutters>\n      <b-col>\n        <b-card>\n          <b-card-title>\n            Open source projects\n          </b-card-title>\n          <b-card-sub-title>\n            Programming projects worth <i>something</i>.\n          </b-card-sub-title>\n      <work-entry name=\"Auxmos\" href=\"https://github.com/Putnam3145/auxmos\" blurb = \"Multithreaded atmospherics plugin for BYOND\">\n        A total rewrite of Space Station 13's atmospherics in Rust. Multithreaded, with a lot of experiments thereof in the branches. Most of my time with it has been spent on algorithmic improvements. It performs very well, though the integration has been somewhat painful, helped along greatly by the fact that Auxtools, the library it's based on, is quite robust. Overall, the project is very fun for me, and, while some of the more monolithic functions in it horrify me, I still enjoy programming it and learning new things in the process. <b-link to=\"atmospherics\">Here's a significantly more in-depth look at it, including the history of SS13's atmos.</b-link>\n      </work-entry>\n      <work-entry name=\"Janet-D\" href=\"https://github.com/Putnam3145/janet-d\" blurb=\"Template-based bindings for a lisp-like\">\n        A high-level interface to the <b-link href=\"https://janet-lang.org/\">Janet scripting language</b-link> for <b-link href=\"https://dlang.org/\">D</b-link>. I primarily wrote this because I like D and don't particularly like Lua, so I was desparate to find another scripting language to work with. It's gone onto the backburner somewhat due to a combination of low interest and low demand, but it was and is very fun to make.\n      </work-entry>\n      <work-entry name=\"Dhatetris\" href=\"https://github.com/Putnam3145/dhatetris\" blurb=\"Hatetris TGM\">\n        A more standards-compliant version of qntm's <b-link href=\"https://qntm.org/hatetris\">Hatetris</b-link>, whose <b-link href=\"https://qntm.org/self\">Javascript love</b-link> I can respect but cannot agree with. The primary differences between the original hatetris and this one are, first, that mine goes a few levels deep using an inverse-minimax algorithm to try to find the most pessimal move a few moves ahead in parallel; second, that mine controls more like the usual standards, with T-spins, wall kicks, holds and so on. Primarily I wanted to do some OpenGL. Unfortunately, the library I was using had only compatibility with OpenGL 2, so I didn't really learn much useful.\n      </work-entry>\n      <work-entry name=\"Misc. D modules\" href=\"https://github.com/Putnam3145/D-modules\" blurb=\"Higher-dimensional algebra, mostly\">\n        A few D modules I've made: a template that implements the <b-link href=\"https://en.wikipedia.org/wiki/Cayley%E2%80%93Dickson_construction\">Cayley-Dickson construction</b-link> over the complex numbers and beyond (the template aliases itself to complex numbers at low enough recursion), a manual implementation of quaternions, and a wrapper around an arbitrary value that lets you set that value using a function called entirely in a separate thread. That last one was made when I was pretty naive with threading, so, go easy on it.\n      </work-entry>\n      <work-entry name=\"DF material helper\" href=\"https://putnam3145.github.io/helper\" blurb = \"Educational modding tool\">\n        I love Dwarf Fortress, and it's sparked a mild enthusiasm in me of many subjects. This is the product of one such minor enthusiasm. This is a little online widget that helps guide you through the creation of a modded material in Dwarf Fortress, providing the physical and gameplay ramifications of various material properties. Perhaps my favorite part is the elasticity page, which uses various real properties of materials Dwarf Fortress itself doesn't quite get to, and includes an embed to an interactive graph showing how the poisson ratio can be seen as a constrained proportionality constant between the elastic moduli in isotropic homogenous materials.\n      </work-entry>\n        </b-card>\n      </b-col>\n      <b-col>\n        <b-card>\n          <b-card-title>\n            Dwarf Fortress mods\n          </b-card-title>\n          <b-card-sub-title>\n            How I got started.\n          </b-card-sub-title>\n        <work-entry name=\"Fortbent\" href=\"http://www.bay12forums.com/smf/index.php?topic=89267.0\" blurb = \"Homestuck mod, oh no!\">\n          My first ever programming project, unfortunately. Also grew outside of scope, so hard that unlike the DBZ mod I no longer find myself able to support it. Features a new relationship system built by hacking on top of Dwarf Fortress's, a new in-game semi-economy based on goings-on elsewhere in your fortress's civilization, 144 hand-coded class/aspect combos (this was a mistake), procedurally generated combination attacks based on each of those (also a mistake), and an entire custom skills system built to support this, all in Lua. One may figure out why I said I dislike Lua.\n        </work-entry>\n        <work-entry name=\"SCP\" href=\"http://www.bay12forums.com/smf/index.php?topic=105645.0\" blurb = \"SCP wiki mod\">\n          Less a mod and more a series of tech demos. Demonstration of Dwarf Fortress's unused multiple-souls vector with Dr. Bright; the robustness of Dwarf Fortress's materials system with SCP-294; demonstration of how complicated behavior can be replicated with mere interactions with SCP-173; and so on and so forth. Had the beginnings of a more \"management-sim\" like system in the form of \"trust points\" that can be gained by successfully containing SCPs and spent on equipment, safer SCPs etc., but I eventually decided that if I'm going to make an SCP management sim, I'd be better of making it standalone. I haven't, primarily because the idea doesn't actually interest me that much.\n        </work-entry>\n        <work-entry name=\"Sparking\" href=\"http://www.bay12forums.com/smf/index.php?topic=100799.0\" blurb = \"Dragon Ball mod, what?\">\n          A Dragon Ball Z mod that I started when I was 17 and got waaaaaay beyond the originally planned scope. Has a fully-featured transformations system built on top of another fully-featured ki system, both written in Lua using DFHack. One may notice a pattern. The main reason this has lasted so long for me is specifically because of how much I enjoy implementing new ideas and techniques I've learned about: for a very long time, whenever I would think up a new way to interact with Dwarf Fortress, this mod is where I would do it. The overall effect is a mod that is terrifyingly fully-featured and thought-out for me; it doesn't help that I actually play it.\n        </work-entry>\n        <work-entry name=\"Fantastic\" href=\"http://www.bay12forums.com/smf/index.php?topic=150752.0\" blurb = \"Mini-mods\">\n          I just throw whatever minor things I make into this mod pack whenever I make them. Primary feature is Materials+, which used an older version of the above material helper to implement nearly every metal on the periodic table, with reasonably accurate features. Bit of a silly mod: molybdenum short swords abound. Depending on how the steam release goes, I'm likely to break this into many smaller releases.\n        </work-entry>\n        </b-card>\n      </b-col>\n      <b-col>\n        <b-card>\n          <b-card-title>\n            Contributions\n          </b-card-title>\n          <b-card-sub-title>\n            Contributing is as important as creating\n          </b-card-sub-title>\n          <b-modal id=\"cit_warn\" body-bg-variant=\"dark\" body-text-variant=\"light\" header-border-variant=\"dark\" footer-border-variant=\"dark\" footer-bg-variant=\"warning\" header-bg-variant = \"dark\" header-text-variant=\"light\">\n              Repository contains NSFW content. Are you sure?\n              <template #modal-footer>\n                <b-button\n                  variant=\"success\"\n                   @click=\"$bvModal.hide('cit_warn')\">No</b-button>\n                <b-button\n                  variant=\"danger\"\n                  href=\"https://github.com/Citadel-Station-13/Citadel-Station-13\"\n                  >Yes</b-button>\n              </template>\n          </b-modal>\n          <work-entry name=\"Space Station 13\" href=\"https://spacestation13.com/\" blurb = \"Before Among Us and Dwarf Fortress, there was this\">\n            A simulationist social deduction game. I'm a maintainer for the  <b-button variant=\"link\" v-b-modal.cit_warn>Citadel Station 13 fork.</b-button> Actual programming work done includes overhauling the \"dynamic\" game mode to be more responsive to changes in game state, a <b-link href=\"https://github.com/Putnam3145/extools\">port of C++-implemented atmospherics</b-link>, the aforementioned auxmos and optimization of NSFW game systems that it seems nobody else could tolerate dealing with.\n          </work-entry>\n          <work-entry name=\"DFHack\" href=\"https://github.com/DFHack/dfhack\" blurb = \"Memory hacking library for Dwarf Fortress\">\n            A high-level memory hacking library for Dwarf Fortress. All of the mods on this page use it extensively. I've contributed various scripts and occasional data structure research to it. My excessive use of DFHack in modding eventually made me come to the realization that it's less \"modding\" that I enjoy and more \"creating systems that interact with existing systems\", which is why I'm a Space Station 13 maintainer now.\n          </work-entry>\n          <work-entry name=\"Auxtools\" href=\"https://github.com/willox/auxtools\" blurb = \"External tools for BYOND\">\n            In somewhat of the same vein as DFHack. A Rust-based project that hooks into BYOND's internals, allowing access to many of its features from within a Rust program. Used to make auxmos. I've personally contributed a few bugfixes and features to it, including the methods for accessing turf tiles.\n          </work-entry>\n        </b-card>\n      </b-col>\n    </b-row>\n  </b-container>\n</template>\n\n<script>\nimport WorkEntry from \"@/components/WorkEntry.vue\"\n\nexport default {\n  name: 'Home',\n  components: {\n      WorkEntry\n  },\n}\n</script>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Home.vue?vue&type=template&id=5ccc7c48&\"\nimport script from \"./Home.vue?vue&type=script&lang=js&\"\nexport * from \"./Home.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('b-container',{attrs:{\"fluid\":\"\"}},[_c('b-row',[_c('b-col',{attrs:{\"cols\":\"8\"}},[_c('b-tabs',{attrs:{\"pills\":\"\",\"vertical\":\"\",\"card\":\"\"},model:{value:(_vm.curTab),callback:function ($$v) {_vm.curTab=$$v},expression:\"curTab\"}},[_c('b-tab',{attrs:{\"title\":\"Game\"}},[_c('div',{staticClass:\"input_category tab_content\",staticStyle:{\"grid-template-rows\":\"repeat(2,min-content)\"}},[_c('token',{attrs:{\"token\":\"STATE_NAME\",\"description\":\"The material's noun.\",\"placeholder\":\"iron\"},model:{value:(_vm.name),callback:function ($$v) {_vm.name=$$v},expression:\"name\"}},[_vm._v(\" Like \\\"piles of \"+_vm._s(_vm.name)+\"\\\". If this is the same as ADJ, it'll automatically use STATE_NAME_ADJ instead. \")]),_c('token',{attrs:{\"token\":\"STATE_ADJ\",\"description\":\"The material's adjective.\",\"placeholder\":\"iron\"},model:{value:(_vm.adj),callback:function ($$v) {_vm.adj=$$v},expression:\"adj\"}},[_vm._v(\" Like \\\"\"+_vm._s(_vm.adj)+\" long sword\\\". If this is the same as NAME, it'll automatically use STATE_NAME_ADJ instead. \")]),_c('token',{attrs:{\"token\":\"COLOR\",\"description\":\"The material's color. Used in graphics as of steam release.\",\"placeholder\":\"GRAY\"},model:{value:(_vm.color),callback:function ($$v) {_vm.color=$$v},expression:\"color\"}},[_vm._v(\" A list of tokens is available \"),_c('b-link',{attrs:{\"href\":\"https://dwarffortresswiki.org/index.php/DF2014:Color#Color_tokens\"}},[_vm._v(\"here.\")]),_vm._v(\" I would have a drop-down with every color, but then I'd have to make a little raw parser so you can add your own arbitrarily, and so on. Horrible. \")],1),_c('token',{attrs:{\"type\":\"number\",\"number\":\"\",\"token\":\"MAT_VALUE\",\"description\":\"Item values are multiplied by this.\",\"placeholder\":\"10\"},model:{value:(_vm.matValue),callback:function ($$v) {_vm.matValue=_vm._n($$v)},expression:\"matValue\"}},[_vm._v(\" You can actually set this to a negative number, forcing others to pay you to take your garbage away. Fun facts. \")])],1)]),_c('b-tab',{attrs:{\"title\":\"Thermal\"}},[_c('b-container',[_c('b-row',[_c('temperature-input',{attrs:{\"exists\":_vm.melting_exists,\"name\":\"Melting point\",\"id\":\"MELTING_POINT\",\"description\":\"The temperature at which this material becomes a liquid.\",\"optional\":\"\"},on:{\"update:exists\":function($event){_vm.melting_exists=$event}},model:{value:(_vm.melting),callback:function ($$v) {_vm.melting=$$v},expression:\"melting\"}},[_vm._v(\" There's no special conditions that need to happen for melting. I've had materials I expected to be liquid freeze underground and thus be unusable. Keep these things in mind! \")]),_c('temperature-input',{attrs:{\"exists\":_vm.boiling_exists,\"name\":\"Boiling point\",\"id\":\"BOILING_POINT\",\"description\":\"The temperature at which this material becomes a gas.\",\"optional\":\"\"},on:{\"update:exists\":function($event){_vm.boiling_exists=$event}},model:{value:(_vm.boiling),callback:function ($$v) {_vm.boiling=$$v},expression:\"boiling\"}},[_vm._v(\" If you set this very low, an object of this material can still be made in reactions, but it'll boil instantly. Very useful for reactions. \")])],1),_c('b-row',[_c('temperature-input',{attrs:{\"exists\":_vm.heatdam_exists,\"name\":\"Heat damage point\",\"id\":\"HEATDAM_POINT\",\"description\":\"Above this temperature, any item made of this material starts taking damage.\",\"optional\":\"\",\"disabled\":\"\"},on:{\"update:exists\":function($event){_vm.heatdam_exists=$event}},model:{value:(_vm.heatdam),callback:function ($$v) {_vm.heatdam=$$v},expression:\"heatdam\"}},[_vm._v(\" Damage is tattering etc. This token is underused, I think. \")]),_c('temperature-input',{attrs:{\"exists\":_vm.colddam_exists,\"name\":\"Cold damage point\",\"id\":\"COLDDAM_POINT\",\"description\":\"Below this temperature, any item made of this material starts taking damage.\",\"optional\":\"\",\"disabled\":\"\"},on:{\"update:exists\":function($event){_vm.colddam_exists=$event}},model:{value:(_vm.colddam),callback:function ($$v) {_vm.colddam=$$v},expression:\"colddam\"}},[_vm._v(\" Damage is tattering etc. This token is underused, I think. \")])],1),_c('b-row',[_c('temperature-input',{attrs:{\"exists\":_vm.ignition_exists,\"name\":\"Ignition point\",\"id\":\"IGNITION_POINT\",\"description\":\"Above this temperature, items made of this material catch fire.\",\"optional\":\"\",\"disabled\":\"\"},on:{\"update:exists\":function($event){_vm.ignition_exists=$event}},model:{value:(_vm.ignition),callback:function ($$v) {_vm.ignition=$$v},expression:\"ignition\"}},[_vm._v(\" If you don't set a heatdam point along with this, you'll end up having perma-fires. \")])],1),_c('b-row',[_c('token',{attrs:{\"type\":\"number\",\"number\":\"\",\"token\":\"SPEC_HEAT\",\"description\":\"The specific heat capacity, in J/kg-K.\",\"placeholder\":\"450\",\"href\":\"https://en.wikipedia.org/wiki/Specific_heat_capacity\",\"name\":\"Specific heat capacity\",\"complex\":\"\"},scopedSlots:_vm._u([{key:\"dwarf\",fn:function(){return [_vm._v(\" Temperature is stored as a fixed-point number and this is the denominator of the fractional part. In other words, the \\\"minimum temperature unit\\\" of a material is 1/SPEC_HEAT. When an object of one temperature interfaces with another, the whole parts of the temperatures are compared, A-B, and then each material's \\\"minimum temperature unit\\\" is incremented by this value. Below is a simulator for this process: it uses the same process (with floats instead of fixed-points, mind) and works as fast as Dwarf Fortress's default speed. \"),_c('heat-sim',{attrs:{\"specHeat\":_vm.specHeat}})]},proxy:true},{key:\"science\",fn:function(){return [_vm._v(\" This is how much heat it takes to increase a kilogram of material by one kelvin. The most familiar example is water, whose value in DF's units is 4184. The calorie is a unit of energy based on water's heat capacity, so don't get confused about that. Water's heat capacity is 1 calorie/gram-kelvin, or 1000 calories/kilogram-kelvin, or 4184 Joules/kilogram-kelvin. \")]},proxy:true}]),model:{value:(_vm.specHeat),callback:function ($$v) {_vm.specHeat=_vm._n($$v)},expression:\"specHeat\"}})],1)],1)],1),_c('b-tab',{attrs:{\"title\":\"Mass\"}},[_c('div',{staticClass:\"tab_content input_category\"},[_c('b-form-row',[_c('token',{attrs:{\"type\":\"number\",\"number\":\"\",\"token\":\"SOLID_DENSITY\",\"description\":\"The density of the material when solid, in kilograms/meter^3.\",\"placeholder\":\"7850\"},model:{value:(_vm.solidDensity),callback:function ($$v) {_vm.solidDensity=_vm._n($$v)},expression:\"solidDensity\"}},[_vm._v(\" This is actually one of the more important stats, for blunt weapons, ammo and, surprisingly, armor. Armor of sufficient density can stop low-momentum attacks cold. For ammo, there's a max velocity weapons can fire at and a max force, so there's a maximum density that matters. For crossbows, this is 1666, which is hilariously low, only mattering for wood ammunition and adamantine, which is so sharp and strong it doesn't even matter. \")]),_c('token',{attrs:{\"type\":\"number\",\"number\":\"\",\"token\":\"LIQUID_DENSITY\",\"description\":\"The density of the material when liquid.\",\"placeholder\":\"6980\"},model:{value:(_vm.liquidDensity),callback:function ($$v) {_vm.liquidDensity=_vm._n($$v)},expression:\"liquidDensity\"}},[_vm._v(\" This only matters for hauling. \")])],1),_c('token',{attrs:{\"type\":\"number\",\"number\":\"\",\"token\":\"MOLAR_MASS\",\"description\":\"The molar mass of this material, in kilograms/mol.\",\"placeholder\":\"55485\",\"complex\":\"\",\"href\":\"https://en.wikipedia.org/wiki/Molar_mass\",\"name\":\"Molar mass\"},scopedSlots:_vm._u([{key:\"dwarf\",fn:function(){return [_vm._v(\" Last I checked, even Toady seems somewhat baffled as to the provenance of this token. It's mostly only important for computational fluid dynamics--the specific gas constant is \"),_c('katex-element',{attrs:{\"expression\":\"\\\\frac{R}{M}\"}}),_vm._v(\", where R is the \"),_c('b-link',{attrs:{\"href\":\"https://en.wikipedia.org/wiki/Gas_constant\"}},[_vm._v(\"gas constant\")]),_vm._v(\" and M is the molar mass, and this is important for, say, force calculations for moving air, but Dwarf Fortress just doesn't have any of that. \")]},proxy:true},{key:\"science\",fn:function(){return [_vm._v(\" This is simply the mass of a mole of material. This is important not only in computational fluid dynamics, but in chemistry--you probably want to measure your reagents by moles rather than by mass for stoichiometry purposes. Of course, all reactions in DF are custom-coded in the raws, and this is unlikely to change any time soon (although it is possible it will change eventually). \")]},proxy:true}]),model:{value:(_vm.molarMass),callback:function ($$v) {_vm.molarMass=_vm._n($$v)},expression:\"molarMass\"}})],1)]),_c('b-tab',{attrs:{\"title\":\"Strength\"}},[_c('b-container',[_c('b-row',[_c('b-button-group',[_c('b-button',{attrs:{\"variant\":\"primary\"},on:{\"click\":_vm.strengthPlaceholders}},[_vm._v(\"Use standard DF placeholders\")]),_c('b-button',{attrs:{\"variant\":\"primary\"},on:{\"click\":_vm.realisticPlaceholders}},[_vm._v(\"Use engineering placeholders\")]),_c('b-button',{directives:[{name:\"b-toggle\",rawName:\"v-b-toggle.strengthPlaceholder\",modifiers:{\"strengthPlaceholder\":true}}],attrs:{\"variant\":\"info\"}},[_vm._v(\"?\")])],1),_c('b-collapse',{attrs:{\"id\":\"strengthPlaceholder\"}},[_c('p',[_vm._v(\"The former just sets shear yield to tensile yield, compressive yield to 3.5x shear yield and fractures to double yield.\")]),_c('p',[_vm._v(\"The latter instead sets shear yield to \"),_c('katex-element',{attrs:{\"expression\":\"\\\\sqrt{\\\\frac{1}{3}}\"}}),_vm._v(\" tensile yield, but does the rest the same, \"),_c('b-link',{attrs:{\"href\":\"https://en.wikipedia.org/wiki/Shear_strength#Comparison\"}},[_vm._v(\"as engineers apparently do sometimes.\")])],1)])],1),_c('b-form-row',[_c('token',{attrs:{\"type\":\"number\",\"number\":\"\",\"token\":\"TENSILE_YIELD\",\"description\":\"The tension at which this material no longer bounces back when stretched.\",\"complex\":\"\",\"name\":\"Tensile yield strength\",\"href\":\"https://en.wikipedia.org/wiki/Yield_(engineering)\",\"placeholder\":\"155000\"},scopedSlots:_vm._u([{key:\"dwarf\",fn:function(){return [_vm._v(\" Only matters for latched-on edged creature attacks--so, bites. Higher is better. \")]},proxy:true},{key:\"science\",fn:function(){return [_vm._v(\" This is the pressure above which a material being pulled on from both sides won't go back to its original length when the pulling stops. It's often of much greater import than treated in DF. \")]},proxy:true}]),model:{value:(_vm.tensileYield),callback:function ($$v) {_vm.tensileYield=_vm._n($$v)},expression:\"tensileYield\"}}),_c('token',{attrs:{\"type\":\"number\",\"number\":\"\",\"token\":\"TENSILE_FRACTURE\",\"description\":\"The tension at which this material will tear when stretched.\",\"placeholder\":\"310000\",\"complex\":\"\",\"name\":\"Tensile strength\",\"href\":\"https://en.wikipedia.org/wiki/Ultimate_tensile_strength\"},scopedSlots:_vm._u([{key:\"dwarf\",fn:function(){return [_vm._v(\" Basically the same as TENSILE_YIELD, though probably more important in its (pretty small) niche. \")]},proxy:true},{key:\"science\",fn:function(){return [_vm._v(\" This represents the pressure at which a material breaks when pulled on. This is actually usually treated as incredibly important in engineering--this is often called \\\"ultimate strength\\\" in real life, even omitting the \\\"tensile\\\" part. There's even an important derived quantity, \\\"specific strength\\\", which \"),_c('katex-element',{attrs:{\"expression\":\"\\\\frac{T_s}{\\\\rho}\"}}),_vm._v(\", where \"),_c('katex-element',{attrs:{\"expression\":\"T_s\"}}),_vm._v(\" is ultimate tensile strength and \"),_c('katex-element',{attrs:{\"expression\":\"\\\\rho\"}}),_vm._v(\" is density. For your material, that's \"+_vm._s(Math.round(_vm.tensileFracture / (_vm.solidDensity / 1000)) / 1000)+\" \"),_c('katex-element',{attrs:{\"expression\":\"\\\\frac{kN \\\\cdot m}{kg}\"}}),_vm._v(\"; compare to steel's 91.72, or adamantine's 25,000 (!), or graphene's 62,453\"),_c('citation',{attrs:{\"id\":\"1\"}},[_c('b-link',{attrs:{\"href\":\"https://en.wikipedia.org/wiki/Specific_strength\"}},[_vm._v(\"Wikipedia, \\\"Specific Strength\\\"\")]),_vm._v(\"; cited from \"),_c('b-link',{attrs:{\"href\":\"https://web.archive.org/web/20140328060419/https://www.nobelprize.org/nobel_prizes/physics/laureates/2010/advanced-physicsprize2010.pdf\"}},[_vm._v(\"the Royal Swedish Academy of Sciences article on the 2010 Nobel laureates,\")]),_vm._v(\", which has a section on graphene's strength from which the value was (hopefully) derived via dimensional analysis.\")],1)]},proxy:true}]),model:{value:(_vm.tensileFracture),callback:function ($$v) {_vm.tensileFracture=_vm._n($$v)},expression:\"tensileFracture\"}})],1),_c('b-form-row',[_c('token',{attrs:{\"type\":\"number\",\"number\":\"\",\"token\":\"SHEAR_YIELD\",\"description\":\"The stress at which this material no longer bounces back when sheared.\",\"placeholder\":\"155000\",\"complex\":\"\",\"name\":\"Shear yield strength\",\"href\":\"https://en.wikipedia.org/wiki/Shear_strength\"},scopedSlots:_vm._u([{key:\"dwarf\",fn:function(){return [_vm._v(\" Technically involved in edged attacks, but since SHEAR_FRACTURE is multiplied by the contact area (which is 5 at the very least) in combat calculations, it doesn't matter except for bolts, and even then only barely. If you mod in ammo or attacks that have a size of 1, this will matter, otherwise not so much. This is also copied to TORSION_YIELD, which is like TENSILE but for blunt attacks that latch... which vanilla DF has none of. \")]},proxy:true},{key:\"science\",fn:function(){return [_vm._v(\" This is the \"),_c('i',[_vm._v(\"twisting\")]),_vm._v(\" pressure at which a material won't untwist. This can also be derived via \"),_c('b-link',{attrs:{\"href\":\"https://en.wikipedia.org/wiki/Von_Mises_yield_criterion\"}},[_vm._v(\"some math\")]),_vm._v(\", but I think this requires more information than I take here. \")]},proxy:true}]),model:{value:(_vm.shearYield),callback:function ($$v) {_vm.shearYield=_vm._n($$v)},expression:\"shearYield\"}}),_c('token',{attrs:{\"type\":\"number\",\"number\":\"\",\"token\":\"SHEAR_FRACTURE\",\"description\":\"The stress at which this material will break when sheared.\",\"placeholder\":\"310000\",\"complex\":\"\",\"name\":\"Shear strength\",\"href\":\"https://en.wikipedia.org/wiki/Shear_strength\"},scopedSlots:_vm._u([{key:\"dwarf\",fn:function(){return [_vm._v(\" This is, for all intents and purposes, the \"),_c('i',[_vm._v(\"only\")]),_vm._v(\" stat that matters in defense against bladed weapons. Technically a bladed attack failure becomes a blunt attack, so all those stats matter too, but for bladed defense, nothing else matters as much as this, even remotely. On bladed offense, MAX_EDGE is a close second. \")]},proxy:true},{key:\"science\",fn:function(){return [_vm._v(\" This one isn't nearly as important as tensile strength, at least in common use in engineering. Apparently it's often just estimated as 60% of tensile strength, assumedly due to the \"),_c('b-link',{attrs:{\"href\":\"https://en.wikipedia.org/wiki/Von_Mises_yield_criterion\"}},[_vm._v(\"von Mises yield criterion\")]),_vm._v(\" as well as the fact that, according to engineers, \"),_c('katex-element',{attrs:{\"expression\":\"\\\\sqrt{\\\\frac{1}{3}} = 0.6\"}}),_vm._v(\" Dwarf Fortress estimates it as 100% of tensile strength, which is a bit more than that. \")]},proxy:true}]),model:{value:(_vm.shearFracture),callback:function ($$v) {_vm.shearFracture=_vm._n($$v)},expression:\"shearFracture\"}})],1),_c('b-form-row',[_c('token',{attrs:{\"type\":\"number\",\"number\":\"\",\"token\":\"COMPRESSIVE_YIELD\",\"description\":\"The pressure at which this material no longer bounces back when compressed.\",\"placeholder\":\"542500\",\"complex\":\"\",\"name\":\"Compressive yield strength\",\"href\":\"https://en.wikipedia.org/wiki/Compressive_strength\"},scopedSlots:_vm._u([{key:\"dwarf\",fn:function(){return [_vm._v(\" This only matters for pinching and strangulation. However, it's copied to IMPACT_YIELD, which matters quite a lot: a material with a low IMPACT_YIELD can be completely deflected by armor with high density (imagine a semi-solid material going \"),_c('i',[_vm._v(\"splat\")]),_vm._v(\" against a wall). Interestingly enough, though, a high impact yield actually makes armor \"),_c('i',[_vm._v(\"worse\")]),_vm._v(\"--the material coefficient in blunt armor calculations is equal to 2*IMPACT_FRACTURE - IMPACT_YIELD--for this material, \"+_vm._s(2*_vm.compressiveFracture - _vm.compressiveYield)+\". I would assume this is to represent the fact that a low IMPACT_FRACTURE allows armor to \\\"absorb impact\\\" more--any denting is energy dissipated into the armor, rather than into your squishy, squishy body. \")]},proxy:true},{key:\"science\",fn:function(){return [_vm._v(\" This one's an odd one. There's a real-life notion of compressive strength, important in engineering... but whether that means yield or fracture strength is dependent on context. The game uses approximations of 3.5x tensile strength, because, for the most part, there's really no data on this. This is probably more of a Dwarf Fortress problem than a problem with reality, of course. \")]},proxy:true}]),model:{value:(_vm.compressiveYield),callback:function ($$v) {_vm.compressiveYield=_vm._n($$v)},expression:\"compressiveYield\"}}),_c('token',{attrs:{\"type\":\"number\",\"number\":\"\",\"token\":\"COMPRESSIVE_FRACTURE\",\"description\":\"The pressure at which this material will break when compressed.\",\"placeholder\":\"1085000\"},model:{value:(_vm.compressiveFracture),callback:function ($$v) {_vm.compressiveFracture=_vm._n($$v)},expression:\"compressiveFracture\"}},[_vm._v(\" This is copied to impact fracture, which, along with shear fracture and to a lesser extent density and impact yield (albeit inversely) are the only properties that matter for armor, period. Everything else is related to skill, weapon and armor themselves. The higher the better, for this and shear fracture. For density, higher is better on defense, but lower-skilled armor users will have trouble wearing it without being encumbered. For reality: see compressive yield. \")])],1),_c('b-form-row',[_c('token',{attrs:{\"type\":\"number\",\"number\":\"\",\"token\":\"MAX_EDGE\",\"description\":\"How sharp the material can get.\",\"placeholder\":\"10000\"},model:{value:(_vm.maxEdge),callback:function ($$v) {_vm.maxEdge=_vm._n($$v)},expression:\"maxEdge\"}},[_vm._v(\" This is the sharpest a weapon of this material can be. Lower-quality weapons are less sharp, so this also, to an extent, makes quality more important for weapons, though higher is \"),_c('i',[_vm._v(\"always\")]),_vm._v(\" better. \")])],1)],1)],1),_c('b-tab',{attrs:{\"lazy\":\"\",\"title\":\"Elasticity\"}},[_c('elasticity',{model:{value:(_vm.elasticity),callback:function ($$v) {_vm.elasticity=$$v},expression:\"elasticity\"}})],1),_c('b-tab',{attrs:{\"title\":\"Facts\"}},[_c('combat-sims',{attrs:{\"name\":_vm.solidName,\"solidDensity\":_vm.solidDensity,\"impactYield\":_vm.impactYield,\"impactFracture\":_vm.impactFracture,\"impactElasticity\":_vm.impactElasticity,\"shearYield\":_vm.shearYield,\"shearFracture\":_vm.shearFracture,\"shearElasticity\":_vm.shearElasticity,\"maxEdge\":_vm.maxEdge}},[_c('b-tabs',[_c('b-tab',{attrs:{\"title\":\"Interesting properties\"}},[_vm._v(\" Speed of sound is \"),_c('katex-element',{attrs:{\"display-mode\":\"\",\"expression\":_vm.speedOfSound}}),_c('br'),_vm._v(\" Your material can be considered \"),(_vm.shearFracture / _vm.shearYield > 1.1 && _vm.shearElasticity > 100)?_c('span',[_vm._v(\"ductile\")]):_c('span',[_vm._v(\"brittle\")]),_vm._v(\". \")],1),_c('b-tab',{attrs:{\"title\":\"Stress-strain properties\"}},[_c('p',[_vm._v(\"The below is the \\\"approximate\\\" \"),_c('b-link',{attrs:{\"href\":\"https://en.wikipedia.org/wiki/Stress‚Äìstrain_curve\"}},[_vm._v(\"stress-strain curve\")]),_vm._v(\" of your material. Up to yield it should be reasonably accurate, after that it's just a silly flat line because, well, there's no simulation of any of the properties between yield and fracture.\")],1),_c('svg',{attrs:{\"width\":\"505px\",\"height\":\"300px\"}},[_c('path',{attrs:{\"id\":\"stressStrain\",\"d\":_vm.stressStrainCurve,\"stroke\":\"cyan\",\"fill-opacity\":\"0\",\"stroke-width\":\"3\"}}),_c('path',{attrs:{\"d\":\"M 100 0 V 300 H 500\",\"fill-opacity\":\"0\",\"stroke-width\":\"2\",\"stroke\":\"white\"}}),_c('text',{attrs:{\"x\":100 + (_vm.tensileYield / _vm.tensileFracture) * 400,\"y\":\"50\",\"stroke\":\"white\",\"fill\":\"white\"}},[_vm._v(\"Yield\")]),_c('circle',{attrs:{\"cx\":100 + (_vm.tensileYield / _vm.tensileFracture) * 400,\"cy\":\"30\",\"r\":\"4\",\"fill\":\"white\"}}),_c('text',{attrs:{\"text-anchor\":\"middle\",\"x\":\"500\",\"y\":\"30\",\"stroke\":\"white\",\"fill\":\"white\",\"dy\":\".3em\"}},[_vm._v(\"x\")]),_c('text',{attrs:{\"text-anchor\":\"end\",\"x\":\"500\",\"y\":\"50\",\"stroke\":\"white\",\"fill\":\"white\"}},[_vm._v(\"Fracture\")]),_c('text',{attrs:{\"text-anchor\":\"end\",\"x\":\"100\",\"y\":\"250\",\"stroke\":\"white\",\"fill\":\"white\"}},[_vm._v(\"Stress (œÉ)\")]),_c('text',{attrs:{\"text-anchor\":\"start\",\"x\":\"150\",\"y\":\"290\",\"stroke\":\"white\",\"transform\":\"translate(-10 0)\",\"fill\":\"white\"}},[_c('textPath',{attrs:{\"href\":\"#stressStrain\"}},[_vm._v(\"Stress-strain curve\")])]),_c('text',{attrs:{\"text-anchor\":\"start\",\"x\":\"200\",\"y\":\"295\",\"stroke\":\"white\",\"fill\":\"white\"}},[_vm._v(\"Strain (Œµ)\")])]),_c('katex-element',{attrs:{\"display-mode\":\"\",\"expression\":_vm.toughness}}),_c('p',[_vm._v(\"The above equation and result gives you the \"),_c('b-link',{attrs:{\"href\":\"https://en.wikipedia.org/wiki/Toughness\"}},[_vm._v(\"toughness\")]),_vm._v(\" of the material. This is, of course, calculated via the integral of the above graph, using the \"),_c('b-link',{attrs:{\"href\":\"https://en.wikipedia.org/wiki/Trapezoidal_rule\"}},[_vm._v(\"trapezoidal rule\")]),_vm._v(\" to get... well, an exact value. It has no meaning whatsoever in Dwarf Fortress... or does it? There is a sense in which it might apply: blunt defense does increase with the difference between fracture and yield, just like this value does. However, the STRAIN_AT_YIELD doesn't matter here, while you will find that changing it does change the numbers above, inversely.\")],1)],1),_c('b-tab',{attrs:{\"title\":\"Stiffness tensor\"}},[_c('p',[_vm._v(\"This is the material's stiffness tensor in matrix form. Since all materials in DF are kinda inherently isomorphic and homogenous, it's that particular form of it. If the game allowed other kinds of materials... well, it'd get a lot \"),_c('i',[_vm._v(\"weirder\")]),_vm._v(\", for one thing. A tool such as this might be entirely \"),_c('i',[_vm._v(\"necessary\")]),_vm._v(\", even!\")]),_c('katex-element',{attrs:{\"display-mode\":\"\",\"expression\":_vm.stiffness}})],1)],1)],1)],1),(false)?_c('b-tab',{attrs:{\"title\":\"Help\"}},[_c('p',[_vm._v(\"You don't need to use the exact values given or adhere strictly to the helper's choices regarding weapons/armor/anvils and so on. This is a \"),_c('i',[_vm._v(\"helper\")]),_vm._v(\", not a standard.\")]),_c('p',[_vm._v(\"If you don't know where to start finding a material's properties, here's a few sources:\"),_c('br'),_c('b-link',{attrs:{\"href\":\"http://www.matweb.com/index.aspx\"}},[_vm._v(\"Matweb\")]),_c('br'),_c('b-link',{attrs:{\"href\":\"http://www.wolframalpha.com/\"}},[_vm._v(\"Wolfram Alpha\")]),_c('br'),_c('b-link',{attrs:{\"href\":\"https://en.wikipedia.org/wiki/Main_Page\"}},[_vm._v(\"Wikipedia\")]),_c('br'),_c('b-link',{attrs:{\"href\":\"http://www.webelements.com/\"}},[_vm._v(\"WebElements\")]),_c('br')],1),_c('p',[_vm._v(\"If any properties are unavailable, the game will use placeholders. However, if those properties happen to be strength, it would be best to estimate to the best of your ability, such as by using a similar material (E.G iron for cobalt).\")]),_c('p',[_vm._v(\"Some properties are outright optional, i.e. NONE is valid. For these, the helper has a toggle.\")])]):_vm._e()],1)],1),_c('b-col',[_c('b-button-toolbar',[_c('b-form-checkbox',{attrs:{\"button\":\"\",\"button-variant\":_vm.shouldShowAll ? 'success' : 'danger'},model:{value:(_vm.shouldShowAll),callback:function ($$v) {_vm.shouldShowAll=$$v},expression:\"shouldShowAll\"}},[_vm._v(\" Show\"+_vm._s(_vm.shouldShowAll ? 'ing' : '')+\" all \")]),(_vm.showAll)?_c('b-button',{attrs:{\"variant\":\"primary\"},on:{\"click\":_vm.copyRaw}},[_vm._v(_vm._s(_vm.buttonText))]):_vm._e()],1),_c('pre',{staticStyle:{\"text-align\":\"left\"},attrs:{\"id\":\"result\"}},[_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.showGame),expression:\"showGame\"}]},[(_vm.name==_vm.adj)?_c('span',[_vm._v(\"\\n[STATE_NAME_ADJ:ALL_SOLID:\"+_vm._s(_vm.solidName)+\"]\\n[STATE_NAME_ADJ:LIQUID:\"+_vm._s(_vm.liquidName)+\"]\\n[STATE_NAME_ADJ:GAS:\"+_vm._s(_vm.gasName)+\"]\")]):_c('span',[_vm._v(\"\\n[STATE_NAME:ALL_SOLID:\"+_vm._s(_vm.solidName)+\"]\\n[STATE_NAME:LIQUID:\"+_vm._s(_vm.liquidName)+\"]\\n[STATE_NAME:GAS:\"+_vm._s(_vm.gasName)+\"]\\n[STATE_ADJ:ALL_SOLID:\"+_vm._s(_vm.solidAdj)+\"]\\n[STATE_ADJ:LIQUID:\"+_vm._s(_vm.liquidAdj)+\"]\\n[STATE_ADJ:GAS:\"+_vm._s(_vm.gasAdj)+\"]\")]),_vm._v(\"\\n[DISPLAY_COLOR:0:7:1]\\n[BUILD_COLOR:0:7:1]\\n[MATERIAL_VALUE:\"+_vm._s(Math.round(_vm.matValue))+\"]\")]),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.showThermal),expression:\"showThermal\"}]},[_vm._v(\"\\n[SPEC_HEAT:\"+_vm._s(Math.round(_vm.specHeat))+\"]\"),(_vm.melting_exists)?_c('span',[_vm._v(\"\\n[MELTING_POINT:\"+_vm._s(Math.round(_vm.melting))+\"]\")]):_vm._e(),(_vm.boiling_exists)?_c('span',[_vm._v(\"\\n[BOILING_POINT:\"+_vm._s(Math.round(_vm.boiling))+\"]\")]):_vm._e(),(_vm.ignition_exists)?_c('span',[_vm._v(\"\\n[IGNITE_POINT:\"+_vm._s(Math.round(_vm.ignition))+\"]\")]):_vm._e(),(_vm.colddam_exists)?_c('span',[_vm._v(\"\\n[COLDDAM_POINT:\"+_vm._s(Math.round(_vm.colddam))+\"]\")]):_vm._e(),(_vm.heatdam_exists)?_c('span',[_vm._v(\"\\n[HEATDAM_POINT:\"+_vm._s(Math.round(_vm.heatdam))+\"]\")]):_vm._e()]),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.showStrength),expression:\"showStrength\"}]},[_vm._v(\"\\n\"),(_vm.reasonableEdged && _vm.maxEdge >= 10000)?_c('span',[_vm._v(\"[ITEMS_WEAPON]\")]):_vm._e(),(_vm.solidDensity < 10000 && _vm.impactFracture > 100000)?_c('span',[_vm._v(\"[ITEMS_WEAPON_RANGED]\")]):_vm._e(),(_vm.solidDensity * _vm.shearFracture > 500000000)?_c('span',[_vm._v(\"[ITEMS_AMMO]\")]):_vm._e(),(_vm.impactFracture > 500000)?_c('span',[_vm._v(\"[ITEMS_DIGGER]\\n\")]):_vm._e(),(_vm.reasonableEdged && _vm.bluntDefense > 1000000)?_c('span',[_vm._v(\"[ITEMS_ARMOR]\\n\")]):_vm._e(),(_vm.magmaSafe && _vm.bluntDefense > 500000)?_c('span',[_vm._v(\"[ITEMS_ANVIL]\\n\")]):_vm._e()]),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.showGame),expression:\"showGame\"}]},[_vm._v(\"[ITEMS_METAL]\\n[ITEMS_HARD]\\n[ITEMS_SCALED]\\n[ITEMS_BARRED]\")]),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.showMass),expression:\"showMass\"}]},[_vm._v(\"\\n[SOLID_DENSITY:\"+_vm._s(Math.round(_vm.solidDensity))+\"]\\n[LIQUID_DENSITY:\"+_vm._s(Math.round(_vm.liquidDensity))+\"]\\n[MOLAR_MASS:\"+_vm._s(Math.round(_vm.molarMass))+\"]\")]),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.showStrength),expression:\"showStrength\"}]},[_vm._v(\"\\n[IMPACT_YIELD:\"+_vm._s(Math.round(_vm.impactYield))+\"]\\n[IMPACT_FRACTURE:\"+_vm._s(Math.round(_vm.impactFracture))+\"]\\n[IMPACT_STRAIN_AT_YIELD:\"+_vm._s(Math.round(_vm.impactElasticity))+\"]\\n[COMPRESSIVE_YIELD:\"+_vm._s(Math.round(_vm.compressiveYield))+\"]\\n[COMPRESSIVE_FRACTURE:\"+_vm._s(Math.round(_vm.compressiveFracture))+\"]\\n[COMPRESSIVE_STRAIN_AT_YIELD:\"+_vm._s(Math.round(_vm.compressiveElasticity))+\"] bulk modulus \"+_vm._s(_vm.elasticity.bulk / 1000)+\" GPa\\n[TENSILE_YIELD:\"+_vm._s(Math.round(_vm.tensileYield))+\"]\\n[TENSILE_FRACTURE:\"+_vm._s(Math.round(_vm.tensileFracture))+\"]\\n[TENSILE_STRAIN_AT_YIELD:\"+_vm._s(Math.round(_vm.tensileElasticity))+\"] young's modulus \"+_vm._s(_vm.elasticity.young / 1000)+\" GPa\\n[TORSION_YIELD:\"+_vm._s(Math.round(_vm.shearYield))+\"]\\n[TORSION_FRACTURE:\"+_vm._s(Math.round(_vm.shearFracture))+\"]\\n[TORSION_STRAIN_AT_YIELD:\"+_vm._s(Math.round(_vm.shearElasticity))+\"]\\n[SHEAR_YIELD:\"+_vm._s(Math.round(_vm.shearYield))+\"]\\n[SHEAR_FRACTURE:\"+_vm._s(Math.round(_vm.shearFracture))+\"]\\n[SHEAR_STRAIN_AT_YIELD:\"+_vm._s(Math.round(_vm.shearElasticity))+\"] shear modulus \"+_vm._s(_vm.elasticity.shear / 1000)+\" GPa\\n[BENDING_YIELD:\"+_vm._s(Math.round(_vm.bendingYield))+\"]\\n[BENDING_FRACTURE:\"+_vm._s(Math.round(_vm.bendingFracture))+\"]\\n[BENDING_STRAIN_AT_YIELD:\"+_vm._s(Math.round(_vm.bendingElasticity))+\"]\\n[MAX_EDGE:\"+_vm._s(Math.round(_vm.maxEdge))+\"]\")]),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.showGame),expression:\"showGame\"}]},[_vm._v(\"\\n[STATE_COLOR:ALL_SOLID:\"+_vm._s(_vm.color)+\"]\")]),_vm._v(\"\\n\")])],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"tab_content\"},[_c('b-container',[_c('b-row',[_c('b-form-checkbox',{model:{value:(_vm.realisticElasticity),callback:function ($$v) {_vm.realisticElasticity=$$v},expression:\"realisticElasticity\"}},[_vm._v(\" Realistic auto-fill \")]),_c('b-button',{directives:[{name:\"b-toggle\",rawName:\"v-b-toggle.realism-help\",modifiers:{\"realism-help\":true}}],attrs:{\"variant\":\"info\"}},[_vm._v(\"?\")]),_c('b-collapse',{attrs:{\"accordion\":\"elasticity-accord\",\"id\":\"realism-help\"}},[_vm._v(\" All materials in Dwarf Fortress are homogenous and isotropic, and all homogonous and isotropic materials can calculate all of the below properties using any two of them. This does this automatically. Wikipedia has an ever-in-depth \"),_c('b-link',{attrs:{\"href\":\"https://en.wikipedia.org/wiki/Hooke%27s_law\"}},[_vm._v(\"article on this\")]),_vm._v(\", with the specific table I'm using being on the \"),_c('b-link',{attrs:{\"href\":\"https://en.wikipedia.org/wiki/Template:Elastic_moduli\"}},[_vm._v(\"elastic modulus template.\")]),_vm._v(\". \")],1)],1)],1),_c('b-input-group',{scopedSlots:_vm._u([{key:\"append\",fn:function(){return [_c('b-button',{directives:[{name:\"b-toggle\",rawName:\"v-b-toggle.bulk-help\",modifiers:{\"bulk-help\":true}}],attrs:{\"variant\":\"info\"}},[_vm._v(\"Bulk\")])]},proxy:true}])},[_c('b-input-group-prepend',[(_vm.realisticElasticity)?_c('b-form-radio',{attrs:{\"name\":\"anchor\",\"squared\":\"\",\"button-variant\":\"outline-dark\",\"button\":\"\",\"value\":\"bulk\"},model:{value:(_vm.anchor),callback:function ($$v) {_vm.anchor=$$v},expression:\"anchor\"}},[(_vm.anchor=='bulk')?_c('b-icon-lock'):_c('b-icon-unlock')],1):_vm._e()],1),_c('b-form-input',{attrs:{\"number\":\"\",\"type\":\"number\",\"value\":_vm.bulk},on:{\"input\":function($event){return _vm.update_elasticity($event,'bulk')}}})],1),_c('b-collapse',{attrs:{\"accordion\":\"elasticity-accord\",\"id\":\"bulk-help\"}},[_c('token-info',{attrs:{\"name\":\"Bulk modulus\",\"href\":\"https://en.wikipedia.org/wiki/Bulk_modulus\",\"token\":\"IMPACT_STRAIN_AT_YIELD\"},scopedSlots:_vm._u([{key:\"dwarf\",fn:function(){return [_vm._v(\" Used for COMPRESSIVE_STRAIN_AT_YIELD and IMPACT_STRAIN_AT_YIELD. When an attack fails to reach the momentum threshold for breaking through an attack, the momentum of the attack will still pass through, but will have its momentum divded by IMPACT_STRAIN_AT_YIELD/50000. This is very near zero for most materials; however, STRAIN_AT_YIELD is assumed 50000 for chain armor. \")]},proxy:true},{key:\"science\",fn:function(){return [_vm._v(\" If you apply pressure to a sphere of material from all sides equally, the sphere will shrink; the bulk modulus is a measure of how much it shrinks, specifically how much pressure it takes to divide its radius by two. Most materials will break far before then, but this is a constant of proportionality. \"),_c('svg',{attrs:{\"width\":\"40\",\"height\":\"40\"}},[_c('title',[_vm._v(\"A circle is squashed to half of its radius.\")]),_c('circle',{attrs:{\"id\":\"bulk\",\"cx\":\"20\",\"cy\":\"20\",\"r\":\"20\",\"fill\":\"gray\"}},[_c('animate',{attrs:{\"begin\":\"bulk.click\",\"attributeName\":\"r\",\"to\":\"10\",\"dur\":\"3s\",\"fill\":\"freeze\"}})])])]},proxy:true}])})],1),_c('b-input-group',{scopedSlots:_vm._u([{key:\"append\",fn:function(){return [_c('b-button',{directives:[{name:\"b-toggle\",rawName:\"v-b-toggle.young-help\",modifiers:{\"young-help\":true}}],attrs:{\"variant\":\"info\"}},[_vm._v(\"Young's\")])]},proxy:true}])},[_c('b-input-group-prepend',[(_vm.realisticElasticity)?_c('b-form-radio',{attrs:{\"name\":\"anchor\",\"button\":\"\",\"squared\":\"\",\"button-variant\":\"outline-dark\",\"value\":\"young\"},model:{value:(_vm.anchor),callback:function ($$v) {_vm.anchor=$$v},expression:\"anchor\"}},[(_vm.anchor=='young')?_c('b-icon-lock'):_c('b-icon-unlock')],1):_vm._e()],1),_c('b-form-input',{attrs:{\"number\":\"\",\"type\":\"number\",\"value\":_vm.young},on:{\"input\":function($event){return _vm.update_elasticity($event,'young')}}})],1),_c('b-collapse',{attrs:{\"accordion\":\"elasticity-accord\",\"id\":\"young-help\"}},[_c('token-info',{attrs:{\"name\":\"Young's modulus\",\"href\":\"https://en.wikipedia.org/wiki/Young%27s_modulus\",\"token\":\"TENSILE_STRAIN_AT_YIELD\"},scopedSlots:_vm._u([{key:\"dwarf\",fn:function(){return [_vm._v(\" Used for TENSILE_STRAIN_AT_YIELD and BENDING_STRAIN_AT_YIELD. Neither of these are used much by the game, if at all. If they are, it's in wrestling or, more likely, in attacks transferring momentum to parent parts via bending. \")]},proxy:true},{key:\"science\",fn:function(){return [_vm._v(\" If you pull on a rod on both sides, it'll stretch out. This is how much pressure has to be applied to stretch it so that it's at twice the length. Again, most materials will break well before this, and it's a constant of proportionality. \"),_c('svg',{attrs:{\"width\":\"100\",\"height\":\"30\"}},[_c('title',[_vm._v(\"A rectangle, twice as wide as it is long, is stretched to be four times as wide as it is long when clicked.\")]),_c('polygon',{attrs:{\"id\":\"youngs\",\"points\":\"25,0 25,25 75,25 75,0\",\"fill\":\"gray\"}},[_c('animate',{attrs:{\"begin\":\"youngs.click\",\"attributeName\":\"points\",\"to\":\"0,0 0,25 100,25 100,0\",\"dur\":\"3s\",\"fill\":\"freeze\"}})])])]},proxy:true}])})],1),_c('b-input-group',{scopedSlots:_vm._u([{key:\"append\",fn:function(){return [_c('b-button',{directives:[{name:\"b-toggle\",rawName:\"v-b-toggle.shear-help\",modifiers:{\"shear-help\":true}}],attrs:{\"variant\":\"info\"}},[_vm._v(\"Shear\")])]},proxy:true}])},[_c('b-input-group-prepend',[(_vm.realisticElasticity)?_c('b-form-radio',{attrs:{\"name\":\"anchor\",\"button\":\"\",\"squared\":\"\",\"button-variant\":\"outline-dark\",\"value\":\"shear\"},model:{value:(_vm.anchor),callback:function ($$v) {_vm.anchor=$$v},expression:\"anchor\"}},[(_vm.anchor=='shear')?_c('b-icon-lock'):_c('b-icon-unlock')],1):_vm._e()],1),_c('b-form-input',{attrs:{\"number\":\"\",\"type\":\"number\",\"value\":_vm.shear},on:{\"input\":function($event){return _vm.update_elasticity($event,'shear')}}})],1),_c('b-collapse',{attrs:{\"accordion\":\"elasticity-accord\",\"id\":\"shear-help\"}},[_c('token-info',{attrs:{\"name\":\"Shear modulus\",\"href\":\"https://en.wikipedia.org/wiki/Shear_modulus\",\"token\":\"SHEAR_STRAIN_AT_YIELD\"},scopedSlots:_vm._u([{key:\"dwarf\",fn:function(){return [_vm._v(\" Used for SHEAR_STRAIN_AT_YIELD and TORSION_STRAIN_AT_YIELD. Used like IMPACT_STRAIN_AT_YIELD (bulk modulus), but for failed edged attacks instead. \")]},proxy:true},{key:\"science\",fn:function(){return [_vm._v(\" If you affix a cube to the ground and press on the top, the bottom will stay the same while the top will move. The shear modulus is how much pressure has to be applied to... uh, just click this. \"),_c('svg',{attrs:{\"width\":\"100\",\"height\":\"50\"}},[_c('title',[_vm._v(\"Take a rectangle with points ABCD, top left then clockwise. The rectangle is skewed--sheared--so that it's a parallelogram, with diagonal AC now a vertical line.\")]),_c('polygon',{attrs:{\"id\":\"shear\",\"points\":\"0,0 0,50 50,50 50,0\",\"fill\":\"gray\"}},[_c('animate',{attrs:{\"begin\":\"shear.click\",\"attributeName\":\"points\",\"to\":\"50,0 0,50 50,50 100,0\",\"dur\":\"3s\",\"fill\":\"freeze\"}})])]),_vm._v(\" This is how much pressure it takes to deform a cube \"),_c('i',[_vm._v(\"exactly\")]),_vm._v(\" like this, when viewed face-on. \")]},proxy:true}])})],1),(_vm.realisticElasticity)?_c('div',[_c('b-input-group',{scopedSlots:_vm._u([{key:\"append\",fn:function(){return [_c('b-button',{directives:[{name:\"b-toggle\",rawName:\"v-b-toggle.lam√©-help\",modifiers:{\"lam√©-help\":true}}],attrs:{\"variant\":\"info\"}},[_vm._v(\"Œª\")])]},proxy:true}],null,false,2299531780)},[_c('b-input-group-prepend',[(_vm.realisticElasticity)?_c('b-form-radio',{attrs:{\"name\":\"anchor\",\"button\":\"\",\"squared\":\"\",\"button-variant\":\"outline-dark\",\"value\":\"lam√©\"},model:{value:(_vm.anchor),callback:function ($$v) {_vm.anchor=$$v},expression:\"anchor\"}},[(_vm.anchor=='lam√©')?_c('b-icon-lock'):_c('b-icon-unlock')],1):_vm._e()],1),_c('b-form-input',{attrs:{\"number\":\"\",\"type\":\"number\",\"value\":_vm.lam√©},on:{\"input\":function($event){return _vm.update_elasticity($event,'lam√©')}}})],1),_c('b-collapse',{attrs:{\"accordion\":\"elasticity-accord\",\"id\":\"lam√©-help\"}},[_c('b-card',[_c('b-card-title',[_c('b-button',{attrs:{\"block\":\"\",\"variant\":\"primary\",\"href\":\"https://en.wikipedia.org/wiki/Lam%C3%A9_parameters\"}},[_vm._v(\"Wikipedia\")])],1),_c('b',[_vm._v(\"Lam√©'s first parameter\")]),_vm._v(\", or \"),_c('b',[_vm._v(\"Œª\")]),_vm._v(\", is one of the parameters relating stress to strain in materials in 3D space. This is, of course, true of \"),_c('b',[_vm._v(\"all\")]),_vm._v(\" of the parameters in this tab, but Lam√©'s is interesting for being a lot more difficult to describe its physical consequences. Obviously it has some; one can describe all of an isomorphic homogenous material's elastic properties using nothing but Œª and any of these other ones. \"),_c('a',{attrs:{\"href\":\"https://agilescientific.com/blog/2012/9/26/l-is-for-lambda.html\"}},[_vm._v(\"Here's a post on it, I guess.\")]),_vm._v(\" It's mostly here for convenience sake: there is a small chance a material will have only Œª and one other parameter (probably the shear modulus, Lam√©'s second). This is also why we add Poisson's ratio, below. \")],1)],1),_c('b-input-group',{scopedSlots:_vm._u([{key:\"append\",fn:function(){return [_c('b-button',{directives:[{name:\"b-toggle\",rawName:\"v-b-toggle.poisson-help\",modifiers:{\"poisson-help\":true}}],attrs:{\"variant\":\"info\"}},[_vm._v(\"ŒΩ\")])]},proxy:true}],null,false,1126240706)},[_c('b-input-group-prepend',[(_vm.realisticElasticity)?_c('b-form-radio',{attrs:{\"name\":\"anchor\",\"squared\":\"\",\"button-variant\":\"outline-dark\",\"button\":\"\",\"value\":\"poisson\"},model:{value:(_vm.anchor),callback:function ($$v) {_vm.anchor=$$v},expression:\"anchor\"}},[(_vm.anchor=='poisson')?_c('b-icon-lock'):_c('b-icon-unlock')],1):_vm._e()],1),_c('b-form-input',{attrs:{\"lazy\":\"\",\"id\":\"poisson\",\"step\":\"0.05\",\"max\":\"0.499\",\"min\":\"-0.999\",\"type\":\"number\",\"number\":\"\",\"state\":_vm.poisson_state,\"value\":_vm.poisson},on:{\"input\":function($event){return _vm.update_elasticity($event,'poisson')}}}),_c('b-form-invalid-feedback',{attrs:{\"id\":\"poisson-feedback\"}},[_vm._v(\" Poisson ratio can only be between -1 and 0.5, otherwise you get negative elastic moduli. \")])],1),_c('b-collapse',{attrs:{\"accordion\":\"elasticity-accord\",\"id\":\"poisson-help\"}},[_c('b-card',[_c('b-card-title',[_c('b-button',{attrs:{\"block\":\"\",\"variant\":\"primary\",\"href\":\"https://en.wikipedia.org/wiki/Poisson%27s_ratio\"}},[_vm._v(\"Wikipedia\")])],1),_c('p',[_c('b',[_vm._v(\"Poisson's ratio\")]),_vm._v(\" is the ratio of deformation in directions perpendicular to load to the deformation in the same direction. For example, a poisson ratio of 0.3 means that if you squeeze an object made of this material from the top hard enough to reduce its length in that direction to 50%, its width will \"),_c('i',[_vm._v(\"increase\")]),_vm._v(\" by 15%. This is the default lock because more than any other value here, one could consider it a proportionality constant between \"),_c('i',[_vm._v(\"other elasticity moduli\")]),_vm._v(\". This is aided by the fact that it's constrained: values outside the range -1 to 0.5 exclusive cause singularities or 0 or negative elasticity, which is physical nonsense.\")]),_c('p',[_vm._v(\"Typically, metals usually have a poisson ratio around 0.3. Poisson ratios of less than 0 are very rare excepting certain metamaterials, often designed specifically to have this property. A material like rubber, with a poisson ratio very close to 0.5, is easy to stretch but hard to compress. A poisson ratio of 0 has the shear modulus precisely 1/2 of young's modulus and bulk modulus precisely 1/3 of young's.\")])],1)],1),_c('p',[_vm._v(\"I recommend you keep poisson ratio on lock unless you only know two material properties anyway. For example, if you only know shear modulus and bulk modulus, you should input one or the other, lock the one you just input, then input the other one; the rest will fill out accordingly.\")]),_c('b-button',{directives:[{name:\"b-toggle\",rawName:\"v-b-toggle.graph\",modifiers:{\"graph\":true}}],attrs:{\"variant\":\"info\"}},[_vm._v(\"Graph helper\")]),_c('b-collapse',{attrs:{\"id\":\"graph\"}},[_c('p',[_vm._v(\"This asks for your name. \"),_c('b',[_vm._v(\"Please do not use your real name. I will have access to it. Just put nonsense in or whatever.\")])]),_c('b-embed',{attrs:{\"type\":\"iframe\",\"aspect\":\"4by3\",\"src\":\"https://student.desmos.com/join/52gpfc\"}})],1)],1):_vm._e()],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('b-card',{attrs:{\"border-variant\":\"transparent\"}},[_c('b-tabs',{attrs:{\"card\":\"\",\"justified\":\"\"}},[_c('b-tab',{attrs:{\"title\":\"Dwarf Fortress\",\"title-item-class\":\"bg-science\"}},[_c('b-card-title',[_c('b-button',{attrs:{\"block\":\"\",\"variant\":\"primary\",\"href\":_vm.dfwiki}},[_vm._v(\"Dwarf Fortress wiki\")])],1),_vm._t(\"dwarf\")],2),_c('b-tab',{attrs:{\"title\":\"Real Life\",\"title-item-class\":\"bg-science\"}},[_c('b-card-title',[_c('b-button',{attrs:{\"block\":\"\",\"variant\":\"primary\",\"href\":_vm.href}},[_vm._v(\"Wikipedia\")])],1),_vm._t(\"science\")],2)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <b-card border-variant=\"transparent\">\n\n        <b-tabs card justified>\n            <b-tab title = \"Dwarf Fortress\" title-item-class = \"bg-science\">\n                <b-card-title>\n                    <b-button block variant=\"primary\" :href=\"dfwiki\">Dwarf Fortress wiki</b-button>\n                </b-card-title>\n                <slot name=\"dwarf\"></slot>\n            </b-tab> \n            <b-tab title=\"Real Life\" title-item-class=\"bg-science\">\n                <b-card-title>\n                    <b-button block variant=\"primary\" :href=\"href\">Wikipedia</b-button>\n                </b-card-title>\n                <slot name=\"science\"></slot>\n            </b-tab> \n        </b-tabs>\n    </b-card>\n</template>\n\n<script>\nexport default {\n    props: {\n        name: String,\n        href: String,\n        token: String\n    },\n    computed: {\n        dfwiki() {\n            return \"https://dwarffortresswiki.org/index.php/DF2014:Material_definition_token#\" + this.token\n        }\n    }\n}\n</script>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TokenInfo.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TokenInfo.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./TokenInfo.vue?vue&type=template&id=6c897f54&\"\nimport script from \"./TokenInfo.vue?vue&type=script&lang=js&\"\nexport * from \"./TokenInfo.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\n    <div class = \"tab_content\">\n        <b-container>\n            <b-row>\n                <b-form-checkbox v-model=\"realisticElasticity\">\n                    Realistic auto-fill\n                </b-form-checkbox>\n                <b-button variant=\"info\" v-b-toggle.realism-help>?</b-button>\n                <b-collapse accordion=\"elasticity-accord\" id = \"realism-help\">\n                    All materials in Dwarf Fortress are homogenous and isotropic, and all homogonous and isotropic materials can calculate all of the below properties using any two of them. This does this automatically. Wikipedia has an ever-in-depth <b-link href=\"https://en.wikipedia.org/wiki/Hooke%27s_law\">article on this</b-link>, with the specific table I'm using being on the <b-link href=\"https://en.wikipedia.org/wiki/Template:Elastic_moduli\">elastic modulus template.</b-link>.\n                </b-collapse>\n            </b-row>\n        </b-container>\n        <b-input-group>\n            <b-input-group-prepend>\n                <b-form-radio v-if=\"realisticElasticity\" name=\"anchor\" v-model=\"anchor\" squared button-variant = \"outline-dark\" button value='bulk'>\n                    <b-icon-lock v-if=\"anchor=='bulk'\"></b-icon-lock>\n                    <b-icon-unlock v-else></b-icon-unlock>\n                </b-form-radio>\n            </b-input-group-prepend>\n            <template #append>\n                <b-button variant=\"info\" v-b-toggle.bulk-help>Bulk</b-button>\n            </template>\n            <b-form-input number type=\"number\" v-bind:value=\"bulk\" v-on:input=\"update_elasticity($event,'bulk')\"></b-form-input>\n        </b-input-group>\n            <b-collapse accordion=\"elasticity-accord\" id=\"bulk-help\">\n                <token-info name='Bulk modulus' href = \"https://en.wikipedia.org/wiki/Bulk_modulus\" token=\"IMPACT_STRAIN_AT_YIELD\">\n                    <template #dwarf>\n                        Used for COMPRESSIVE_STRAIN_AT_YIELD and IMPACT_STRAIN_AT_YIELD. When an attack fails to reach the momentum threshold for breaking through an attack, the momentum of the attack will still pass through, but will have its momentum divded by IMPACT_STRAIN_AT_YIELD/50000. This is very near zero for most materials; however, STRAIN_AT_YIELD is assumed 50000 for chain armor.\n                    </template>\n                    <template #science>\n                        If you apply pressure to a sphere of material from all sides equally, the sphere will shrink; the bulk modulus is a measure of how much it shrinks, specifically how much pressure it takes to divide its radius by two. Most materials will break far before then, but this is a constant of proportionality.\n                        <svg width=40 height=40>\n                            <title>A circle is squashed to half of its radius.</title>\n                            <circle id=\"bulk\" cx=\"20\" cy=\"20\" r=\"20\" fill=\"gray\">\n                                <animate begin=\"bulk.click\" attributeName=\"r\" to=\"10\" dur=\"3s\" fill=\"freeze\"/>\n                            </circle>\n                        </svg>\n                    </template>\n                </token-info>\n            </b-collapse>\n        <b-input-group>\n        <b-input-group-prepend>\n            <b-form-radio v-if=\"realisticElasticity\" name=\"anchor\" v-model=\"anchor\" button squared button-variant = \"outline-dark\" value='young'>\n                <b-icon-lock v-if=\"anchor=='young'\"></b-icon-lock>\n                <b-icon-unlock v-else></b-icon-unlock>\n            </b-form-radio>\n        </b-input-group-prepend>\n        <template #append>\n            <b-button variant=\"info\" v-b-toggle.young-help>Young's</b-button>\n        </template>\n\n        <b-form-input number type=\"number\" v-bind:value=\"young\" v-on:input=\"update_elasticity($event,'young')\"></b-form-input>\n        </b-input-group>\n        <b-collapse accordion=\"elasticity-accord\" id=\"young-help\">\n            <token-info name=\"Young's modulus\" href = \"https://en.wikipedia.org/wiki/Young%27s_modulus\" token=\"TENSILE_STRAIN_AT_YIELD\">\n                <template #dwarf>\n                    Used for TENSILE_STRAIN_AT_YIELD and BENDING_STRAIN_AT_YIELD. Neither of these are used much by the game, if at all. If they are, it's in wrestling or, more likely, in attacks transferring momentum to parent parts via bending.\n                </template>\n                <template #science>\n                    If you pull on a rod on both sides, it'll stretch out. This is how much pressure has to be applied to stretch it so that it's at twice the length. Again, most materials will break well before this, and it's a constant of proportionality.\n                    <svg width=100 height=30>\n                        <title>A rectangle, twice as wide as it is long, is stretched to be four times as wide as it is long when clicked.</title>\n                        <polygon id=\"youngs\" points=\"25,0 25,25 75,25 75,0\" fill=\"gray\">\n                            <animate begin=\"youngs.click\" attributeName=\"points\" to=\"0,0 0,25 100,25 100,0\" dur=\"3s\" fill=\"freeze\"/>\n                        </polygon>\n                    </svg>\n                </template>\n            </token-info>\n        </b-collapse>\n        <b-input-group>\n            <b-input-group-prepend>\n                <b-form-radio v-if=\"realisticElasticity\" name=\"anchor\" v-model=\"anchor\" button squared button-variant = \"outline-dark\" value='shear'>\n                        <b-icon-lock v-if=\"anchor=='shear'\"></b-icon-lock>\n                        <b-icon-unlock v-else></b-icon-unlock>\n                </b-form-radio>\n                </b-input-group-prepend>\n            <b-form-input number type=\"number\" v-bind:value=\"shear\" v-on:input=\"update_elasticity($event,'shear')\"></b-form-input>\n            <template #append>\n                <b-button variant=\"info\" v-b-toggle.shear-help>Shear</b-button>\n            </template>\n            </b-input-group>\n        <b-collapse accordion=\"elasticity-accord\" id=\"shear-help\">\n            <token-info name=\"Shear modulus\" href = \"https://en.wikipedia.org/wiki/Shear_modulus\" token=\"SHEAR_STRAIN_AT_YIELD\">\n                <template #dwarf>\n                    Used for SHEAR_STRAIN_AT_YIELD and TORSION_STRAIN_AT_YIELD. Used like IMPACT_STRAIN_AT_YIELD (bulk modulus), but for failed edged attacks instead.\n                </template>\n                <template #science>\n                    If you affix a cube to the ground and press on the top, the bottom will stay the same while the top will move. The shear modulus is how much pressure has to be applied to... uh, just click this.\n                    <svg width=100 height=50>\n                        <title>Take a rectangle with points ABCD, top left then clockwise. The rectangle is skewed--sheared--so that it's a parallelogram, with diagonal AC now a vertical line.</title>\n                        <polygon id=\"shear\" points=\"0,0 0,50 50,50 50,0\" fill=\"gray\">\n                            <animate begin=\"shear.click\" attributeName=\"points\" to=\"50,0 0,50 50,50 100,0\" dur=\"3s\" fill=\"freeze\"/>\n                        </polygon>\n                    </svg>\n                    This is how much pressure it takes to deform a cube <i>exactly</i> like this, when viewed face-on.\n                </template>\n            </token-info>\n        </b-collapse>\n        <div v-if=\"realisticElasticity\">\n            <b-input-group>\n            <b-input-group-prepend>\n                <b-form-radio v-if=\"realisticElasticity\" name=\"anchor\" v-model=\"anchor\" button squared button-variant = \"outline-dark\" value='lam√©'>\n                        <b-icon-lock v-if=\"anchor=='lam√©'\"></b-icon-lock>\n                        <b-icon-unlock v-else></b-icon-unlock>\n                </b-form-radio>\n            </b-input-group-prepend>\n            <b-form-input number type=\"number\" v-bind:value=\"lam√©\" v-on:input=\"update_elasticity($event,'lam√©')\"></b-form-input>\n            <template #append>\n                <b-button variant=\"info\" v-b-toggle.lam√©-help>Œª</b-button>\n            </template>\n            </b-input-group>\n            <b-collapse accordion=\"elasticity-accord\" id=\"lam√©-help\">\n            <b-card>\n                <b-card-title>\n                    <b-button block variant=\"primary\" href=\"https://en.wikipedia.org/wiki/Lam%C3%A9_parameters\">Wikipedia</b-button>\n                </b-card-title>\n                    <b>Lam√©'s first parameter</b>, or <b>Œª</b>, is one of the parameters relating stress to strain in materials in 3D space. This is, of course, true of <b>all</b> of the parameters in this tab, but Lam√©'s is interesting for being a lot more difficult to describe its physical consequences. Obviously it has some; one can describe all of an isomorphic homogenous material's elastic properties using nothing but Œª and any of these other ones. <a href=https://agilescientific.com/blog/2012/9/26/l-is-for-lambda.html>Here's a post on it, I guess.</a> It's mostly here for convenience sake: there is a small chance a material will have only Œª and one other parameter (probably the shear modulus, Lam√©'s second). This is also why we add Poisson's ratio, below.\n                </b-card>\n            </b-collapse>\n            <b-input-group>\n            <b-input-group-prepend>\n                <b-form-radio v-if=\"realisticElasticity\" name=\"anchor\" v-model=\"anchor\" squared button-variant = \"outline-dark\" button value='poisson'>\n                    <b-icon-lock v-if=\"anchor=='poisson'\"></b-icon-lock>\n                    <b-icon-unlock v-else></b-icon-unlock>\n                </b-form-radio>\n            </b-input-group-prepend>\n            <b-form-input lazy id=\"poisson\" step=\"0.05\" max=\"0.499\" min=\"-0.999\" type=\"number\" number :state = \"poisson_state\" v-bind:value=\"poisson\" v-on:input=\"update_elasticity($event,'poisson')\"></b-form-input>\n            <b-form-invalid-feedback id=\"poisson-feedback\">\n                Poisson ratio can only be between -1 and 0.5, otherwise you get negative elastic moduli.\n            </b-form-invalid-feedback>\n            <template #append>\n                <b-button variant=\"info\" v-b-toggle.poisson-help>ŒΩ</b-button>\n            </template>\n            </b-input-group>\n            <b-collapse accordion=\"elasticity-accord\" id=\"poisson-help\">\n                <b-card>\n                    <b-card-title>\n                        <b-button block variant=\"primary\" href=\"https://en.wikipedia.org/wiki/Poisson%27s_ratio\">Wikipedia</b-button>\n                    </b-card-title>\n                    <p><b>Poisson's ratio</b> is the ratio of deformation in directions perpendicular to load to the deformation in the same direction. For example, a poisson ratio of 0.3 means that if you squeeze an object made of this material from the top hard enough to reduce its length in that direction to 50%, its width will <i>increase</i> by 15%. This is the default lock because more than any other value here, one could consider it a proportionality constant between <i>other elasticity moduli</i>. This is aided by the fact that it's constrained: values outside the range -1 to 0.5 exclusive cause singularities or 0 or negative elasticity, which is physical nonsense.</p>\n\n                    <p>Typically, metals usually have a poisson ratio around 0.3. Poisson ratios of less than 0 are very rare excepting certain metamaterials, often designed specifically to have this property. A material like rubber, with a poisson ratio very close to 0.5, is easy to stretch but hard to compress. A poisson ratio of 0 has the shear modulus precisely 1/2 of young's modulus and bulk modulus precisely 1/3 of young's.</p>\n                </b-card>\n            </b-collapse>\n            <p>I recommend you keep poisson ratio on lock unless you only know two material properties anyway. For example, if you only know shear modulus and bulk modulus, you should input one or the other, lock the one you just input, then input the other one; the rest will fill out accordingly.</p>\n            <b-button variant=\"info\" v-b-toggle.graph>Graph helper</b-button>\n            <b-collapse id=\"graph\">\n            <p>This asks for your name. <b>Please do not use your real name. I will have access to it. Just put nonsense in or whatever.</b></p>\n            <b-embed\n                type=\"iframe\"\n                aspect='4by3'\n                src=\"https://student.desmos.com/join/52gpfc\"\n            ></b-embed>\n            </b-collapse>\n        </div>\n    </div>\n</template>\n\n<script>\nimport {BIconLock, BIconUnlock} from 'bootstrap-vue'\n\nimport TokenInfo from \"@/components/TokenInfo.vue\"\n\nexport default {\n    props: {\n        elasticity: Object\n    },\n    components: {\n        BIconLock,\n        BIconUnlock,\n        TokenInfo\n    },\n    data: function() {\n        return {\n            bulk: 170000,\n            young: 211000,\n            shear: 82000,\n            lam√©: 115000,\n            poisson: 0.293,\n            realisticElasticity: false,\n            anchor: \"poisson\"\n        }\n    },\n    model: {\n        prop: 'elasticity',\n        event: 'update:elasticity'\n    },\n    methods: {\n        getSigFig(num) {\n            if (!num) {\n                return num\n            }\n            var trailers = 0\n            if (Math.abs(num)>1) {\n                var zeroes=0\n                while(Math.floor(num/Math.pow(10,zeroes))==num/Math.pow(10,zeroes)) {\n                    zeroes++\n                }\n                return Math.floor(Math.log10(num))-(zeroes-2)\n            }\n            else {\n                trailers=0\n                while(Math.floor(num*Math.pow(10,trailers))!=num*Math.pow(10,trailers)) {\n                    trailers++\n            }\n            return trailers\n            }\n        },\n        sigFigs(n, sig) { //http://blog.magnetiq.com/post/497605344/rounding-to-a-certain-significant-figures-in\n            var mult = Math.pow(10,\n                sig - Math.floor(Math.log(n) / Math.LN10) - 1);\n            return Math.round(n * mult) / mult;\n        },\n        getSigFigs(nums) {\n            var m = -Infinity\n            for(const x of nums) {\n                m = Math.max(this.getSigFig(x),m)\n            }\n            return m\n        },\n        parameterize(anchors) {\n            if(this.realisticElasticity) {\n                var no = function(str) {\n                    return anchors.indexOf(str) == -1\n                }\n                if(no(\"poisson\")) {\n                    if(no(\"young\")) {\n                        if(no(\"bulk\")) {\n                            const sig = Math.max(this.getSigFigs([this.lam√©, this.shear]),3)\n                            this.bulk = this.sigFigs(this.lam√© + ((2 * this.shear) / 3),sig)\n                            anchors += \"bulk\"\n                        }\n                        const K = this.bulk\n                        const G = this.shear\n                        const sig = Math.max(this.getSigFigs([K, G]),3)\n                        this.young = this.sigFigs((9*K*G)/(3*K+G),sig)\n                        anchors += \"young\"\n                    }\n                    const sig = Math.max(this.getSigFigs([this.young, this.shear]),3)\n                    this.poisson = this.sigFigs((this.young / (2*this.shear)) - 1, sig)\n                    anchors += \"poisson\"\n                }\n                if(no(\"young\")) {\n                    const c = 1-2*this.poisson;\n                    if(no(\"bulk\")) {\n                        if(no(\"shear\")) {\n                            const sig = Math.max(this.getSigFigs([this.lam√©, this.poisson]), 3)\n                            const v = this.poisson;\n                            const l = this.lam√©;\n                            this.shear = this.sigFigs((l*c)/(2*v),sig)\n                            anchors += \"shear\"\n                        }\n                        const sig = Math.max(this.getSigFigs([this.poisson, this.shear]),3)\n                        this.bulk = this.sigFigs((2*this.shear*(1+this.poisson))/(3*c),sig)\n                        anchors += \"bulk\"\n                    }\n                    const K = this.bulk\n                    const v = this.poisson\n                    const sig = Math.max(this.getSigFigs([K, v]),3)\n                    this.young = this.sigFigs(3*K*c,sig)\n                    anchors += \"young\"\n                }\n                const v = this.poisson;\n                const E = this.young;\n                const sig = Math.max(this.getSigFigs([v,E]),3)\n                if(no(\"bulk\")) {\n                    this.bulk = this.sigFigs(E/(3*(1-2*v)),sig)\n                }\n                if(no(\"shear\")) {\n                    this.shear = this.sigFigs(E/(2*(1+v)),sig)\n                }\n                if(no(\"lam√©\")) {\n                    this.lam√© = this.sigFigs((E*v)/((1+v)*(1-2*v)),sig)\n                }\n            }\n            this.$emit(\"update:elasticity\",{bulk: this.bulk, young:this.young, shear:this.shear})\n        },\n        update_elasticity(event, which) {\n            if(!event)\n                event = 0\n            this[which] = Number(event)\n            this.parameterize([which, this.anchor])\n        },\n    },\n    computed: {\n        poisson_state() {\n            return (this.poisson > -1 && this.poisson < 0.5) ? null : false\n        }\n    }\n\n}\n</script>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Elasticity.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Elasticity.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Elasticity.vue?vue&type=template&id=e3ccfe40&\"\nimport script from \"./Elasticity.vue?vue&type=script&lang=js&\"\nexport * from \"./Elasticity.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('b-col',{staticClass:\"border\"},[_c('b-form-group',{attrs:{\"description\":_vm.description,\"label\":_vm.id,\"v-for\":_vm.id}},[(_vm.optional)?_c('b-button',{attrs:{\"variant\":_vm.exists ? 'primary' : 'secondary',\"pressed\":_vm.exists},on:{\"update:pressed\":function($event){_vm.exists=$event},\"click\":function($event){return _vm.set_exists()}}},[_vm._v(_vm._s(_vm.name))]):_vm._e(),_c('b-collapse',{model:{value:(_vm.exists),callback:function ($$v) {_vm.exists=$$v},expression:\"exists\"}},[_c('b-input-group',{scopedSlots:_vm._u([{key:\"append\",fn:function(){return [_c('b-button',{directives:[{name:\"b-toggle\",rawName:\"v-b-toggle:[id]\",arg:_vm.id}],attrs:{\"variant\":\"info\"}},[_vm._v(\"?\")])]},proxy:true},{key:\"prepend\",fn:function(){return [_c('b-form-select',{attrs:{\"options\":_vm.tempTypes},model:{value:(_vm.tempType),callback:function ($$v) {_vm.tempType=$$v},expression:\"tempType\"}})]},proxy:true}])},[_c('b-form-input',{attrs:{\"number\":\"\",\"type\":\"number\",\"value\":_vm.temp},on:{\"input\":function($event){return _vm.set_value($event)}}})],1),_c('b-collapse',{attrs:{\"id\":_vm.id,\"right\":\"\",\"width\":\"min-content\",\"sidebar-class\":\"border-left\",\"title\":\"Help\"}},[_vm._t(\"default\")],2)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <b-col class=\"border\">\n        <b-form-group\n            :description=\"description\"\n            :label=\"id\"\n            :v-for=\"id\"\n        >\n        <b-button :variant=\"exists ? 'primary' : 'secondary'\" v-if=\"optional\" :pressed.sync=\"exists\" v-on:click=\"set_exists()\">{{name}}</b-button>\n        <b-collapse v-model=\"exists\">\n            <b-input-group>\n            <b-form-input number type=\"number\" v-bind:value=\"temp\" v-on:input=\"set_value($event)\"></b-form-input>\n            <template #append>\n                <b-button variant=\"info\" v-b-toggle:[id]>?</b-button>\n            </template>\n            <template #prepend>\n                <b-form-select v-model = \"tempType\" :options=\"tempTypes\"></b-form-select>\n            </template>\n            </b-input-group>\n            <b-collapse :id = \"id\" right width = \"min-content\" sidebar-class = \"border-left\" title=\"Help\">\n                <slot></slot>\n            </b-collapse>\n        </b-collapse>\n        </b-form-group>\n    </b-col>\n</template>\n\n<script>\nexport default {\n    name: \"TemperatureInput\",\n    props: {modelValue: Number, name: String, optional: Boolean, id: String, disabled: Boolean, description: String},\n    model: {\n        prop: 'modelValue',\n        event: 'update:modelValue'\n    },\n    data: function() {\n        return {\n            temp: 1111,\n            tempType: \"c\",\n            tempTypes: [\n                { value: \"c\", text: \"Celsius\"},\n                { value: \"k\", text: \"Kelvins\"},\n                { value: \"f\", text: \"Fahrenheit\"},\n                { value: \"u\", text: \"Urists\"},\n            ],\n            exists: true,\n        }\n    },\n    mounted() {\n        this.exists = !this.disabled\n        this.set_exists()\n    },\n    methods: {\n        set_value: function(event) {\n            this.temp = event\n            var trueTemp = Number(this.temp)\n            if(this.tempType == \"k\")\n                trueTemp -= 273.15\n            if(this.tempType == \"c\" || this.tempType == \"k\")\n                trueTemp = trueTemp * 1.8 + 32\n            if(this.tempType != \"u\")\n                trueTemp += 9968\n            this.$emit('update:modelValue',Math.round(trueTemp))\n        },\n        set_exists: function() {\n            if(this.optional) {\n                this.$emit('update:exists', this.exists)\n            }\n        }\n    },\n}\n</script>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TemperatureInput.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TemperatureInput.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./TemperatureInput.vue?vue&type=template&id=0ac0a84c&\"\nimport script from \"./TemperatureInput.vue?vue&type=script&lang=js&\"\nexport * from \"./TemperatureInput.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('b-col',{staticClass:\"border\"},[_c('b-form-group',{attrs:{\"description\":_vm.description,\"label\":_vm.token,\"v-for\":_vm.token}},[_c('b-input-group',{scopedSlots:_vm._u([{key:\"append\",fn:function(){return [_c('b-button',{directives:[{name:\"b-toggle\",rawName:\"v-b-toggle:[description]\",arg:_vm.description}],attrs:{\"variant\":\"info\"}},[_vm._v(\"?\")])]},proxy:true}])},[_c('b-form-input',{attrs:{\"placeholder\":_vm.placeholder,\"debounce\":\"500\",\"number\":_vm.number,\"id\":_vm.token,\"value\":_vm.tokenValue,\"type\":_vm.type},on:{\"input\":function($event){return _vm.$emit('input',$event)}}})],1)],1),_c('b-collapse',{attrs:{\"id\":_vm.description}},[(_vm.complex)?_c('div',[_c('token-info',{attrs:{\"name\":_vm.name,\"href\":_vm.href,\"token\":_vm.token},scopedSlots:_vm._u([{key:\"dwarf\",fn:function(){return [_vm._t(\"dwarf\")]},proxy:true},{key:\"science\",fn:function(){return [_vm._t(\"science\")]},proxy:true}],null,true)})],1):_c('div',[_vm._t(\"default\")],2)])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <b-col class=\"border\">\n        <b-form-group\n            :description=\"description\"\n            :label=\"token\"\n            :v-for=\"token\"\n        >\n        <b-input-group>\n        <b-form-input :placeholder = \"placeholder\" debounce = \"500\" :number = \"number\" :id=\"token\" v-bind:value=\"tokenValue\" v-on:input=\"$emit('input',$event)\"  :type=\"type\" ></b-form-input>\n        <template #append>\n            <b-button variant=\"info\" v-b-toggle:[description]>?</b-button>\n        </template>\n        </b-input-group>\n        </b-form-group>\n        <b-collapse :id=\"description\">\n            <div v-if=\"complex\">\n                <token-info :name = \"name\" :href = \"href\" :token = \"token\">\n                    <template #dwarf><slot name=\"dwarf\"></slot></template>\n                    <template #science><slot name=\"science\"></slot></template>\n                </token-info>\n            </div>\n            <div v-else>\n                <slot></slot>\n            </div>\n        </b-collapse>\n    </b-col>\n</template>\n\n<script>\nimport TokenInfo from \"./TokenInfo.vue\"\n\nexport default {\n    components: { TokenInfo },\n    name: \"Token\",\n    props: {\n        name: String,\n        href: String,\n        description: String,\n        token: String,\n        tokenValue: String,\n        number: Boolean,\n        type: String,\n        placeholder: String,\n        complex: Boolean\n    },\n}\n</script>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Token.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Token.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Token.vue?vue&type=template&id=811c0020&\"\nimport script from \"./Token.vue?vue&type=script&lang=js&\"\nexport * from \"./Token.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('b-tabs',[_c('b-tabs',{attrs:{\"pills\":\"\",\"card\":\"\"}},[_c('b-tab',{attrs:{\"lazy\":\"\",\"title\":\"Matchups\"}},[_c('p',[_vm._v(\"Here we have a bunch of matchup charts, how well the material does against another. It's standard matchup chart fare: 10 means it wins every time, 0 means it never wins.\")]),_c('p',[_vm._v(\"Matchup chart of attacks vs plate armor \"),_c('b-button',{directives:[{name:\"b-toggle\",rawName:\"v-b-toggle.caveat\",modifiers:{\"caveat\":true}}],attrs:{\"variant\":\"info\"}},[_vm._v(\"?\")])],1),_c('b-collapse',{attrs:{\"id\":\"caveat\"}},[_c('b-card',[_c('b-card-text',[_vm._v(\"Muscle numbers are going to be off because it's actually testing against a breastplate and a helmet. Solid-muscle plate armor. Very silly.\")])],1)],1),_c('b-table',{attrs:{\"id\":\"attacks-table\",\"items\":_vm.attacks,\"filter\":\"\"}}),_c('p',[_vm._v(\"Matchup chart of plate armor defense\")]),_c('b-table',{attrs:{\"id\":\"defense-table\",\"items\":_vm.defense,\"filter\":\"\"}}),_c('b-button',{directives:[{name:\"b-toggle\",rawName:\"v-b-toggle.technical\",modifiers:{\"technical\":true}}],attrs:{\"variant\":\"info\"}},[_vm._v(\"Technical stuff/method\")]),_c('b-collapse',{attrs:{\"id\":\"technical\"}},[_c('b-card',[_c('b-card-text',[_vm._v(\" The actual simulation is a monte carlo simulation implemented in Rust, using WebAssembly. Simply put: it tests: \"),_c('b-container',[_c('b-row',[_c('b-col',[_vm._v(\"4 breastplates\"),_c('br'),_vm._v(\"4 -breastplates-\"),_c('br'),_vm._v(\"3 +breastplates+\"),_c('br'),_vm._v(\"2 *breastplates*\"),_c('br'),_vm._v(\"2 ‚â°breastplates‚â°\"),_c('br'),_vm._v(\"2 ‚òºbreastplates‚òº\"),_c('br'),_vm._v(\"1 artifact breastplate\")]),_vm._v(\"against each individual attack you see above, multiplied by\"),_c('b-col',[_vm._v(\"3 weapons\"),_c('br'),_vm._v(\"2 -weapons-\"),_c('br'),_vm._v(\"2 +weapons+\"),_c('br'),_vm._v(\"2 *weapons*\"),_c('br'),_vm._v(\"2 ‚â°weapons‚â°\"),_c('br'),_vm._v(\"2 ‚òºweapons‚òº.\")])],1)],1),_vm._v(\" It then does the same for helmets and greaves, for each material you see. This gives us a total of {18*12*3*4*6*2} trials. Each individual trial is between two dwarves of random body size and strength, using the very same algorithm as Dwarf Fortress does for the randomness as well as determining whether the attack \\\"wins\\\". The attack is assumed square, and no attack modifiers are taken into account. If you're interested, \"),_c('b-link',{attrs:{\"href\":\"https://github.com/Putnam3145/putnam3145-github-io-wasm/blob/master/src/lib.rs\"}},[_vm._v(\"the Rust code is here.\")]),_c('p',[_vm._v(\"Here's how the calculation works. First, we calculate the momentum like so:\")]),_c('katex-element',{attrs:{\"display-mode\":\"\",\"expression\":\"M = \\\\frac{\\\\text{base size} \\\\cdot \\\\text{strength} \\\\cdot \\\\text{attack velocity}}{\\\\frac{10^{6}(1+size)}{W}}\"}}),_c('p',[_vm._v(\"\\\"Attack velocity\\\" here refers to the last number in an ATTACK token's definition.\")]),_c('p',[_vm._v(\"Now, we need to establish some terms. \"),_c('katex-element',{attrs:{\"expression\":\"a_{foo}\"}}),_vm._v(\" is a material property of the armor, \"),_c('katex-element',{attrs:{\"expression\":\"W_{foo}\"}}),_vm._v(\" is a material property of the weapon. \"),_c('katex-element',{attrs:{\"expression\":\"(M)_{x(y|f)}\"}}),_vm._v(\" is yield or fracture of material \"),_c('katex-element',{attrs:{\"expression\":\"M\"}}),_vm._v(\"; for example, \"),_c('katex-element',{attrs:{\"expression\":\"M_{sy}\"}}),_vm._v(\" is the shear yield.\")],1),_c('p',[_vm._v(\"Then, we check against blades, if the attack is edged:\")]),_c('katex-element',{attrs:{\"display-mode\":\"\",\"expression\":\"M \\\\ge \\\\frac{a_{sy}}{W_{sy}} + A\\\\frac{a_{sf}}{W_{sf}}\\\\frac{10+2Q_a}{Q_wW_e}\"}}),_c('p',[_vm._v(\"Where \"),_c('katex-element',{attrs:{\"expression\":\"Q_a\"}}),_vm._v(\" is the armor quality coefficient, \"),_c('katex-element',{attrs:{\"expression\":\"Q_w\"}}),_vm._v(\" is weapon sharpness quality coefficient, \"),_c('katex-element',{attrs:{\"expression\":\"W_e\"}}),_vm._v(\" is the max edge of the weapon divided by 10,000 and \"),_c('katex-element',{attrs:{\"expression\":\"A\"}}),_vm._v(\" is the contact area of the attack, which is the layer size or the attack's actual contact area, whichever is smaller. \"),_c('b-link',{attrs:{\"href\":\"https://dwarffortresswiki.org/index.php/DF2014:Item_quality#Quality_grades\"}},[_vm._v(\"See here for quality grades.\")])],1),_c('p',[_vm._v(\"If that gets through, the following is then checked:\")]),_c('katex-element',{attrs:{\"display-mode\":\"\",\"expression\":\"\\\\frac{2W_sW_{iy}}{1000} \\\\ge Aa_\\\\rho\"}}),_c('p',[_vm._v(\"Where \"),_c('katex-element',{attrs:{\"expression\":\"W_s\"}}),_vm._v(\" is the weapon's physical size (e.g. 800 for maces) and \"),_c('katex-element',{attrs:{\"expression\":\"M_\\\\rho\"}}),_vm._v(\" is material M's density.\")],1),_c('p',[_vm._v(\"If this fails, the attack is stopped short. If it succeeds, we move on to this:\")]),_c('katex-element',{attrs:{\"display-mode\":\"\",\"expression\":\"M \\\\ge (\\\\frac{2a_{if}}{10^6}-\\\\frac{a_{iy}}{10^6})(2+0.4Q_a)A\"}}),_c('p',[_vm._v(\"And if that succeeds, the attack has won.\")]),_c('p',[_vm._v(\"All these equations came from \"),_c('b-link',{attrs:{\"href\":\"https://dwarffortresswiki.org/index.php/DF2014:Material_science\"}},[_vm._v(\"the Dwarf Fortress wiki article on material science\")]),_vm._v(\" as well as \"),_c('b-link',{attrs:{\"href\":\"http://www.bay12forums.com/smf/index.php?topic=142372.msg5767755#msg5767755\"}},[_vm._v(\"this combat calculator.\")])],1)],1)],1)],1)],1),_c('b-tab',{attrs:{\"lazy\":\"\",\"title\":\"Values\"}},[_c('b-table',{attrs:{\"id\":\"values-table\",\"items\":_vm.values,\"filter\":\"\"}})],1),_c('b-tab',{attrs:{\"title\":\"Misc.\"}},[_vm._t(\"default\")],2)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n<b-tabs>\n        <b-tabs pills card>\n            <b-tab lazy title=\"Matchups\">\n                <p>Here we have a bunch of matchup charts, how well the material does against another.  It's standard matchup chart fare: 10 means it wins every time, 0 means it never wins.</p>\n                <p>Matchup chart of attacks vs plate armor <b-button variant=\"info\" v-b-toggle.caveat>?</b-button></p>\n                <b-collapse id = \"caveat\"><b-card><b-card-text>Muscle numbers are going to be off because it's actually testing against a breastplate and a helmet. Solid-muscle plate armor. Very silly.</b-card-text></b-card></b-collapse>\n                <b-table id=\"attacks-table\" :items = \"attacks\" filter = \"\"></b-table>\n                <p>Matchup chart of plate armor defense</p>\n                <b-table id=\"defense-table\" :items = \"defense\" filter = \"\"></b-table>\n                <b-button variant=\"info\" v-b-toggle.technical>Technical stuff/method</b-button>\n                <b-collapse id = \"technical\">\n                    <b-card>\n                        <b-card-text>\n                            The actual simulation is a monte carlo simulation implemented in Rust, using WebAssembly. Simply put: it tests: \n                            <b-container><b-row><b-col>4 breastplates<br/>4 -breastplates-<br/>3 +breastplates+<br/>2 *breastplates*<br/>2 ‚â°breastplates‚â°<br/>2 ‚òºbreastplates‚òº<br/>1 artifact breastplate</b-col>against each individual attack you see above, multiplied by<b-col>3 weapons<br/>2 -weapons-<br/>2 +weapons+<br/>2 *weapons*<br/>2 ‚â°weapons‚â°<br/>2 ‚òºweapons‚òº.</b-col></b-row></b-container> It then does the same for helmets and greaves, for each material you see. This gives us a total of {18*12*3*4*6*2} trials. Each individual trial is between two dwarves of random body size and strength, using the very same algorithm as Dwarf Fortress does for the randomness as well as determining whether the attack \"wins\". The attack is assumed square, and no attack modifiers are taken into account. If you're interested, <b-link href=\"https://github.com/Putnam3145/putnam3145-github-io-wasm/blob/master/src/lib.rs\">the Rust code is here.</b-link>\n                            <p>Here's how the calculation works. First, we calculate the momentum like so:</p>\n                            <katex-element display-mode expression = \"M = \\frac{\\text{base size} \\cdot \\text{strength} \\cdot \\text{attack velocity}}{\\frac{10^{6}(1+size)}{W}}\"/>\n                            <p>\"Attack velocity\" here refers to the last number in an ATTACK token's definition.</p>\n                            <p>Now, we need to establish some terms. <katex-element expression = \"a_{foo}\"/> is a material property of the armor, <katex-element expression = \"W_{foo}\"/> is a material property of the weapon. <katex-element expression = \"(M)_{x(y|f)}\"/> is yield or fracture of material <katex-element expression = \"M\"/>; for example, <katex-element expression = \"M_{sy}\"/> is the shear yield.</p> \n                            <p>Then, we check against blades, if the attack is edged:</p>\n                            <katex-element display-mode expression = \"M \\ge \\frac{a_{sy}}{W_{sy}} + A\\frac{a_{sf}}{W_{sf}}\\frac{10+2Q_a}{Q_wW_e}\" />\n                            <p>Where <katex-element expression = \"Q_a\"/> is the armor quality coefficient, <katex-element expression = \"Q_w\"/> is weapon sharpness quality coefficient, <katex-element expression = \"W_e\"/> is the max edge of the weapon divided by 10,000 and <katex-element expression = \"A\"/> is the contact area of the attack, which is the layer size or the attack's actual contact area, whichever is smaller. <b-link href=\"https://dwarffortresswiki.org/index.php/DF2014:Item_quality#Quality_grades\">See here for quality grades.</b-link></p>\n                            <p>If that gets through, the following is then checked:</p>\n                            <katex-element display-mode expression = \"\\frac{2W_sW_{iy}}{1000} \\ge Aa_\\rho\" />\n                            <p>Where <katex-element expression = \"W_s\"/> is the weapon's physical size (e.g. 800 for maces) and <katex-element expression = \"M_\\rho\"/> is material M's density.</p>\n                            <p>If this fails, the attack is stopped short. If it succeeds, we move on to this:</p>\n                            <katex-element display-mode expression = \"M \\ge (\\frac{2a_{if}}{10^6}-\\frac{a_{iy}}{10^6})(2+0.4Q_a)A\" />\n                            <p>And if that succeeds, the attack has won.</p>\n                            <p>All these equations came from <b-link href=\"https://dwarffortresswiki.org/index.php/DF2014:Material_science\">the Dwarf Fortress wiki article on material science</b-link> as well as <b-link href=\"http://www.bay12forums.com/smf/index.php?topic=142372.msg5767755#msg5767755\">this combat calculator.</b-link></p>\n                        </b-card-text>\n                    </b-card>\n                </b-collapse>\n            </b-tab>\n            <b-tab lazy title=\"Values\">\n                <b-table id=\"values-table\" :items = \"values\" filter = \"\"></b-table>\n            </b-tab>\n            <b-tab title=\"Misc.\">\n                <slot></slot>\n            </b-tab>\n        </b-tabs>\n</b-tabs>\n</template>\n\n<script>\nlet wasm = import('@/wasm/pkg/putnam_github_io_bg')\nvar Material = function(name, solidDensity, impactYield, impactFracture, impactStrainAtYield, shearYield, shearFracture, shearStrainAtYield, maxEdge, armor) {\n    return {\n        name: name,\n        solidDensity: solidDensity,\n        impactYield: impactYield,\n        impactFracture: impactFracture,\n        impactStrainAtYield: impactStrainAtYield,\n        shearYield: shearYield,\n        shearFracture: shearFracture,\n        shearStrainAtYield: shearStrainAtYield,\n        maxEdge: maxEdge,\n        armor: armor\n    }\n}\n\nvar Weapon = function(name, size, attacks) {\n    return {\n        name: name,\n        size: size,\n        attacks: attacks\n    }\n}\n\nvar Attack = function(name, edged, velocity, area) {\n    return {\n        name: name,\n        edged: edged,\n        velocity: velocity,\n        area: area\n    }\n}\n\nconst weapons = [\n    new Weapon(\"mace\", 800, [new Attack(\n                \"bash\",\n                false,\n                2,\n                20,\n            )\n        ]\n    ),\n    new Weapon(\"short sword\", 300, [\n            new Attack(\n                \"slash\",\n                true,\n                1.25,\n                20000,\n            ),\n            new Attack(\n                \"stab\",\n                true,\n                1,\n                50,\n            )\n        ]\n    ),\n    new Weapon(\"spear\", 400, [\n            new Attack(\n                \"stab\",\n                true,\n                1,\n                20\n            )\n        ]\n    )\n]\n\nconst materials = [\n    new Material(\"muscle\", 1060, 10000, 10000, 50000, 20000, 20000, 50000, 0, true),\n    new Material(\"iron\", 7850, 542500, 1085000, 319, 155000, 310000, 189, 10000, true),\n    new Material(\"copper\", 8930, 245000, 770000, 175, 70000, 220000, 145, 10000, true),\n    new Material(\"bronze\", 8250, 602000, 843500, 547, 172000, 241000, 156, 10000, true),\n    new Material(\"silver\", 10490, 350000, 595000, 350, 100000, 170000, 333, 10000, false),\n    new Material(\"steel\", 7850, 1505000, 2520000, 940, 430000, 720000, 215, 10000, true),\n    new Material(\"adamantine\", 200, 5000000, 5000000, 0, 5000000, 5000000, 0, 100000, true),\n]\n\nfunction sanitize(n) {\n    return typeof(n) == \"number\" ? n : 0\n}\n\nexport default {\n    name: \"CombatSims\",\n    props: {\n        name: String, solidDensity: Number, \n        impactYield: Number, impactFracture: Number, impactElasticity: Number,\n        shearYield: Number, shearFracture: Number, shearElasticity: Number,\n        maxEdge: Number},\n    computed: {\n        mat() {\n            return new Material(this.name, sanitize(this.solidDensity), \n            sanitize(this.impactYield), sanitize(this.impactFracture), sanitize(this.impactElasticity),\n            sanitize(this.shearYield), sanitize(this.shearFracture), sanitize(this.shearElasticity),\n            sanitize(this.maxEdge), true)\n        },\n    },\n    watch: {\n        $props: {\n            handler() {\n                this.$root.$emit('bv::refresh::table', 'attacks-table')\n                this.$root.$emit('bv::refresh::table', 'defense-table')\n            },\n            deep: true,\n            immediate: true\n        }\n    },\n    methods: {\n        attacks(ctx, callback) {\n            let mat = this.mat\n            wasm.then(m => {\n            let t = []\n            for(const weapon of weapons) {\n                for(const attack of weapon.attacks) {\n                    let this_entry = {attack: weapon.name + \" \" + attack.name, _cellVariants: {}}\n                    for(const other_mat of materials) {\n                        if(!other_mat.armor) continue\n                        const score = m.attack_score(attack, mat, other_mat, weapon)\n                        this_entry[other_mat.name] = score\n                        if (score >= 7.0) {\n                            this_entry._cellVariants[other_mat.name] = \"success\" \n                        } else if (score < 3.0) {\n                            this_entry._cellVariants[other_mat.name] = \"danger\"\n                        }\n                    }\n                    t.push(this_entry)\n                }\n            }\n            callback(t);\n            })\n            return null\n        },\n        defense(ctx, callback) {\n            let mat = this.mat\n            wasm.then(m => {\n            let entries = {}\n            for(const weapon of weapons) {\n                for(const other_mat of materials) {\n                    const weapon_weight = other_mat.solidDensity * weapon.size / 1000\n                    for(const attack of weapon.attacks) {\n                        const attack_name = weapon.name + \" \" + attack.name\n                        const score = 10.0 - m.attack_score(attack, other_mat, mat, weapon, weapon_weight)\n                        entries[attack_name] = entries[attack_name] || {attack: attack_name, _cellVariants: {}}\n                        entries[attack_name][other_mat.name] = score\n                        if (score >= 8.0) {\n                            entries[attack_name]._cellVariants[other_mat.name] = \"success\" \n                        } else if (score < 2.0) {\n                            entries[attack_name]._cellVariants[other_mat.name] = \"danger\"\n                        }\n                    }\n                }\n            }\n            let t = []\n            for(const key in entries) {\n                t.push(entries[key])\n            }\n            callback(t)\n            })\n            return null;\n        },\n        values() {\n            let entries = []\n            entries.push({\n                name: this.mat.name,\n                density: this.mat.solidDensity/1000,\n                impact_yield: this.mat.impactYield/1000000,\n                blunt_defense: 2*(this.mat.impactFracture/1000000)-(this.mat.impactYield/1000000),\n                edge_defense: this.mat.shearFracture/1000000,\n                edge_attack: this.mat.shearFracture/1000000 * this.mat.maxEdge / 10000,\n                average_mace_momentum: Math.round(1250*2/(1000000/60000 + this.mat.solidDensity*0.0008))\n            })\n            for(const mat of materials) {\n                entries.push({\n                    name: mat.name,\n                    density: mat.solidDensity/1000,\n                    impact_yield: mat.impactYield/1000000,\n                    blunt_defense: 2*(mat.impactFracture/1000000)-(mat.impactYield/1000000),\n                    edge_defense: mat.shearFracture/1000000,\n                    edge_attack: mat.shearFracture/1000000 * mat.maxEdge / 10000,\n                    average_mace_momentum: Math.round(1250*2/(1000000/60000 + mat.solidDensity*0.0008))\n                })\n            }\n            return entries;\n        },\n    }\n}\n</script>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CombatSims.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CombatSims.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./CombatSims.vue?vue&type=template&id=7ad1f256&\"\nimport script from \"./CombatSims.vue?vue&type=script&lang=js&\"\nexport * from \"./CombatSims.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('b-container',[_c('b-row',[_c('b-col',[_c('b-form-checkbox',{attrs:{\"button-variant\":_vm.running ? 'danger' : 'success',\"button\":\"\"},model:{value:(_vm.running),callback:function ($$v) {_vm.running=$$v},expression:\"running\"}},[_vm._v(_vm._s(_vm.running ? \"Stop\" : \"Go\"))])],1)],1),_c('b-row',[_c('b-col',[_c('b-form-input',{attrs:{\"number\":\"\"},model:{value:(_vm.temp_one),callback:function ($$v) {_vm.temp_one=$$v},expression:\"temp_one\"}}),_c('b-form-input',{attrs:{\"number\":\"\",\"disabled\":\"\"},model:{value:(_vm.specHeat),callback:function ($$v) {_vm.specHeat=$$v},expression:\"specHeat\"}})],1),_c('b-col',[_c('b-form-input',{attrs:{\"number\":\"\"},model:{value:(_vm.temp_two),callback:function ($$v) {_vm.temp_two=$$v},expression:\"temp_two\"}}),_c('b-form-input',{attrs:{\"number\":\"\",\"placeholder\":\"SPEC_HEAT\"},model:{value:(_vm.other_spec_heat),callback:function ($$v) {_vm.other_spec_heat=$$v},expression:\"other_spec_heat\"}})],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <b-container>\n        <b-row>\n            <b-col>\n                <b-form-checkbox :button-variant=\"running ? 'danger' : 'success'\" button v-model = \"running\">{{running ? \"Stop\" : \"Go\"}}</b-form-checkbox>\n            </b-col>\n        </b-row>\n        <b-row>\n            <b-col>\n                <b-form-input number v-model = \"temp_one\" ></b-form-input>\n                <b-form-input number disabled  v-model = \"specHeat\"></b-form-input>\n            </b-col>\n            <b-col>\n                <b-form-input number v-model = \"temp_two\" ></b-form-input>\n                <b-form-input number v-model = \"other_spec_heat\" placeholder = \"SPEC_HEAT\"></b-form-input>\n            </b-col>\n        </b-row>\n    </b-container>\n</template>\n\n<script>\nexport default {\n    name: \"HeatSim\",\n    props: {\n        specHeat: Number\n    },\n    data() {\n        return {\n            temp_one: 10000,\n            temp_two: 10000,\n            running: false,\n            interval: null,\n            other_spec_heat: null\n        }\n    },\n    watch: {\n        running(new_value) {\n            if(!this.other_spec_heat) {\n                this.other_spec_heat = this.specHeat\n            }\n            var heatsim = this;\n            clearInterval(this.interval);\n            if(new_value) this.interval = setInterval(() => heatsim.do_heat_transfer(), 10)\n        }\n    },\n    methods: {\n        do_heat_transfer() {\n            const delta = (this.temp_two - this.temp_one)\n            this.temp_two -= delta / this.other_spec_heat\n            this.temp_one += delta / this.specHeat\n            if(Math.abs(delta) < 1) {\n                this.running = false\n                if(this.other_spec_heat > this.specHeat) {\n                    this.temp_two = Math.round(this.temp_two)\n                    this.temp_one = this.temp_two\n                } else {\n                    this.temp_one = Math.round(this.temp_one)\n                    this.temp_two = this.temp_one\n                }\n            } \n        }\n    }\n}\n</script>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./HeatSim.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./HeatSim.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./HeatSim.vue?vue&type=template&id=61ef6dd0&\"\nimport script from \"./HeatSim.vue?vue&type=script&lang=js&\"\nexport * from \"./HeatSim.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',[_c('b-link',{attrs:{\"id\":_vm.popoverID},on:{\"click\":function($event){_vm.show = !_vm.show}}},[_c('sup',[_vm._v(\"[\"+_vm._s(_vm.id)+\"]\")])]),_c('b-popover',{attrs:{\"custom-class\":\"citation\",\"show\":_vm.show,\"placement\":\"righttop\",\"target\":_vm.popoverID},on:{\"update:show\":function($event){_vm.show=$event}}},[_vm._t(\"default\")],2)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <span>\n        <b-link :id=\"popoverID\" @click=\"show = !show\"><sup>[{{id}}]</sup></b-link>\n        <b-popover custom-class=\"citation\" :show.sync=\"show\" placement=\"righttop\" :target=\"popoverID\"><slot></slot></b-popover>\n    </span>\n</template>\n\n<script>\nexport default {\n    props: {\n        id: String,\n    },\n    data() {\n        return {\n            show: false\n        }\n    },\n    computed: {\n        popoverID() {\n            return \"citation-popover-\"+this.id\n        }\n    }\n}\n</script>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Citation.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Citation.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Citation.vue?vue&type=template&id=6749eb6e&\"\nimport script from \"./Citation.vue?vue&type=script&lang=js&\"\nexport * from \"./Citation.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\n<div>\n<b-container fluid>\n    <b-row>\n    <b-col cols=8>\n    <b-tabs v-model = \"curTab\" pills vertical card>\n    <b-tab title = \"Game\">\n    <div class=\"input_category tab_content\" style=\"grid-template-rows: repeat(2,min-content);\">\n        <token v-model = \"name\" token=\"STATE_NAME\" description=\"The material's noun.\" placeholder=\"iron\">\n            Like \"piles of {{name}}\". If this is the same as ADJ, it'll automatically use STATE_NAME_ADJ instead.\n        </token>\n        <token v-model = \"adj\" token=\"STATE_ADJ\" description=\"The material's adjective.\" placeholder=\"iron\">\n            Like \"{{adj}} long sword\". If this is the same as NAME, it'll automatically use STATE_NAME_ADJ instead.\n        </token>\n        <token v-model = \"color\" token=\"COLOR\" description=\"The material's color. Used in graphics as of steam release.\" placeholder=\"GRAY\">\n            A list of tokens is available <b-link href=\"https://dwarffortresswiki.org/index.php/DF2014:Color#Color_tokens\">here.</b-link> I would have a drop-down with every color, but then I'd have to make a little raw parser so you can add your own arbitrarily, and so on. Horrible.\n        </token>\n        <token type = \"number\" number v-model.number = \"matValue\" token=\"MAT_VALUE\" description=\"Item values are multiplied by this.\" placeholder=\"10\">\n            You can actually set this to a negative number, forcing others to pay you to take your garbage away. Fun facts.\n        </token>\n    </div>\n    </b-tab>\n    <b-tab title = \"Thermal\">\n    <b-container>\n        <b-row>\n        <temperature-input v-model=\"melting\" v-bind:exists.sync=\"melting_exists\" name=\"Melting point\" id=\"MELTING_POINT\" description=\"The temperature at which this material becomes a liquid.\" optional>\n            There's no special conditions that need to happen for melting. I've had materials I expected to be liquid freeze underground and thus be unusable. Keep these things in mind!\n        </temperature-input>\n        <temperature-input v-model=\"boiling\" v-bind:exists.sync=\"boiling_exists\" name=\"Boiling point\" id=\"BOILING_POINT\" description = \"The temperature at which this material becomes a gas.\" optional>\n            If you set this very low, an object of this material can still be made in reactions, but it'll boil instantly. Very useful for reactions.\n        </temperature-input>\n        </b-row>\n        <b-row>\n        <temperature-input v-model=\"heatdam\" v-bind:exists.sync=\"heatdam_exists\" name=\"Heat damage point\" id=\"HEATDAM_POINT\" description=\"Above this temperature, any item made of this material starts taking damage.\" optional disabled>\n            Damage is tattering etc. This token is underused, I think.\n        </temperature-input>\n        <temperature-input v-model=\"colddam\" v-bind:exists.sync=\"colddam_exists\" name=\"Cold damage point\" id=\"COLDDAM_POINT\" description=\"Below this temperature, any item made of this material starts taking damage.\" optional disabled>\n            Damage is tattering etc. This token is underused, I think.\n        </temperature-input>\n        </b-row>\n        <b-row>\n        <temperature-input v-model=\"ignition\" v-bind:exists.sync=\"ignition_exists\" name=\"Ignition point\" id=\"IGNITION_POINT\" description=\"Above this temperature, items made of this material catch fire.\" optional disabled>\n            If you don't set a heatdam point along with this, you'll end up having perma-fires.\n        </temperature-input>\n        </b-row>\n        <b-row>\n        <token type = \"number\" number v-model.number = \"specHeat\" token = \"SPEC_HEAT\" description = \"The specific heat capacity, in J/kg-K.\" placeholder=\"450\" href=\"https://en.wikipedia.org/wiki/Specific_heat_capacity\" name=\"Specific heat capacity\" complex>\n            <template #dwarf>\n                Temperature is stored as a fixed-point number and this is the denominator of the fractional part. In other words, the \"minimum temperature unit\" of a material is 1/SPEC_HEAT. When an object of one temperature interfaces with another, the whole parts of the temperatures are compared, A-B, and then each material's \"minimum temperature unit\" is incremented by this value. Below is a simulator for this process: it uses the same process (with floats instead of fixed-points, mind) and works as fast as Dwarf Fortress's default speed.\n                <heat-sim :specHeat = specHeat></heat-sim>\n            </template>\n            <template #science>\n                This is how much heat it takes to increase a kilogram of material by one kelvin. The most familiar example is water, whose value in DF's units is 4184. The calorie is a unit of energy based on water's heat capacity, so don't get confused about that. Water's heat capacity is 1 calorie/gram-kelvin, or 1000 calories/kilogram-kelvin, or 4184 Joules/kilogram-kelvin. \n            </template>\n        </token>\n        </b-row>\n    </b-container>\n    </b-tab>\n    <b-tab title=\"Mass\">\n    <div class = \"tab_content input_category\">\n        <b-form-row>\n        <token type = \"number\" number v-model.number = \"solidDensity\" token = \"SOLID_DENSITY\" description = \"The density of the material when solid, in kilograms/meter^3.\" placeholder = \"7850\">\n            This is actually one of the more important stats, for blunt weapons, ammo and, surprisingly, armor. Armor of sufficient density can stop low-momentum attacks cold. For ammo, there's a max velocity weapons can fire at and a max force, so there's a maximum density that matters. For crossbows, this is 1666, which is hilariously low, only mattering for wood ammunition and adamantine, which is so sharp and strong it doesn't even matter.\n        </token>\n        <token type = \"number\" number v-model.number = \"liquidDensity\" token = \"LIQUID_DENSITY\" description = \"The density of the material when liquid.\" placeholder=\"6980\">\n            This only matters for hauling.\n        </token>\n        </b-form-row>\n        <token type = \"number\" number v-model.number = \"molarMass\" token = \"MOLAR_MASS\" description = \"The molar mass of this material, in kilograms/mol.\" placeholder = \"55485\" complex href=\"https://en.wikipedia.org/wiki/Molar_mass\" name=\"Molar mass\">\n            <template #dwarf>\n                Last I checked, even Toady seems somewhat baffled as to the provenance of this token. It's mostly only important for computational fluid dynamics--the specific gas constant is <katex-element expression=\"\\frac{R}{M}\" />, where R is the <b-link href=\"https://en.wikipedia.org/wiki/Gas_constant\">gas constant</b-link> and M is the molar mass, and this is important for, say, force calculations for moving air, but Dwarf Fortress just doesn't have any of that.\n            </template>\n            <template #science>\n                This is simply the mass of a mole of material. This is important not only in computational fluid dynamics, but in chemistry--you probably want to measure your reagents by moles rather than by mass for stoichiometry purposes. Of course, all reactions in DF are custom-coded in the raws, and this is unlikely to change any time soon (although it is possible it will change eventually).\n            </template>\n        </token>\n    </div>\n    </b-tab>\n    <b-tab title=\"Strength\">\n    <b-container>\n        <b-row>\n            <b-button-group>\n            <b-button @click=\"strengthPlaceholders\" variant=\"primary\">Use standard DF placeholders</b-button>\n            <b-button @click=\"realisticPlaceholders\" variant=\"primary\">Use engineering placeholders</b-button>\n            <b-button variant=\"info\" v-b-toggle.strengthPlaceholder>?</b-button>\n            </b-button-group>\n            <b-collapse id=\"strengthPlaceholder\">\n                <p>The former just sets shear yield to tensile yield, compressive yield to 3.5x shear yield and fractures to double yield.</p>\n                <p>The latter instead sets shear yield to <katex-element expression=\"\\sqrt{\\frac{1}{3}}\"/> tensile yield, but does the rest the same, <b-link href=\"https://en.wikipedia.org/wiki/Shear_strength#Comparison\">as engineers apparently do sometimes.</b-link></p>\n            </b-collapse>\n        </b-row>\n        <b-form-row>\n        <token type = \"number\" number v-model.number = \"tensileYield\" token = \"TENSILE_YIELD\" description = \"The tension at which this material no longer bounces back when stretched.\" complex name=\"Tensile yield strength\" href = \"https://en.wikipedia.org/wiki/Yield_(engineering)\" placeholder=\"155000\">\n            <template #dwarf>\n                Only matters for latched-on edged creature attacks--so, bites. Higher is better.\n            </template>\n            <template #science>\n                This is the pressure above which a material being pulled on from both sides won't go back to its original length when the pulling stops. It's often of much greater import than treated in DF.\n            </template>\n        </token>\n        <token type = \"number\" number v-model.number = \"tensileFracture\" token = \"TENSILE_FRACTURE\" description = \"The tension at which this material will tear when stretched.\" placeholder = \"310000\" complex name=\"Tensile strength\" href=\"https://en.wikipedia.org/wiki/Ultimate_tensile_strength\">\n            <template #dwarf>\n                Basically the same as TENSILE_YIELD, though probably more important in its (pretty small) niche.\n            </template>\n            <template #science>\n            This represents the pressure at which a material breaks when pulled on. This is actually usually treated as incredibly important in engineering--this is often called \"ultimate strength\" in real life, even omitting the \"tensile\" part. There's even an important derived quantity, \"specific strength\", which <katex-element expression=\"\\frac{T_s}{\\rho}\" />, where <katex-element expression=\"T_s\" /> is ultimate tensile strength and <katex-element expression=\"\\rho\" /> is density. For your material, that's {{ Math.round(tensileFracture / (solidDensity / 1000)) / 1000}} <katex-element expression=\"\\frac{kN \\cdot m}{kg}\"/>; compare to steel's 91.72, or adamantine's 25,000 (!), or graphene's 62,453<citation id=\"1\" ><b-link href=\"https://en.wikipedia.org/wiki/Specific_strength\">Wikipedia, \"Specific Strength\"</b-link>; cited from <b-link href=\"https://web.archive.org/web/20140328060419/https://www.nobelprize.org/nobel_prizes/physics/laureates/2010/advanced-physicsprize2010.pdf\">the Royal Swedish Academy of Sciences article on the 2010 Nobel laureates,</b-link>, which has a section on graphene's strength from which the value was (hopefully) derived via dimensional analysis.</citation>\n            </template>\n        </token>\n        </b-form-row>\n        <b-form-row>\n        <token type = \"number\" number v-model.number = \"shearYield\" token = \"SHEAR_YIELD\" description = \"The stress at which this material no longer bounces back when sheared.\" placeholder=\"155000\" complex name = \"Shear yield strength\" href=\"https://en.wikipedia.org/wiki/Shear_strength\">\n            <template #dwarf>\n                Technically involved in edged attacks, but since SHEAR_FRACTURE is multiplied by the contact area (which is 5 at the very least) in combat calculations, it doesn't matter except for bolts, and even then only barely. If you mod in ammo or attacks that have a size of 1, this will matter, otherwise not so much. This is also copied to TORSION_YIELD, which is like TENSILE but for blunt attacks that latch... which vanilla DF has none of.\n            </template>\n            <template #science>\n                This is the <i>twisting</i> pressure at which a material won't untwist. This can also be derived via <b-link href=\"https://en.wikipedia.org/wiki/Von_Mises_yield_criterion\">some math</b-link>, but I think this requires more information than I take here.\n            </template>\n        </token>\n        <token type = \"number\" number v-model.number = \"shearFracture\" token = \"SHEAR_FRACTURE\" description = \"The stress at which this material will break when sheared.\" placeholder = \"310000\" complex name = \"Shear strength\" href=\"https://en.wikipedia.org/wiki/Shear_strength\">\n            <template #dwarf>\n            This is, for all intents and purposes, the <i>only</i> stat that matters in defense against bladed weapons. Technically a bladed attack failure becomes a blunt attack, so all those stats matter too, but for bladed defense, nothing else matters as much as this, even remotely. On bladed offense, MAX_EDGE is a close second.\n            </template>\n            <template #science>\n                This one isn't nearly as important as tensile strength, at least in common use in engineering. Apparently it's often just estimated as 60% of tensile strength, assumedly due to the <b-link href=\"https://en.wikipedia.org/wiki/Von_Mises_yield_criterion\">von Mises yield criterion</b-link> as well as the fact that, according to engineers, <katex-element expression=\"\\sqrt{\\frac{1}{3}} = 0.6\" /> Dwarf Fortress estimates it as 100% of tensile strength, which is a bit more than that. \n            </template>\n        </token>\n        </b-form-row>\n        <b-form-row>\n        <token type = \"number\" number v-model.number = \"compressiveYield\" token = \"COMPRESSIVE_YIELD\" description = \"The pressure at which this material no longer bounces back when compressed.\" placeholder = \"542500\" complex name=\"Compressive yield strength\" href=\"https://en.wikipedia.org/wiki/Compressive_strength\">\n            <template #dwarf>\n                This only matters for pinching and strangulation. However, it's copied to IMPACT_YIELD, which matters quite a lot: a material with a low IMPACT_YIELD can be completely deflected by armor with high density (imagine a semi-solid material going <i>splat</i> against a wall). Interestingly enough, though, a high impact yield actually makes armor <i>worse</i>--the material coefficient in blunt armor calculations is equal to 2*IMPACT_FRACTURE - IMPACT_YIELD--for this material, {{2*compressiveFracture - compressiveYield}}. I would assume this is to represent the fact that a low IMPACT_FRACTURE allows armor to \"absorb impact\" more--any denting is energy dissipated into the armor, rather than into your squishy, squishy body.\n            </template>\n            <template #science>\n                This one's an odd one. There's a real-life notion of compressive strength, important in engineering... but whether that means yield or fracture strength is dependent on context. The game uses approximations of 3.5x tensile strength, because, for the most part, there's really no data on this. This is probably more of a Dwarf Fortress problem than a problem with reality, of course.\n            </template>\n        </token>\n        <token type = \"number\" number v-model.number = \"compressiveFracture\" token = \"COMPRESSIVE_FRACTURE\" description = \"The pressure at which this material will break when compressed.\" placeholder = \"1085000\">\n            This is copied to impact fracture, which, along with shear fracture and to a lesser extent density and impact yield (albeit inversely) are the only properties that matter for armor, period. Everything else is related to skill, weapon and armor themselves. The higher the better, for this and shear fracture. For density, higher is better on defense, but lower-skilled armor users will have trouble wearing it without being encumbered. For reality: see compressive yield.\n        </token>\n        </b-form-row>\n        <b-form-row>\n        <token type = \"number\" number v-model.number = \"maxEdge\" token=\"MAX_EDGE\" description=\"How sharp the material can get.\" placeholder=\"10000\">\n            This is the sharpest a weapon of this material can be. Lower-quality weapons are less sharp, so this also, to an extent, makes quality more important for weapons, though higher is <i>always</i> better.\n        </token>\n        </b-form-row>\n    </b-container>\n    </b-tab>\n    <b-tab lazy title=\"Elasticity\">\n        <elasticity v-model=\"elasticity\"></elasticity>\n    </b-tab>\n    <b-tab title=\"Facts\">\n        <combat-sims :name = \"solidName\" :solidDensity = \"solidDensity\"\n        :impactYield = \"impactYield\" :impactFracture = \"impactFracture\" :impactElasticity = \"impactElasticity\"\n        :shearYield = \"shearYield\" :shearFracture = \"shearFracture\" :shearElasticity = \"shearElasticity\"\n        :maxEdge = \"maxEdge\">\n            <b-tabs>\n                <b-tab title=\"Interesting properties\">\n                    Speed of sound is <katex-element display-mode :expression=\"speedOfSound\" /><br/>\n                    Your material can be considered <span v-if=\"shearFracture / shearYield > 1.1 && shearElasticity > 100\">ductile</span><span v-else>brittle</span>.\n                </b-tab>\n                <b-tab title=\"Stress-strain properties\">\n                    <p>The below is the \"approximate\" <b-link href=\"https://en.wikipedia.org/wiki/Stress‚Äìstrain_curve\">stress-strain curve</b-link> of your material.  Up to yield it should be reasonably accurate, after that it's just a silly flat line because, well, there's no simulation of any of the properties between yield and fracture.</p>\n                    <svg width=\"505px\" height=\"300px\">\n                        <path id=\"stressStrain\" :d=\"stressStrainCurve\" stroke=\"cyan\" fill-opacity = \"0\" stroke-width = \"3\" />\n                        <path d=\"M 100 0 V 300 H 500\" fill-opacity = \"0\" stroke-width = \"2\" stroke=\"white\"/>\n                        <text :x=\"100 + (tensileYield / tensileFracture) * 400\" y = \"50\" stroke = \"white\" fill=\"white\">Yield</text>\n                        <circle :cx=\"100 + (tensileYield / tensileFracture) * 400\" cy = \"30\" r = \"4\" fill=\"white\"/>\n                        <text text-anchor = \"middle\" x=\"500\" y=\"30\" stroke = \"white\" fill=\"white\" dy=\".3em\">x</text>\n                        <text text-anchor = \"end\" x=\"500\" y=\"50\" stroke = \"white\" fill=\"white\">Fracture</text>\n                        <text text-anchor = \"end\" x=\"100\" y=\"250\" stroke = \"white\" fill=\"white\">Stress (œÉ)</text>\n                        <text text-anchor = \"start\" x=\"150\" y=\"290\" stroke = \"white\" transform=\"translate(-10 0)\" fill=\"white\"><textPath href=\"#stressStrain\">Stress-strain curve</textPath></text>\n                        <text text-anchor = \"start\" x = \"200\" y = \"295\" stroke = \"white\" fill=\"white\">Strain (Œµ)</text>\n                    </svg>\n                    <katex-element display-mode :expression=\"toughness\" />\n                    <p>The above equation and result gives you the <b-link href=\"https://en.wikipedia.org/wiki/Toughness\">toughness</b-link> of the material. This is, of course, calculated via the integral of the above graph, using the <b-link href=\"https://en.wikipedia.org/wiki/Trapezoidal_rule\">trapezoidal rule</b-link> to get... well, an exact value. It has no meaning whatsoever in Dwarf Fortress... or does it? There is a sense in which it might apply: blunt defense does increase with the difference between fracture and yield, just like this value does. However, the STRAIN_AT_YIELD doesn't matter here, while you will find that changing it does change the numbers above, inversely.</p>\n                </b-tab>\n                <b-tab title=\"Stiffness tensor\">\n                    <p>This is the material's stiffness tensor in matrix form. Since all materials in DF are kinda inherently isomorphic and homogenous, it's that particular form of it. If the game allowed other kinds of materials... well, it'd get a lot <i>weirder</i>, for one thing. A tool such as this might be entirely <i>necessary</i>, even!</p>\n                    <katex-element display-mode :expression=\"stiffness\" />\n                </b-tab>\n            </b-tabs>\n        </combat-sims>\n    </b-tab>\n    <b-tab v-if=\"false\" title = \"Help\">\n        <p>You don't need to use the exact values given or adhere strictly to the helper's choices regarding weapons/armor/anvils and so on. This is a <i>helper</i>, not a standard.</p>\n        <p>If you don't know where to start finding a material's properties, here's a few sources:<br/>\n        <b-link href=\"http://www.matweb.com/index.aspx\">Matweb</b-link><br/>\n        <b-link href=\"http://www.wolframalpha.com/\">Wolfram Alpha</b-link><br/>\n        <b-link href=\"https://en.wikipedia.org/wiki/Main_Page\">Wikipedia</b-link><br/>\n        <b-link href=\"http://www.webelements.com/\">WebElements</b-link><br/>\n        <p>If any properties are unavailable, the game will use placeholders. However, if those properties happen to be strength, it would be best to estimate to the best of your ability, such as by using a similar material (E.G iron for cobalt).</p>\n        <p>Some properties are outright optional, i.e. NONE is valid. For these, the helper has a toggle.</p>\n    </b-tab>\n    </b-tabs>\n            </b-col>\n        <b-col>\n            <b-button-toolbar>\n                <b-form-checkbox button :button-variant=\"shouldShowAll ? 'success' : 'danger'\" v-model = \"shouldShowAll\">\n                    Show{{shouldShowAll ? 'ing' : ''}} all\n                </b-form-checkbox>\n                <b-button v-if = \"showAll\" @click=\"copyRaw\" variant=\"primary\">{{ buttonText }}</b-button>\n            </b-button-toolbar>\n<pre style=\"text-align:left;\" id='result'><span v-show=\"showGame\"><span v-if=\"name==adj\">\n[STATE_NAME_ADJ:ALL_SOLID:{{ solidName }}]\n[STATE_NAME_ADJ:LIQUID:{{ liquidName }}]\n[STATE_NAME_ADJ:GAS:{{ gasName }}]</span><span v-else>\n[STATE_NAME:ALL_SOLID:{{ solidName }}]\n[STATE_NAME:LIQUID:{{ liquidName }}]\n[STATE_NAME:GAS:{{ gasName }}]\n[STATE_ADJ:ALL_SOLID:{{ solidAdj }}]\n[STATE_ADJ:LIQUID:{{ liquidAdj }}]\n[STATE_ADJ:GAS:{{ gasAdj }}]</span>\n[DISPLAY_COLOR:0:7:1]\n[BUILD_COLOR:0:7:1]\n[MATERIAL_VALUE:{{ Math.round(matValue) }}]</span><span v-show = \"showThermal\">\n[SPEC_HEAT:{{ Math.round(specHeat) }}]<span v-if=\"melting_exists\">\n[MELTING_POINT:{{ Math.round(melting) }}]</span><span v-if=\"boiling_exists\">\n[BOILING_POINT:{{ Math.round(boiling) }}]</span><span v-if=\"ignition_exists\">\n[IGNITE_POINT:{{ Math.round(ignition) }}]</span><span v-if=\"colddam_exists\">\n[COLDDAM_POINT:{{ Math.round(colddam) }}]</span><span v-if=\"heatdam_exists\">\n[HEATDAM_POINT:{{ Math.round(heatdam) }}]</span></span><span v-show = \"showStrength\">\n<span v-if=\"reasonableEdged && maxEdge >= 10000\">[ITEMS_WEAPON]</span><span v-if=\"solidDensity < 10000 && impactFracture > 100000\">[ITEMS_WEAPON_RANGED]</span><span v-if=\"solidDensity * shearFracture > 500000000\">[ITEMS_AMMO]</span><span v-if=\"impactFracture > 500000\">[ITEMS_DIGGER]\n</span><span v-if=\"reasonableEdged && bluntDefense > 1000000\">[ITEMS_ARMOR]\n</span><span v-if=\"magmaSafe && bluntDefense > 500000\">[ITEMS_ANVIL]\n</span></span><span v-show = \"showGame\">[ITEMS_METAL]\n[ITEMS_HARD]\n[ITEMS_SCALED]\n[ITEMS_BARRED]</span><span v-show=\"showMass\">\n[SOLID_DENSITY:{{ Math.round(solidDensity) }}]\n[LIQUID_DENSITY:{{ Math.round(liquidDensity) }}]\n[MOLAR_MASS:{{ Math.round(molarMass) }}]</span><span v-show = \"showStrength\">\n[IMPACT_YIELD:{{ Math.round(impactYield) }}]\n[IMPACT_FRACTURE:{{ Math.round(impactFracture) }}]\n[IMPACT_STRAIN_AT_YIELD:{{ Math.round(impactElasticity) }}]\n[COMPRESSIVE_YIELD:{{ Math.round(compressiveYield) }}]\n[COMPRESSIVE_FRACTURE:{{ Math.round(compressiveFracture) }}]\n[COMPRESSIVE_STRAIN_AT_YIELD:{{ Math.round(compressiveElasticity) }}] bulk modulus {{elasticity.bulk / 1000}} GPa\n[TENSILE_YIELD:{{ Math.round(tensileYield) }}]\n[TENSILE_FRACTURE:{{ Math.round(tensileFracture) }}]\n[TENSILE_STRAIN_AT_YIELD:{{ Math.round(tensileElasticity) }}] young's modulus {{elasticity.young / 1000}} GPa\n[TORSION_YIELD:{{ Math.round(shearYield) }}]\n[TORSION_FRACTURE:{{ Math.round(shearFracture) }}]\n[TORSION_STRAIN_AT_YIELD:{{ Math.round(shearElasticity) }}]\n[SHEAR_YIELD:{{ Math.round(shearYield) }}]\n[SHEAR_FRACTURE:{{ Math.round(shearFracture) }}]\n[SHEAR_STRAIN_AT_YIELD:{{ Math.round(shearElasticity) }}] shear modulus {{elasticity.shear / 1000}} GPa\n[BENDING_YIELD:{{ Math.round(bendingYield) }}]\n[BENDING_FRACTURE:{{ Math.round(bendingFracture) }}]\n[BENDING_STRAIN_AT_YIELD:{{ Math.round(bendingElasticity) }}]\n[MAX_EDGE:{{ Math.round(maxEdge) }}]</span><span v-show=\"showGame\">\n[STATE_COLOR:ALL_SOLID:{{ color }}]</span>\n</pre>\n    </b-col>\n</b-row>\n    </b-container>\n</div>\n</template>\n<script>\nimport Elasticity from \"@/components/Elasticity.vue\"\nimport TemperatureInput from \"@/components/TemperatureInput.vue\"\nimport Token from \"@/components/Token.vue\"\nimport CombatSims from \"@/components/CombatSims.vue\"\nimport HeatSim from \"@/components/HeatSim.vue\"\nimport Citation from \"@/components/Citation.vue\"\n\nfunction getSigFig(num) {\n    if (!num) {\n        return num\n    }\n    var trailers = 0\n    if (Math.abs(num)>1) {\n        var zeroes=0\n        while(Math.floor(num/Math.pow(10,zeroes))==num/Math.pow(10,zeroes)) {\n            zeroes++\n        }\n        return Math.floor(Math.log10(num))-(zeroes-2)\n    }\n    else {\n        trailers=0\n        while(Math.floor(num*Math.pow(10,trailers))!=num*Math.pow(10,trailers)) {\n            trailers++\n    }\n    return trailers\n    }\n}\n\nfunction sigFigs(n, sig) { //http://blog.magnetiq.com/post/497605344/rounding-to-a-certain-significant-figures-in\n    var mult = Math.pow(10,\n        sig - Math.floor(Math.log(n) / Math.LN10) - 1);\n    return Math.round(n * mult) / mult;\n}\nfunction getSigFigs(nums) {\n    var m = -Infinity\n    for(const x of nums) {\n        m = Math.max(getSigFig(x),m)\n    }\n    return m\n}\n\nfunction toMatrix(arr) {\n    let ret = \"\\\\begin{bmatrix}\\n\"\n    for(const row of arr) {\n        for(const member of row) {\n            ret += member + \" &\"\n        }\n        ret = ret.slice(0,-2) + \"\\\\\\\\\\n\"\n    }\n    return ret.slice(0,-3) + \"\\n\\\\end{bmatrix}\"\n}\n\nexport default ({\n    components: {\n        Elasticity,\n        TemperatureInput,\n        Token,\n        CombatSims,\n        HeatSim,\n        Citation\n    },\n    name: \"Helper\",\n    data() {\n        return {\n            name: \"iron\",\n            adj: \"iron\",\n            nameAdj: \"iron\",\n            color: \"GRAY\",\n            melting_exists: true,\n            boiling_exists: true,\n            ignition_exists: true,\n            colddam_exists: true,\n            heatdam_exists: true,\n            maxEdge: 10000,\n            matValue: 10,\n            melting: 11000,\n            boiling: 12000,\n            heatdam: 10000,\n            colddam: 10000,\n            ignition: 10000,\n            specHeat: 450,\n            solidDensity: 5000,\n            liquidDensity: 5000,\n            molarMass: 55485,\n            compressiveYield: 100000,\n            compressiveFracture: 100000,\n            shearYield: 100000,\n            shearFracture: 100000,\n            tensileYield: 100000,\n            tensileFracture: 100000,\n            elasticity: {\n                bulk: 170000,\n                young: 211000,\n                shear: 82000,\n            },\n            showResult: false,\n            realisticElasticity: true,\n            curTab: 0,\n            buttonText: \"üìã Copy text\",\n            shouldShowAll: false\n        }\n    },\n    computed: {\n        solidName: function() {\n            if (!this.melting_exists || this.melting < 10032) {\n                return 'frozen ' + this.name\n            } else {\n                return this.name\n            }\n        },\n        liquidName: function() {\n            if (this.melting_exists && this.melting >= 10032) {\n                return 'molten ' + this.name\n            } else {\n                return this.name\n            }\n        },\n        gasName: function() {\n            if (this.boiling_exists && this.boiling >= 10032) {\n                return 'boiling ' + this.name\n            } else {\n                return this.name\n            }\n        },\n        solidAdj: function() {\n            if (this.melting_exists && this.melting < 10032) {\n                return 'frozen ' + this.adj\n            } else {\n                return this.adj\n            }\n        },\n        liquidAdj: function() {\n            if (this.melting >= 10032) {\n                return 'molten ' + this.adj\n            } else {\n                return this.adj\n            }\n        },\n        gasAdj: function() {\n            if (this.boiling >= 10032) {\n                return 'boiling ' + this.adj\n            } else {\n                return this.adj\n            }\n        },\n        impactYield: function() {\n            return this.compressiveYield\n        },\n        impactFracture: function() {\n            return this.compressiveFracture\n        },\n        impactElasticity: function() {\n            return 100*this.impactYield / this.elasticity.bulk\n        },\n        compressiveElasticity: function() {\n            return 100*this.compressiveYield / this.elasticity.bulk\n        },\n        tensileElasticity: function() {\n            return 100*this.tensileYield / this.elasticity.young\n        },\n        shearElasticity: function() {\n            return 100*this.shearYield / this.elasticity.shear\n        },\n        bendingYield: function() {\n            return this.tensileYield\n        },\n        bendingFracture: function() {\n            return this.tensileFracture\n        },\n        bendingElasticity: function() {\n            return 100*this.bendingYield / this.elasticity.shear\n        },\n        showAll: function() {\n            return this.shouldShowAll || this.curTab >= 5\n        },\n        showGame: function() {\n            return this.showAll || this.curTab == 0\n        },\n        showThermal: function() {\n            return this.showAll || this.curTab == 1\n        },\n        showMass: function() {\n            return this.showAll || this.curTab == 2\n        },\n        showStrength: function() {\n            return this.showAll || this.curTab == 3 || this.curTab == 4\n        },\n        showName: function() {\n            return this.showGame || this.showThermal\n        },\n        reasonableEdged: function() {\n            return this.shearFracture > 200000\n        },\n        magmaSafe: function() {\n            return !((this.melting_exists && this.melting < 12000) || (this.boiling_exists && this.boiling < 12000) || (this.heatdam_exists && this.heatdam < 12000) || (this.ignition_exists && this.ignition < 12000))\n        },\n        bluntDefense: function() {\n            return this.impactFracture*2 - this.impactYield;\n        },\n        speedOfSound: function() {\n            return \"\\\\sqrt{\\\\frac{K}{\\\\rho}} = \" + Math.round(Math.sqrt(1000 * this.elasticity.bulk / this.solidDensity) * 100)/100 + \"\\\\frac{\\\\text{meters}}{\\\\text{second}}\"\n        },\n        stiffness: function() {\n            const sig = getSigFigs([this.elasticity.bulk, this.elasticity.shear])\n            const l = sigFigs(this.elasticity.bulk - (2*this.elasticity.shear)/3, sig) / 1000\n            const p = sigFigs(l + 2*this.elasticity.shear, sig) / 1000; // p-wave modulus\n            const s = this.elasticity.shear / 1000\n            return toMatrix([\n                [p, l, l, 0, 0, 0],\n                [l, p, l, 0, 0, 0],\n                [l, l, p, 0, 0, 0],\n                [0, 0, 0, s, 0, 0],\n                [0, 0, 0, 0, s, 0],\n                [0, 0, 0, 0, 0, s]\n            ]) + \"\\\\text{GPa}\" + toMatrix([\n                [\"\\\\epsilon_{11}\"],\n                [\"\\\\epsilon_{22}\"],\n                [\"\\\\epsilon_{33}\"],\n                [\"2\\\\epsilon_{23}\"],\n                [\"2\\\\epsilon_{13}\"],\n                [\"2\\\\epsilon_{12}\"],\n            ])\n        },\n        toughness: function() {\n            let s = \"\\\\int_{0}^{\\\\epsilon_f}\\\\sigma d\\\\epsilon =\"\n            const elasticCurve = (this.tensileYield * this.tensileElasticity / 200000)\n            const justPretendFlatOkay = (this.tensileFracture - this.tensileYield) * (this.tensileElasticity / 100000);\n            s += Math.round((elasticCurve+justPretendFlatOkay) * 1000) + \"\\\\frac{\\\\text{joules}}{\\\\text{meter}^3}\"\n            return s;\n        },\n        stressStrainCurve: function() {\n            const stop = 100 + Math.round((this.tensileYield / this.tensileFracture) * 400)\n            return \"M 100 300 L \" + stop + \" 30 500 30\"\n        },\n    },\n    methods: {\n        copyRaw() {\n            // incredibly low tech, i know\n            let text = document.getElementById(\"result\")\n            window.getSelection().removeAllRanges()\n            window.getSelection().selectAllChildren(text)\n            document.execCommand(\"copy\")\n            window.getSelection().removeAllRanges()\n        },\n        strengthPlaceholders() {\n            const y = this.tensileYield\n            const f = this.tensileFracture\n            this.shearYield = y\n            this.shearFracture = f\n            this.compressiveYield = y*3.5\n            this.compressiveFracture = f*3.5\n        },\n        realisticPlaceholders() {\n            const y = this.tensileYield\n            const f = y*2\n            const sr3 = Math.sqrt(1/3)\n            this.tensileFracture = f\n            this.shearYield = sr3*y\n            this.shearFracture = sr3*f\n            this.compressiveYield = y*3.5\n            this.compressiveFracture = f*3.5\n        }\n    }\n})\n\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Helper.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Helper.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Helper.vue?vue&type=template&id=228f0045&\"\nimport script from \"./Helper.vue?vue&type=script&lang=js&\"\nexport * from \"./Helper.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('b-container',[_c('h1',[_vm._v(\"Is it a roguelike?\")]),_c('b-form-checkbox-group',{attrs:{\"stacked\":\"\",\"options\":_vm.options},model:{value:(_vm.selected),callback:function ($$v) {_vm.selected=$$v},expression:\"selected\"}}),_vm._v(\" Your game is \"+_vm._s(_vm.score)),_c('br'),_c('b-button',{directives:[{name:\"b-toggle\",rawName:\"v-b-toggle.help\",modifiers:{\"help\":true}}],attrs:{\"variant\":\"info\"}},[_vm._v(\"What do these mean\")]),_c('b-collapse',{attrs:{\"id\":\"help\"}},[_c('p',[_c('b',[_vm._v(\"Heavy use of procedural generation\")]),_vm._v(\": I personally wouldn't check this box unless the \"),_c('i',[_vm._v(\"maps\")]),_vm._v(\" are procgen. So, Borderlands 2 doesn't get this, despite the obviously Angband-like loot, but Diablo definitely does.\")]),_c('p',[_vm._v(\"\\\"Highly tactical\\\" means that the moment-to-moment gameplay is primarily to do with making the right choices. For example, Slay the Spire passes this easily by virtue of being a deckbuilder, and in fact almost all turn-based games will pass this, and even some non-turn-based games, such as FTL.\")]),_c('p',[_c('b',[_vm._v(\"Requires technical skill\")]),_vm._v(\": anti-correlated with \\\"highly tactical\\\", but not strictly so. There are games that will pass both, such as Noita or even The Binding of Isaac, depending on the character. FTL fails this because it's real-time-with-pause.\")]),_c('p',[_c('b',[_vm._v(\"Game flow organized around \\\"floors\\\" and/or \\\"rooms\\\"\")]),_vm._v(\": this one's a bit hard to pin down, and one of the least valuable entries in this checklist. Basically, the gameplay's progression will likely appear to be a series of \\\"setpieces\\\" that are very similar run after run--Nethack has special rooms, FTL, Slay the Spire and The Binding of Isaac are all obviously room/floor-based, Tales of Maj'Eyal is dungeon-to-dungeon but still passes this. Diablo does too, actually.\")]),_c('p',[_c('b',[_vm._v(\"Game has \\\"runs\\\" that end in either death or victory\")]),_vm._v(\": this is often what is referred to as \\\"permadeath\\\". Basically, if you die, the run is *over*, you can't load a previous save and play the same run, with the same being true if you win. Death means the map is going to be different and, likely, your character build, the very next time you play the game.\")]),_c('p',[_c('b',[_vm._v(\"Death is a part of the game flow in a way that is not game over\")]),_vm._v(\": if you make \"),_c('i',[_vm._v(\"actual game progress\")]),_vm._v(\" by dying, it fits this condition. Hades is my go-to example these days; before that, it was Rogue Legacy. Notably, a lot of games that are \"),_c('i',[_vm._v(\"very much not\")]),_vm._v(\" roguelikes fail this: The Elder Scrolls series, most platformers... really, it's hard to find games that \"),_c('i',[_vm._v(\"do\")]),_vm._v(\". Roguelites are, oddly, one of the places you see this the most. The least roguelike games I can think of that fit this are Dark Souls and those it inspired.\")]),_c('p',[_c('b',[_vm._v(\"Character building with visible stats or abilities\")]),_vm._v(\": If you have a character sheet, you pass. If you have a talent tree, you probably pass. If you have a \"),_c('i',[_vm._v(\"deck\")]),_vm._v(\", you pass. FTL passes by virtue of having, yes, a character sheet. Noita passes by virtue of wands, HP and perks being all the \\\"character building\\\" there is, and you get to see all of that at all times.\")]),_c('p',[_c('b',[_vm._v(\"Movement entirely on a grid\")]),_vm._v(\": Berlin definition. Included for posterity. Does not affect score. I think it's irrelevant.\")]),_c('p',[_c('b',[_vm._v(\"ASCII graphics as an option or default\")]),_vm._v(\": Berlin definition. Included for posterity. Does not affect score. I think it's irrelevant. Dolphin emulator used to pass this. They removed the shader right as soon as graphics cards could run it (a 3090 just manages). Sad.\")])])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n<template>\n<b-container>\n    <h1>Is it a roguelike?</h1>\n    <b-form-checkbox-group stacked v-model = \"selected\" :options = \"options\" >\n    </b-form-checkbox-group>\n    Your game is {{score}}<br>\n    <b-button variant=\"info\" v-b-toggle.help>What do these mean</b-button>\n    <b-collapse id=\"help\">\n        <p><b>Heavy use of procedural generation</b>: I personally wouldn't check this box unless the <i>maps</i> are procgen. So, Borderlands 2 doesn't get this, despite the obviously Angband-like loot, but Diablo definitely does.</p>\n        <p>\"Highly tactical\" means that the moment-to-moment gameplay is primarily to do with making the right choices. For example, Slay the Spire passes this easily by virtue of being a deckbuilder, and in fact almost all turn-based games will pass this, and even some non-turn-based games, such as FTL.</p>\n        <p><b>Requires technical skill</b>: anti-correlated with \"highly tactical\", but not strictly so. There are games that will pass both, such as Noita or even The Binding of Isaac, depending on the character. FTL fails this because it's real-time-with-pause.</p>\n        <p> <b>Game flow organized around \"floors\" and/or \"rooms\"</b>: this one's a bit hard to pin down, and one of the least valuable entries in this checklist. Basically, the gameplay's progression will likely appear to be a series of \"setpieces\" that are very similar run after run--Nethack has special rooms, FTL, Slay the Spire and The Binding of Isaac are all obviously room/floor-based, Tales of Maj'Eyal is dungeon-to-dungeon but still passes this. Diablo does too, actually.</p>\n        <p><b>Game has \"runs\" that end in either death or victory</b>: this is often what is referred to as \"permadeath\". Basically, if you die, the run is *over*, you can't load a previous save and play the same run, with the same being true if you win. Death means the map is going to be different and, likely, your character build, the very next time you play the game.</p>\n        <p><b>Death is a part of the game flow in a way that is not game over</b>: if you make <i>actual game progress</i> by dying, it fits this condition. Hades is my go-to example these days; before that, it was Rogue Legacy. Notably, a lot of games that are <i>very much not</i> roguelikes fail this: The Elder Scrolls series, most platformers... really, it's hard to find games that <i>do</i>. Roguelites are, oddly, one of the places you see this the most. The least roguelike games I can think of that fit this are Dark Souls and those it inspired.</p>\n        <p><b>Character building with visible stats or abilities</b>: If you have a character sheet, you pass. If you have a talent tree, you probably pass. If you have a <i>deck</i>, you pass. FTL passes by virtue of having, yes, a character sheet. Noita passes by virtue of wands, HP and perks being all the \"character building\" there is, and you get to see all of that at all times.</p>\n        <p><b>Movement entirely on a grid</b>: Berlin definition. Included for posterity. Does not affect score. I think it's irrelevant.</p>\n        <p><b>ASCII graphics as an option or default</b>: Berlin definition. Included for posterity. Does not affect score. I think it's irrelevant. Dolphin emulator used to pass this. They removed the shader right as soon as graphics cards could run it (a 3090 just manages). Sad.</p>\n    </b-collapse>\n</b-container>\n\n</template>\n\n<script>\nconst scores={\n        procgen: 3,\n        tactical: 2,\n        twitchy: -3,\n        rooms: 1,\n        permadeath: 4,\n        death_progression: -3,\n        rpg_elements: 1\n    }\n\nexport default {\n  name: 'Roguelike',\n  data() {\n      return {\n        selected: [\n            \"procgen\",\n            \"tactical\",\n            \"rooms\",\n            \"permadeath\",\n            \"rpg_elements\",\n            \"grid_based\",\n            \"ASCII\"\n        ],\n        options: [\n            {text: \"Heavy use of procedural generation\", value: \"procgen\"},\n            {text: \"Highly tactical\", value: \"tactical\"},\n            {text: \"Requires technical skill (dodging, twitch aiming etc.)\", value: \"twitchy\"},\n            {text: `Game flow organized around \"floors\" and/or \"rooms\"`, value: \"rooms\"},\n            {text: `Game has \"runs\" which end upon either death or victory`, value: \"permadeath\"},\n            {text: \"Death is a part of the game flow in a way that is not game over\", value: \"death_progression\"},\n            {text: \"Character building with visible stats or abilities\", value: \"rpg_elements\"},\n            {text: \"Movement entirely on a grid\", value: \"grid_based\"},\n            {text: \"ASCII graphics as an option or default\", value: \"ASCII\"}\n        ]\n      }\n  },\n  computed: {\n      score() {\n          let cur_score = 0\n          for(const entry of this.selected) {\n              cur_score += scores[entry] || 0\n          }\n          if (cur_score == 11 && this.selected.includes(\"grid_based\") && this.selected.includes(\"ASCII\")) {\n              return \"a classic(-style) roguelike\"\n          }\n            else if (cur_score>8)\n            {\n                return \"roguelike\"\n            }\n            else if (cur_score>5)\n            {\n                if(this.selected.includes(\"twitchy\"))\n                {\n                    return \"a roguelite\"\n                }\n                else\n                {\n                    return \"roguelike...like?\"\n                }\n            }\n            else if (cur_score>0)\n            {\n                return \"maybe rogueish\"\n            }\n            else\n            {\n                return \"not roguelike\"\n            }\n      }\n  }\n}\n</script>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Roguelike.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Roguelike.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Roguelike.vue?vue&type=template&id=fad6fbbe&\"\nimport script from \"./Roguelike.vue?vue&type=script&lang=js&\"\nexport * from \"./Roguelike.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('b-container',{staticClass:\"article-text\"},[_c('h2',[_vm._v(\"Preface\")]),_c('p',[_vm._v(\"This is intended as both a primer for my fellow Space Station 13 coders in hopes that they can understand atmospherics \"),_c('i',[_vm._v(\"and\")]),_vm._v(\" as something that can be read absent of all context thereof. Because I've often found myself annoyed by people making articles essentially reiterating things they've learned elsewhere, instead of just giving a list of the books they've read etc., here's links to a whole lot of reference material and papers regarding the topic at hand, the ones that I used to write this article. \"),_c('b-button',{directives:[{name:\"b-toggle\",rawName:\"v-b-toggle.links-dropdown\",modifiers:{\"links-dropdown\":true}}],attrs:{\"variant\":\"info\"}},[_vm._v(\"Show links\")])],1),_c('b-collapse',{attrs:{\"id\":\"links-dropdown\"}},[_c('p',[_vm._v(\"Yes, Wikipedia is a good reference source. This isn't a research paper, it's video games.\")]),_c('b-list-group',[_c('b-list-group-item',{attrs:{\"variant\":\"primary\",\"href\":\"https://www.researchgate.net/publication/2560062_Real-Time_Fluid_Dynamics_for_Games\"}},[_vm._v(\" Stam, Jos. (2003). Real-Time Fluid Dynamics for Games. \")]),_c('b-list-group-item',{attrs:{\"variant\":\"info\",\"href\":\"https://en.wikipedia.org/wiki/Iterative_Stencil_Loops\"}},[_vm._v(\" Iterative Stencil Loops (Wikipedia). The \\\"see also\\\" section is also all useful. \")]),_c('b-list-group-item',{attrs:{\"variant\":\"info\",\"href\":\"https://en.wikipedia.org/wiki/Computational_fluid_dynamics\"}},[_vm._v(\" Computational fluid dynamics (Wikipedia) \")]),_c('b-list-group-item',{attrs:{\"variant\":\"info\",\"href\":\"https://en.wikipedia.org/wiki/Discrete_Poisson_equation\"}},[_vm._v(\" Discrete Poisson equation (Wikipedia) \")])],1)],1),_c('h2',[_vm._v(\"Introduction\")]),_c('p',[_vm._v(\"Space Station 13 is a deeply complex social deduction game. Barotrauma is explicitly inspired by it; you can also think of it as Among Us crossed with Dwarf Fortress, although it should be noted that it's older than either\"),_c('sup',[_c('citation',{attrs:{\"id\":\"1\"}},[_vm._v(\"Yeah, older than Dwarf Fortress. That game's first release was 2006, SS13's was \"),_c('b-link',{attrs:{\"href\":\"https://secure.byond.com/games/Exadv1/SpaceStation13\"}},[_vm._v(\"2003.\")])],1)],1),_vm._v(\". The game is primarily famous for being something of a freeform trolling engine‚Äîdue to its open source nature and complex mechanics, a lot of features have been added to it over the years that allow for a lot of strange situations. Why is a wizard attacking a space station, and why do they only seem to know how to conjure guns, and why are they just giving the guns away?\"),_c('citation',{attrs:{\"id\":\"2\"}},[_vm._v(\"Actually, I \"),_c('b-link',{attrs:{\"href\":\"https://gunshowcomic.com/30\"}},[_vm._v(\"know this one.\")])],1),_vm._v(\" That sort of thing.\")],1),_c('p',[_vm._v(\"Simulation of gases usually involves solving a partial differential equation given initial conditions; since we're only talking diffusion, that would be the \"),_c('b-link',{attrs:{\"href\":\"https://en.wikipedia.org/wiki/Discrete_Poisson_equation\"}},[_vm._v(\"discrete Poisson equation.\")]),_vm._v(\" I expect some basic knowledge of this in this article, but I'll try to include explanations here and there. I recommend \"),_c('b-link',{attrs:{\"href\":\"https://www.youtube.com/watch?v=p_di4Zn4wz4\"}},[_vm._v(\"the 3blue1brown series on partial differential equations\")]),_vm._v(\", especially, and I'll link relevant bits as I go, because they're \"),_c('i',[_vm._v(\"seriously\")]),_vm._v(\" helpful for understanding. To summarize in simple terms: every point in space has a value, and that value changes over time towards the average of the values around it. There‚Äôs a variety of methods to solve this, and most of them rely on taking the initial conditions and transforming them some way or another into something that‚Äôs easier to compute.\")],1),_c('p',[_vm._v(\"However, we have a problem: the density at a given point can change arbitrarily, because this is a video game where unpredictable agents\"),_c('citation',{attrs:{\"id\":\"3\"}},[_vm._v(\"(or ‚Äúplayers‚Äù for short)\")]),_vm._v(\" can muck things up at any time. Therefore, instead of getting a solution to the equation, where we can just take f(x,y,t) and get a nice clean value, we have to simulate it every tick. So, how do we do this?\")],1),_c('h2',[_vm._v(\"The finite difference Method\")]),_c('p',[_vm._v(\"The trick is to divide the problem space up into a finite amount of chunks and then, each ‚Äútick‚Äù, calculate the changes cell-by-cell. \"),_c('b-embed',{attrs:{\"type\":\"video\",\"aspect\":\"16by9\",\"aria-label\":\"A sine wave is drawn on a graph as the phrase 'finite difference method' is drawn above it. Vertical lines appear separating the sine wave into regions, and then each individual region of the sine wave is turned into a line with the average value of that region.\",\"controls\":\"\"}},[_c('source',{attrs:{\"src\":require(\"./../assets/FiniteDifference3.mp4\"),\"type\":\"video/mp4\"}})]),_vm._v(\" This is actually a solved problem.\"),_c('citation',{attrs:{\"id\":\"4\"}},[_c('b-link',{attrs:{\"href\":\"https://www.researchgate.net/publication/2560062_Real-Time_Fluid_Dynamics_for_Games\"}},[_vm._v(\"Stam, Jos. \\\"Real-Time Fluid Dynamics for Games.‚Äù\")])],1),_vm._v(\" In essence, we take all the chunks, put them into a two-dimensional array,\"),_c('citation',{attrs:{\"id\":\"5\"}},[_vm._v(\"Or what-have-you. It really, really depends, always does.\")]),_vm._v(\" and compare each member to its neighbors, changing how much gas they have based on the difference. Say you have 10 moles of gas in this center area. How much should there be next tick, in the surrounding ones? Well, let‚Äôs say the maximum amount diffuses every tick; since each tile can only have up to 4 cardinal neighboring tiles in 2D, let‚Äôs say 1/5 of the gas gets shared to each adjacent tile each tick. So, we do this calculation: first tile has 0 gas; second tile‚Äôs neighbor shares 1/5 of its gas, leading to this tile having 2 moles; 3rd has none; 4th is same as 2nd; fifth loses 1/5 of its gas to each neighboring tile, so it‚Äôs left with 2 moles; and so on.\")],1),_c('fdm-demonstration'),_c('p',[_vm._v(\"It should be noted that this isn't actually doing all the calculations in-place--internally\"),_c('citation',{attrs:{\"id\":\"6\"}},[_c('b-link',{attrs:{\"href\":\"https://github.com/Putnam3145/putnam3145-github-io-wasm/blob/b188585bd22494fe31466c8c033b7d7b095d8c77/src/lib.rs#L179\"}},[_vm._v(\"See here.\")])],1),_vm._v(\", it's making a copy by mapping a read-only version of the input.\"),_c('citation',{attrs:{\"id\":\"7\"}},[_vm._v(\"This is actually a lot like many lock-free data structures.\")])],1),_c('p',[_vm._v(\"This can get hard to follow for a human rather quickly, but a computer doesn't really see the difference between something simple and something very complicated.\")]),_c('p',[_vm._v(\"More often than not, one will implement the actual transformation thereof as an \"),_c('b-link',{attrs:{\"href\":\"https://en.wikipedia.org/wiki/Iterative_Stencil_Loops\"}},[_vm._v(\"iterative stencil loop\")]),_vm._v(\", and, in fact, the rest of this article is about those.\")],1),_c('h2',[_vm._v(\"LINDA\")]),_c('p',[_vm._v(\"SS13‚Äôs original implementation of this was in a file called FEA.dm, short for ‚Äúfinite element analysis‚Äù. People, naturally, started calling the system itself FEA. I am not familiar with FEA, in fact; I have only worked with LINDA, /tg/station‚Äôs own atmospheric system, which has the same DNA as the research paper above, but with a lot of caveats and changes in order to ensure performance.\")]),_c('p',[_vm._v(\"I should note at this point: the 2D representations so far is actually something of a lie. LINDA can work in arbitrary dimensions. However, most SS13 maps are 2D, at least atmospheric-wise.\")]),_c('p',[_vm._v(\"The most important innovation LINDA introduces is the ability to pause at any arbitrary time during simulation, deferring continued simulation until later. This technically doesn‚Äôt improve performance in the sense of CPU time taken to simulate‚Äîin fact, it makes it worse. What it does do, however, is make it so that the game can still run while atmospheric simulation takes place. This is an extremely important feature, and LINDA does it very well.\")]),_c('b-embed',{attrs:{\"type\":\"video\",\"aspect\":\"16by9\",\"aria-label\":\"A grid of cells with a dot in the bottom left corner is on screen. The dot's center shifts to blue, and then the surrounding cells flash. It moves one cell to the right, then the surrounding cells flash again, as a number in the top right counts down from 1. This continues until the number is below 0, at which point the dot turns brown.\",\"controls\":\"\"}},[_c('source',{attrs:{\"src\":require(\"./../assets/LINDA.mp4\"),\"type\":\"video/mp4\"}})]),_c('p',[_vm._v(\"The second thing LINDA does is introduce excited groups. Due to diffusion being a very slow process in practice‚Äîit takes quadratic time to fill up a room, relative to the maximum distance from a given source‚Äîit keeps track of groups, which merge together and cool down via criteria established later. Once cooled down, a group will equalize all gas in its region, and eventually destroy itself.\")]),_c('b-embed',{attrs:{\"type\":\"video\",\"aspect\":\"16by9\",\"aria-label\":\"We start with a grid of cells, all brown. One cell turns blue, then the cells adjacent to it, then the cells adjacent to those, then the rest of the grid.\",\"controls\":\"\"}},[_c('source',{attrs:{\"src\":require(\"./../assets/Excited.mp4\"),\"type\":\"video/mp4\"}})]),_c('p',[_vm._v(\"The third thing it does is simply not simulate tiles that aren‚Äôt sufficiently different from the surroundings. This requires a lot of bookkeeping, and relies on anything adding new gases to be good and report that it‚Äôs doing so. However, it does work, and very well.\")]),_c('b-embed',{attrs:{\"type\":\"video\",\"aspect\":\"16by9\",\"aria-label\":\"A grid of numbers is drawn on screen, randomly assigned from 9 to 11. The numbers are then all colored blue and brown; the only blue numbers are numbers which have at least one adjacent number that is not the same. The blue numbers are then highlighted.\",\"controls\":\"\"}},[_c('source',{attrs:{\"src\":require(\"./../assets/Optimize.mp4\"),\"type\":\"video/mp4\"}})]),_c('p',[_vm._v(\"But then the question arises: how does a system stay consistent while doing these? After all, the original system relied on \"),_c('i',[_vm._v(\"copying\")]),_vm._v(\" the array.\")]),_c('p',[_vm._v(\"Zeroth thing: whenever certain changes to the gas are made, it‚Äôs archived, and saves last time it was archived. This archive is the most important thing to ensure consistency‚Äîthe second array that the dedicated system uses is, essentially, encoded in the gas mixture itself.\")]),_c('p',[_vm._v(\"Before any tiles are processed, at the start of the processing step, it copies the active turfs list, to make sure we don‚Äôt work on the same turf twice, or miss one because something removed it from active for spurious reasons. Once this copy happens, it goes through the queue, taking a turf, removing it from the queue, then processing it. The process goes as follows.\")]),_c('p',{staticStyle:{\"text-align\":\"center\"}},[_c('b-button',{directives:[{name:\"b-toggle\",rawName:\"v-b-toggle.math-dropdown\",modifiers:{\"math-dropdown\":true}}],attrs:{\"variant\":\"info\"}},[_vm._v(\"Math terms definitions\")]),_c('b-collapse',{attrs:{\"id\":\"math-dropdown\"}},[_c('katex-element',{attrs:{\"display-mode\":\"\",\"expression\":\"\\n            \\\\begin{align*}\\n            G&: \\\\text{The total number of gas types; equivalently, the set of all gas types.}\\\\\\\\\\n            g_i&: \\\\text{The ith gas of mixture g. Gas mixtures are represented by lower-case letters.}\\\\\\\\\\n            g_{ia}&: \\\\text{ith archived gas mixture.}\\\\\\\\\\n            g_T&: \\\\text{The temperature of mixture g.}\\\\\\\\\\n            \\\\forall n \\\\in G&: \\\\text{For all gas types.}\\\\\\\\\\n            g_{tot}&: \\\\sum_{n \\\\in G}g_n \\\\\\\\\\n            c_n&: \\\\text{The heat capacity for gas } n \\\\in G\\\\\\\\\\n            g_Q&: \\\\text{The total heat of a gas (calculated by } \\\\sum_{n \\\\in G}g_nc_n \\\\text{)}\\\\\\\\\\n            \\\\text{Merging gases}&:g + g \\\\rightarrow g\\\\\\\\\\n            \\\\text{Scalar multiplication:}&:g \\\\cdot \\\\R \\\\rightarrow g\\\\\\\\\\n            &\\\\text{The above two do basically what you'd expect for, say, vector addition, with the added wrinkle of }\\\\\\\\\\n            &\\\\text{heat capacities.}\\n            \\\\end{align*}\"}})],1)],1),_c('p',[_vm._v(\"First, we check if it‚Äôs been archived this tick; if it hasn‚Äôt, we do that immediately. Second, we go through each adjacent tile. For each adjacent tile, we first check if that tile‚Äôs already been processed; if it has, we skip it. Otherwise, we archive it (we know this is consistent due to the fact that we skip!), then compare our excited groups. If we have different excited groups, we merge them. If the other tile isn‚Äôt in an excited group at all, we compare our gas to the other‚Äôs gas, and if it‚Äôs different, we add the other gas to the active processing list, then either add it to our excited group, add us to their excited group, or make a new one and add both to it. Then: \"),_c('code-math-prose',{attrs:{\"expression\":\"\\\\begin{align*} \\\\forall n \\\\in G&: \\\\\\\\\\n        \\\\Delta_n &:= \\\\frac{a_{na}-b_{na}}{|N|+1}\\\\\\\\\\n        a_n &:= a_{na} - \\\\Delta_n\\\\\\\\\\n        b_n &:= b_{na} + \\\\Delta_n\\n        \\\\end{align*}\",\"code\":\"\\nfor gas in gases {\\n    let delta = (self.get_gas_archived(gas) - sharer.get_gas_archived(gas)) \\n                / neighbors.count();\\n    self.adjust_gas(gas, -delta);\\n    sharer.adjust_gas(gas, delta);\\n    //some stuff with heat capacities, too, but this is the gist of it\\n}\"}},[_vm._v(\" For each gas, we get the difference in the gas amounts in each gas's archive, then divide by the number of adjacent tiles; then, we add the difference to the other turf, and subtract the difference from our turf. \")]),_vm._v(\" Note that \\\"neighbors\\\" here might include a possible special ‚Äúplanetary atmos‚Äù fake tile that represents the average gas composition of a planet. Then, we do a temperature share, which is the same applied to heat: \"),_c('code-math-prose',{attrs:{\"expression\":\"\\\\begin{align*} \\\\Delta T &:= a_{Ta}-b_{Ta}\\\\\\\\\\n        \\\\Delta Q &:= 0.4\\\\Delta T \\\\frac{a_{Qa}b_{Qa}}{a_{Qa}+b_{Qa}}\\\\\\\\\\n        a_T &:= a_{Ta} - \\\\frac{\\\\Delta Q}{a_Q} \\\\\\\\\\n        b_T &:= b_{Ta} + \\\\frac{\\\\Delta Q}{b_Q}\\n        \\\\end{align*}\",\"code\":\"\\nlet temperature_delta = \\n    self.temperature_archived - sharer.temperature_archived;\\nlet self_heat_capacity = self.heat_capacity_archived();\\nlet sharer_heat_capacity = sharer.heat_capacity_archived();\\nlet heat = 0.4 * temperature_delta\\n    * (self_heat_capacity * sharer_heat_capacity\\n    / (self_heat_capacity + sharer_heat_capacity));\\nself.temperature = \\n    self.temperature_archived - heat / self_heat_capacity);\\nsharer.temperature = \\n    sharer.temperature_archived + heat / sharer_heat_capacity;\\n}\\n\"}},[_vm._v(\" First, we calculate the difference in temperatures. Using this, we then calculate the heat difference via some basic dimensional analysis (you don't have to think about it too hard, in other words) and exchange heat that way. We multiply the heat exchange by the conduction coefficient, which in this case is 0.4. \")]),_vm._v(\" After this, we finally set the tile and all of its neighbors‚Äô last_share value to the current tick, ensuring that this tile won‚Äôt be shared again this tick, and we reset the cooldowns on its excited groups.\")],1),_c('p',[_vm._v(\"Now that the tile is done processing, we check if we‚Äôve been processing gases too long, relative to maximum length of the tick; if we have, we pause the subsystem, letting the rest of the game run, to resume the queue later.\")]),_c('p',[_vm._v(\"This is LINDA, and it works quite well. But it is slow. Not just in terms of gases spreading; it‚Äôs computationally very slow, as well. So, how do we make this faster?\")]),_c('p',[_vm._v(\"Well... we don't. BYOND is not a fast engine. As long as we have to write the processing in byond, this is just about as good as it gets, unless you switch to totally different systems like ZAS, which has area-based atmospherics instead of turf-based.\")]),_c('p',[_vm._v(\"But what if we don't have to write the processing in byond?\")]),_c('h2',[_vm._v(\"Extools\")]),_c('p',[_vm._v(\"In comes \"),_c('b-link',{attrs:{\"href\":\"https://github.com/MCHSL/extools\"}},[_vm._v(\"extools\")]),_vm._v(\", a tool that can be used to interface directly with BYOND memory using C++. Initially, LINDA (and, in fact, all gas mixture processing) was ported to C++ by monster860. I ported this to Citadel station. However, I then wanted to add new gases, and found that it had some odd architecture choices: the max amount of gases was hardcoded, and gas mixtures used C-style arrays to store them; not only that, but gas mixtures were created by allocating one in an \"),_c('code',[_vm._v(\"std::shared_ptr\")]),_vm._v(\", then storing the pointer as a float (by casting it bitwise, so this was safe).\")],1),_c('p',[_vm._v(\"I decided this should be rectified. I switched all of the gas mixture code to more modern C++ constructions, making gas mixtures stored in a vector and using the STL instead of \"),_c('code',[_vm._v(\"memcpy\")]),_vm._v(\" and such. Most importantly, I switched the raw pointer saving with a simple vector that saves deallocated gas mixture locations\"),_c('citation',{attrs:{\"id\":\"8\"}},[_vm._v(\"This turns out to essentially be \"),_c('b-link',{attrs:{\"href\":\"https://en.wikipedia.org/wiki/Region-based_memory_management\"}},[_vm._v(\"region-based memory management.\")])],1),_vm._v(\" This made the whole thing something like 3-4 times as fast, probably primarily due to cache locality\"),_c('citation',{attrs:{\"id\":\"9\"}},[_vm._v(\"So easy to blame the cache locality.\")]),_vm._v(\", though auto-vectorization did help. At this point, everything seemed good... until I couldn‚Äôt update atmos anymore without causing lavaland, the planetary mining zone in TGstation servers, to explode, usually instantly, with baffling floating point errors.\")],1),_c('h2',[_vm._v(\"Auxtools\")]),_c('p',[_vm._v(\"This was a problem for a while. Soon, however, \"),_c('b-link',{attrs:{\"href\":\"https://github.com/willox/auxtools\"}},[_vm._v(\"auxtools\")]),_vm._v(\" came about: a Rust-based successor to extools. With this, I immediately began working on ‚Äú\"),_c('b-link',{attrs:{\"href\":\"https://github.com/Putnam3145/auxmos\"}},[_vm._v(\"auxmos\")]),_vm._v(\"‚Äù, a Rust implementation of atmospherics. Note that I said \"),_c('i',[_vm._v(\"atmospherics\")]),_vm._v(\": this is no longer LINDA. Instead, I implemented an entirely new system, based on the paper mentioned before (it comes up a lot!). Here‚Äôs how the new system works.\")],1),_c('p',[_c('code-math-prose',{attrs:{\"expression\":\"\\\\begin{align*} \\\\text{With }N&: \\\\text{neighbor gases of tile } t\\\\\\\\\\n                    m&: \\\\frac{1}{8}\\\\sum_{o \\\\in N}o\\\\end{align*}\",\"code\":\"\\nlet m = GasMixture::new();\\nfor neighbor in t.neighbors {\\n    m.merge(neighbor.gas);\\n}\\nm.multiply(0.125);\\n\"}},[_vm._v(\" Take gases from all of neighbor turfs, add them together, then multiply it by 1/8. \")]),_vm._v(\" As we do this, we also do the following check: \"),_c('code-math-prose',{attrs:{\"expression\":\"\\\\begin{align*}\\n        \\\\exist o \\\\in& N:\\\\\\\\\\n        &|t_T - o_T| > 4 \\\\land t_{tot} &\\\\ge 0.1 \\\\\\\\\\n        &\\\\text{OR}\\\\\\\\\\n        &\\\\exists n \\\\in G: |t_n-o_n| &> 0.1\\n        \\\\end{align*}\",\"code\":\"\\nt.neighbors.any(|neighbor| {\\n  ((t.temperature - neighbor.temperature).abs() > 4 \\n    && neighbor.total_moles() > 0.1)\\n    || all_gases.any(\\n      |gas| (t.get_gas(gas) - neighbor.get_gas(gas)).abs() > 0.1\\n    )\\n})\\n\"}},[_vm._v(\" If the gases are of different enough temperature and our gas has enough moles for this to matter, pass; otherwise, pass if any individual gas is more than 0.1 moles away from the neighbor's gas. \")]),_vm._v(\" If this statement is true, then we'll keep \"),_c('katex-element',{attrs:{\"expression\":\"m\"}}),_vm._v(\" around for later, associated with the gas ID of \"),_c('katex-element',{attrs:{\"expression\":\"t\"}}),_vm._v(\". Once every single turf is processed this way, we go through all of the turfs that passed the condition earlier, setting their gas mixtures:\"),_c('code-math-prose',{attrs:{\"expression\":\"t := m + t \\\\cdot 1-\\\\frac{|N|}{8}\",\"code\":\"\\nt.multiply(1 - (neighbors.count()/8))\\nt.merge(m)\\n\"}},[_vm._v(\" Take our turf's gas mixture, multiply it by one minus the number of neighbor turfs divided by 8, then merge it with the gas mixture from earlier, \"),_c('katex-element',{attrs:{\"expression\":\"m\"}}),_vm._v(\". \")],1),_vm._v(\"And thus we have diffused, just as LINDA does.\")],1),_c('h2',[_vm._v(\"Why do things this way?\")]),_c('p',[_vm._v(\"Why \"),_c('katex-element',{attrs:{\"expression\":\"\\\\frac{1}{8}\"}}),_vm._v(\", instead of \"),_c('katex-element',{attrs:{\"expression\":\"\\\\frac{1}{|N|+1}\"}}),_vm._v(\"? I have a few reasons. First of all, it makes the math easier to follow; if you always know gases lose exactly 1/8 of their gas per adjacent turf per tick, noticing problems is much easier. This is not a hypothetical--I had a long-running race condition solved by doing the math in my head and realizing exactly what happened. Second, \"),_c('katex-element',{attrs:{\"expression\":\"\\\\frac{F}{8}\"}}),_vm._v(\" always retains its exact precision in floats--precision issues are nasty to deal with, and while the error is never going to be big, it adds up over hours of doing these operations twice a second. Third, \"),_c('katex-element',{attrs:{\"expression\":\"8 \\\\ge |N|+1\"}}),_vm._v(\"‚Äîthe largest \"),_c('katex-element',{attrs:{\"expression\":\"|N|+1\"}}),_vm._v(\" can be in practical terms is, in fact, 8, for turfs with 6 neighbors that are on a planet. LINDA used to also have some sort of portal that makes turfs adjacent atmos-wise, but losing that is acceptable, to my eyes.\")],1),_c('p',[_vm._v(\"Second of all, why wait until we've checked every turf? Simply put, the fact that we create every to-merge gas mix first means that we have an archive built-in‚Äîduring calculations, not a single gas mixture is modified‚Äîall modifications come in the merging step, after we‚Äôve already calculated all of them‚Ä¶ and, even better, we can parallelize this step, too, because each step is completely independent of all the rest.\")]),_c('p',[_vm._v(\"But wouldn‚Äôt this cause lag, due to both increasing the total workload by never pausing turfs and never pausing to let the game run? Well, as mentioned earlier, this is highly parallelizable. Each individual gas mixture can, in theory, be done completely independently from the others, with only some read-sharing involved. In practice, I use a \"),_c('b-link',{attrs:{\"href\":\"https://github.com/xacrimon/dashmap\"}},[_vm._v(\"sharded hash map implementation called DashMap\")]),_vm._v(\" and \"),_c('b-link',{attrs:{\"href\":\"https://crates.io/crates/rayon\"}},[_vm._v(\"Rayon\")]),_vm._v(\" to run each individual shard of the DashMap in parallel, which leads to a pretty much linear speedup with number of cores. On top of that, the entire process is started on another core, meaning that the game experiences no interruption as it runs‚Äîin fact, the game starts the thread, does a bunch of processing relating to atmos that isn‚Äôt on tiles while the thread is running, then waits for the thread to finish if it hasn‚Äôt yet before doing turf operations. In practice, it usually finishes far before it gets to that point, meaning that, as far as the player knows, this entire process causes zero performance impact.\")],1),_c('p',[_vm._v(\"There's other reasons to do it this way. Doing everything at once requires less bookkeeping, and is thus simpler, using less memory; the archive no longer being required means there‚Äôs further less memory being allocated. Since SS13 is still 32-bit, this provides far more breathing room.\")]),_c('h2',[_vm._v(\"Why write this?\")]),_c('p',[_vm._v(\"This is all an open source project. I'm hoping that I won't be the only person on the planet who understands it well enough to work on it \"),_c('i',[_vm._v(\"and\")]),_vm._v(\" cares enough to actually do it. By writing this, I want either people who care to learn how to work on it or people who can work on it to start caring. I don't mind working on these things, I enjoy it greatly\"),_c('citation',{attrs:{\"id\":\"citation needed\"}},[_c('b-link',{attrs:{\"href\":\"https://en.wikipedia.org/wiki/Cessna_Citation_family\"}},[_vm._v(\"Actually, not sure anyone needs one of these.\")])],1),_vm._v(\", but the \"),_c('b-link',{attrs:{\"href\":\"https://en.wikipedia.org/wiki/Bus_factor\"}},[_vm._v(\"bus factor\")]),_vm._v(\" is a terrifying thing, and I hope to reduce it. Please consider \"),_c('b-link',{attrs:{\"href\":\"https://github.com/Putnam3145/auxmos\"}},[_vm._v(\"contributing to Auxmos\")]),_vm._v(\", even if it's providing insights I might not have thought of (this happens more often than you'd think).\")],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('b-container',[_c('b-row',{attrs:{\"no-gutters\":\"\"}},[_c('b-col',[_c('b-card',{attrs:{\"header\":\"Definition\"}},[_c('katex-element',{attrs:{\"display-mode\":\"\",\"expression\":_vm.expression}})],1)],1),_c('b-col',[_c('b-card',{attrs:{\"header\":\"Code\"}},[_c('highlightjs',{attrs:{\"autodetect\":\"\",\"code\":_vm.code}})],1)],1),_c('b-col',[_c('b-card',{attrs:{\"header\":\"Words\"}},[_vm._t(\"default\")],2)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <b-container>\n        <b-row no-gutters>\n            <b-col>\n                <b-card header=\"Definition\">\n                <katex-element display-mode :expression = expression />\n                </b-card>\n            </b-col>\n            <b-col>\n                <b-card header=\"Code\">\n                <highlightjs autodetect :code = code />\n                </b-card>\n            </b-col>\n            <b-col>\n                <b-card header=\"Words\">\n                <slot></slot>\n                </b-card>\n            </b-col>\n        </b-row>\n    </b-container>\n</template>\n\n<script>\nexport default {\n    props: {\n        expression: String,\n        code: String\n    }\n}\n</script>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CodeMathProse.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CodeMathProse.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./CodeMathProse.vue?vue&type=template&id=30bf6b73&\"\nimport script from \"./CodeMathProse.vue?vue&type=script&lang=js&\"\nexport * from \"./CodeMathProse.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticStyle:{\"text-align\":\"center\"}},[_c('katex-element',{attrs:{\"display-mode\":\"\",\"expression\":_vm.displayArray}}),_c('b-button',{attrs:{\"variant\":\"success\"},on:{\"click\":_vm.do_fdm}},[_vm._v(\"Run once\")])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n<div style=\"text-align:center\">\n    <katex-element display-mode :expression = displayArray />\n    <b-button @click=\"do_fdm\" variant=\"success\">Run once</b-button>\n    </div>\n</template>\n\n<script>\nlet wasm = import('@/wasm/pkg/putnam_github_io_bg')\n\nconst width = 8;\n\nexport default {\n    data() {\n        return {\n            array: [\n                0.0, 1.0, 2.0, 3.0,\n                4.0, 5.0, 6.0, 7.0,\n                8.0, 9.0, 10.0, 11.0,\n                12.0, 13.0, 14.0, 15.0,\n            ]\n        }\n    },\n    mounted() {\n        this.array = Array.from(Array(width*width)).map((v, i) => i)\n    },\n    computed: {\n        displayArray() {\n            let ret = \"\\\\begin{matrix}\"\n            let done = 0\n            for(let i of this.array) {\n                done = (done + 1) % width\n                ret += Math.round(i * 100) / 100\n                if (done == 0) {\n                    ret += \"\\\\\\\\\"\n                } else {\n                    ret += \" & \"\n                }\n            }\n            return ret + \"\\\\end{matrix}\"\n        }\n    },\n    methods: {\n        do_fdm() {\n            let me = this;\n            wasm.then(m => {\n                me.array = m.fdm(Float64Array.from(me.array), width)\n            })\n            return null;\n        }\n    }\n}\n</script>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./fdmDemonstration.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./fdmDemonstration.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./fdmDemonstration.vue?vue&type=template&id=c77a6960&\"\nimport script from \"./fdmDemonstration.vue?vue&type=script&lang=js&\"\nexport * from \"./fdmDemonstration.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\n    <b-container class=\"article-text\">\n        <h2>Preface</h2>\n        <p>This is intended as both a primer for my fellow Space Station 13 coders in hopes that they can understand atmospherics <i>and</i> as something that can be read absent of all context thereof. Because I've often found myself annoyed by people making articles essentially reiterating things they've learned elsewhere, instead of just giving a list of the books they've read etc., here's links to a whole lot of reference material and papers regarding the topic at hand, the ones that I used to write this article. <b-button variant=\"info\" v-b-toggle.links-dropdown>Show links</b-button></p>\n        <b-collapse id=\"links-dropdown\">\n            <p>Yes, Wikipedia is a good reference source. This isn't a research paper, it's video games.</p>\n            <b-list-group>\n                <b-list-group-item variant=\"primary\" href=\"https://www.researchgate.net/publication/2560062_Real-Time_Fluid_Dynamics_for_Games\">\n                    Stam, Jos. (2003). Real-Time Fluid Dynamics for Games. \n                </b-list-group-item>\n                <b-list-group-item variant=\"info\" href=\"https://en.wikipedia.org/wiki/Iterative_Stencil_Loops\">\n                    Iterative Stencil Loops (Wikipedia). The \"see also\" section is also all useful.\n                </b-list-group-item>\n                <b-list-group-item variant=\"info\" href=\"https://en.wikipedia.org/wiki/Computational_fluid_dynamics\">\n                    Computational fluid dynamics (Wikipedia)\n                </b-list-group-item>\n                <b-list-group-item variant=\"info\" href=\"https://en.wikipedia.org/wiki/Discrete_Poisson_equation\">\n                    Discrete Poisson equation (Wikipedia)\n                </b-list-group-item>\n            </b-list-group>\n        </b-collapse>\n        <h2>Introduction</h2>\n        <p>Space Station 13 is a deeply complex social deduction game. Barotrauma is explicitly inspired by it; you can also think of it as Among Us crossed with Dwarf Fortress, although it should be noted that it's older than either<sup><citation id=\"1\">Yeah, older than Dwarf Fortress. That game's first release was 2006, SS13's was <b-link href=\"https://secure.byond.com/games/Exadv1/SpaceStation13\">2003.</b-link></citation></sup>. The game is primarily famous for being something of a freeform trolling engine‚Äîdue to its open source nature and complex mechanics, a lot of features have been added to it over the years that allow for a lot of strange situations. Why is a wizard attacking a space station, and why do they only seem to know how to conjure guns, and why are they just giving the guns away?<citation id=\"2\">Actually, I <b-link href=\"https://gunshowcomic.com/30\">know this one.</b-link></citation> That sort of thing.</p>\n\n        <p>Simulation of gases usually involves solving a partial differential equation given initial conditions; since we're only talking diffusion, that would be the <b-link href=\"https://en.wikipedia.org/wiki/Discrete_Poisson_equation\">discrete Poisson equation.</b-link> I expect some basic knowledge of this in this article, but I'll try to include explanations here and there. I recommend <b-link href=\"https://www.youtube.com/watch?v=p_di4Zn4wz4\">the 3blue1brown series on partial differential equations</b-link>, especially, and I'll link relevant bits as I go, because they're <i>seriously</i> helpful for understanding. To summarize in simple terms: every point in space has a value, and that value changes over time towards the average of the values around it. There‚Äôs a variety of methods to solve this, and most of them rely on taking the initial conditions and transforming them some way or another into something that‚Äôs easier to compute.</p>\n\n        <p>However, we have a problem: the density at a given point can change arbitrarily, because this is a video game where unpredictable agents<citation id=\"3\">(or ‚Äúplayers‚Äù for short)</citation> can muck things up at any time. Therefore, instead of getting a solution to the equation, where we can just take f(x,y,t) and get a nice clean value, we have to simulate it every tick. So, how do we do this?</p>\n        <h2>The finite difference Method</h2>\n        <p>The trick is to divide the problem space up into a finite amount of chunks and then, each ‚Äútick‚Äù, calculate the changes cell-by-cell. \n        <b-embed type=\"video\" aspect=\"16by9\" aria-label = \"A sine wave is drawn on a graph as the phrase 'finite difference method' is drawn above it. Vertical lines appear separating the sine wave into regions, and then each individual region of the sine wave is turned into a line with the average value of that region.\" controls>\n            <source src=\"./../assets/FiniteDifference3.mp4\" type=\"video/mp4\">\n        </b-embed>\n        This is actually a solved problem.<citation id=\"4\"><b-link href=\"https://www.researchgate.net/publication/2560062_Real-Time_Fluid_Dynamics_for_Games\">Stam, Jos. \"Real-Time Fluid Dynamics for Games.‚Äù</b-link></citation> In essence, we take all the chunks, put them into a two-dimensional array,<citation id=\"5\">Or what-have-you. It really, really depends, always does.</citation> and compare each member to its neighbors, changing how much gas they have based on the difference. Say you have 10 moles of gas in this center area. How much should there be next tick, in the surrounding ones? Well, let‚Äôs say the maximum amount diffuses every tick; since each tile can only have up to 4 cardinal neighboring tiles in 2D, let‚Äôs say 1/5 of the gas gets shared to each adjacent tile each tick. So, we do this calculation: first tile has 0 gas; second tile‚Äôs neighbor shares 1/5 of its gas, leading to this tile having 2 moles; 3rd has none; 4th is same as 2nd; fifth loses 1/5 of its gas to each neighboring tile, so it‚Äôs left with 2 moles; and so on.</p>\n\n        <fdm-demonstration />\n\n        <p>It should be noted that this isn't actually doing all the calculations in-place--internally<citation id=\"6\"><b-link href=\"https://github.com/Putnam3145/putnam3145-github-io-wasm/blob/b188585bd22494fe31466c8c033b7d7b095d8c77/src/lib.rs#L179\">See here.</b-link></citation>, it's making a copy by mapping a read-only version of the input.<citation id=\"7\">This is actually a lot like many lock-free data structures.</citation></p>\n\n        <p>This can get hard to follow for a human rather quickly, but a computer doesn't really see the difference between something simple and something very complicated.</p>\n\n        <p>More often than not, one will implement the actual transformation thereof as an <b-link href=\"https://en.wikipedia.org/wiki/Iterative_Stencil_Loops\">iterative stencil loop</b-link>, and, in fact, the rest of this article is about those.</p>\n\n        <h2>LINDA</h2>\n        <p>SS13‚Äôs original implementation of this was in a file called FEA.dm, short for ‚Äúfinite element analysis‚Äù. People, naturally, started calling the system itself FEA. I am not familiar with FEA, in fact; I have only worked with LINDA, /tg/station‚Äôs own atmospheric system, which has the same DNA as the research paper above, but with a lot of caveats and changes in order to ensure performance.</p>\n\n        <p>I should note at this point: the 2D representations so far is actually something of a lie. LINDA can work in arbitrary dimensions. However, most SS13 maps are 2D, at least atmospheric-wise.</p>\n\n        <p>The most important innovation LINDA introduces is the ability to pause at any arbitrary time during simulation, deferring continued simulation until later. This technically doesn‚Äôt improve performance in the sense of CPU time taken to simulate‚Äîin fact, it makes it worse. What it does do, however, is make it so that the game can still run while atmospheric simulation takes place. This is an extremely important feature, and LINDA does it very well.</p>\n\n        <b-embed type=\"video\" aspect=\"16by9\" aria-label = \"A grid of cells with a dot in the bottom left corner is on screen. The dot's center shifts to blue, and then the surrounding cells flash. It moves one cell to the right, then the surrounding cells flash again, as a number in the top right counts down from 1. This continues until the number is below 0, at which point the dot turns brown.\" controls>\n            <source src=\"./../assets/LINDA.mp4\" type=\"video/mp4\">\n        </b-embed>\n\n        <p>The second thing LINDA does is introduce excited groups. Due to diffusion being a very slow process in practice‚Äîit takes quadratic time to fill up a room, relative to the maximum distance from a given source‚Äîit keeps track of groups, which merge together and cool down via criteria established later. Once cooled down, a group will equalize all gas in its region, and eventually destroy itself.</p>\n\n        <b-embed type=\"video\" aspect=\"16by9\" aria-label = \"We start with a grid of cells, all brown. One cell turns blue, then the cells adjacent to it, then the cells adjacent to those, then the rest of the grid.\" controls>\n            <source src=\"./../assets/Excited.mp4\" type=\"video/mp4\">\n        </b-embed>\n\n        <p>The third thing it does is simply not simulate tiles that aren‚Äôt sufficiently different from the surroundings. This requires a lot of bookkeeping, and relies on anything adding new gases to be good and report that it‚Äôs doing so. However, it does work, and very well.</p>\n\n        <b-embed type=\"video\" aspect=\"16by9\" aria-label = \"A grid of numbers is drawn on screen, randomly assigned from 9 to 11. The numbers are then all colored blue and brown; the only blue numbers are numbers which have at least one adjacent number that is not the same. The blue numbers are then highlighted.\" controls>\n            <source src=\"./../assets/Optimize.mp4\" type=\"video/mp4\">\n        </b-embed>\n\n        <p>But then the question arises: how does a system stay consistent while doing these? After all, the original system relied on <i>copying</i> the array.</p>\n\n        <p>Zeroth thing: whenever certain changes to the gas are made, it‚Äôs archived, and saves last time it was archived. This archive is the most important thing to ensure consistency‚Äîthe second array that the dedicated system uses is, essentially, encoded in the gas mixture itself.</p>\n\n        <p>Before any tiles are processed, at the start of the processing step, it copies the active turfs list, to make sure we don‚Äôt work on the same turf twice, or miss one because something removed it from active for spurious reasons. Once this copy happens, it goes through the queue, taking a turf, removing it from the queue, then processing it. The process goes as follows.</p>\n\n        <p style=\"text-align:center\"><b-button variant=\"info\" v-b-toggle.math-dropdown>Math terms definitions</b-button>\n        <b-collapse id=\"math-dropdown\">\n            <katex-element display-mode expression=\"\n            \\begin{align*}\n            G&: \\text{The total number of gas types; equivalently, the set of all gas types.}\\\\\n            g_i&: \\text{The ith gas of mixture g. Gas mixtures are represented by lower-case letters.}\\\\\n            g_{ia}&: \\text{ith archived gas mixture.}\\\\\n            g_T&: \\text{The temperature of mixture g.}\\\\\n            \\forall n \\in G&: \\text{For all gas types.}\\\\\n            g_{tot}&: \\sum_{n \\in G}g_n \\\\\n            c_n&: \\text{The heat capacity for gas } n \\in G\\\\\n            g_Q&: \\text{The total heat of a gas (calculated by } \\sum_{n \\in G}g_nc_n \\text{)}\\\\\n            \\text{Merging gases}&:g + g \\rightarrow g\\\\\n            \\text{Scalar multiplication:}&:g \\cdot \\R \\rightarrow g\\\\\n            &\\text{The above two do basically what you'd expect for, say, vector addition, with the added wrinkle of }\\\\\n            &\\text{heat capacities.}\n            \\end{align*}\" /> </b-collapse></p>\n\n        <p>First, we check if it‚Äôs been archived this tick; if it hasn‚Äôt, we do that immediately. Second, we go through each adjacent tile. For each adjacent tile, we first check if that tile‚Äôs already been processed; if it has, we skip it. Otherwise, we archive it (we know this is consistent due to the fact that we skip!), then compare our excited groups. If we have different excited groups, we merge them. If the other tile isn‚Äôt in an excited group at all, we compare our gas to the other‚Äôs gas, and if it‚Äôs different, we add the other gas to the active processing list, then either add it to our excited group, add us to their excited group, or make a new one and add both to it. Then: \n        <code-math-prose expression=\"\\begin{align*} \\forall n \\in G&: \\\\\n        \\Delta_n &:= \\frac{a_{na}-b_{na}}{|N|+1}\\\\\n        a_n &:= a_{na} - \\Delta_n\\\\\n        b_n &:= b_{na} + \\Delta_n\n        \\end{align*}\" code = \"\nfor gas in gases {\n    let delta = (self.get_gas_archived(gas) - sharer.get_gas_archived(gas)) \n                / neighbors.count();\n    self.adjust_gas(gas, -delta);\n    sharer.adjust_gas(gas, delta);\n    //some stuff with heat capacities, too, but this is the gist of it\n}\">\n        For each gas, we get the difference in the gas amounts in each gas's archive, then divide by the number of adjacent tiles; then, we add the difference to the other turf, and subtract the difference from our turf.\n        </code-math-prose>\n            Note that \"neighbors\" here might include a possible special ‚Äúplanetary atmos‚Äù fake tile that represents the average gas composition of a planet. Then, we do a temperature share, which is the same applied to heat: \n            <code-math-prose expression=\"\\begin{align*} \\Delta T &:= a_{Ta}-b_{Ta}\\\\\n        \\Delta Q &:= 0.4\\Delta T \\frac{a_{Qa}b_{Qa}}{a_{Qa}+b_{Qa}}\\\\\n        a_T &:= a_{Ta} - \\frac{\\Delta Q}{a_Q} \\\\\n        b_T &:= b_{Ta} + \\frac{\\Delta Q}{b_Q}\n        \\end{align*}\" code = \"\nlet temperature_delta = \n    self.temperature_archived - sharer.temperature_archived;\nlet self_heat_capacity = self.heat_capacity_archived();\nlet sharer_heat_capacity = sharer.heat_capacity_archived();\nlet heat = 0.4 * temperature_delta\n    * (self_heat_capacity * sharer_heat_capacity\n    / (self_heat_capacity + sharer_heat_capacity));\nself.temperature = \n    self.temperature_archived - heat / self_heat_capacity);\nsharer.temperature = \n    sharer.temperature_archived + heat / sharer_heat_capacity;\n}\n\">\n    First, we calculate the difference in temperatures. Using this, we then calculate the heat difference via some basic dimensional analysis (you don't have to think about it too hard, in other words) and exchange heat that way. We multiply the heat exchange by the conduction coefficient, which in this case is 0.4.\n</code-math-prose> After this, we finally set the tile and all of its neighbors‚Äô last_share value to the current tick, ensuring that this tile won‚Äôt be shared again this tick, and we reset the cooldowns on its excited groups.</p>\n\n        <p>Now that the tile is done processing, we check if we‚Äôve been processing gases too long, relative to maximum length of the tick; if we have, we pause the subsystem, letting the rest of the game run, to resume the queue later.</p>\n\n        <p>This is LINDA, and it works quite well. But it is slow. Not just in terms of gases spreading; it‚Äôs computationally very slow, as well. So, how do we make this faster?</p>\n\n        <p>Well... we don't. BYOND is not a fast engine. As long as we have to write the processing in byond, this is just about as good as it gets, unless you switch to totally different systems like ZAS, which has area-based atmospherics instead of turf-based.</p>\n\n        <p>But what if we don't have to write the processing in byond?</p>\n\n        <h2>Extools</h2>\n        <p>In comes <b-link href=\"https://github.com/MCHSL/extools\">extools</b-link>, a tool that can be used to interface directly with BYOND memory using C++. Initially, LINDA (and, in fact, all gas mixture processing) was ported to C++ by monster860. I ported this to Citadel station. However, I then wanted to add new gases, and found that it had some odd architecture choices: the max amount of gases was hardcoded, and gas mixtures used C-style arrays to store them; not only that, but gas mixtures were created by allocating one in an <code>std::shared_ptr</code>, then storing the pointer as a float (by casting it bitwise, so this was safe).</p>\n        \n        <p>I decided this should be rectified. I switched all of the gas mixture code to more modern C++ constructions, making gas mixtures stored in a vector and using the STL instead of <code>memcpy</code> and such. Most importantly, I switched the raw pointer saving with a simple vector that saves deallocated gas mixture locations<citation id=\"8\">This turns out to essentially be <b-link href=\"https://en.wikipedia.org/wiki/Region-based_memory_management\">region-based memory management.</b-link></citation> This made the whole thing something like 3-4 times as fast, probably primarily due to cache locality<citation id=\"9\">So easy to blame the cache locality.</citation>, though auto-vectorization did help. At this point, everything seemed good... until I couldn‚Äôt update atmos anymore without causing lavaland, the planetary mining zone in TGstation servers, to explode, usually instantly, with baffling floating point errors.</p> \n        \n        <h2>Auxtools</h2>\n        <p>This was a problem for a while. Soon, however, <b-link href=\"https://github.com/willox/auxtools\">auxtools</b-link> came about: a Rust-based successor to extools. With this, I immediately began working on ‚Äú<b-link href=\"https://github.com/Putnam3145/auxmos\">auxmos</b-link>‚Äù, a Rust implementation of atmospherics. Note that I said <i>atmospherics</i>: this is no longer LINDA. Instead, I implemented an entirely new system, based on the paper mentioned before (it comes up a lot!). Here‚Äôs how the new system works.</p>\n\n        <p>\n            <code-math-prose \n                    expression=\"\\begin{align*} \\text{With }N&: \\text{neighbor gases of tile } t\\\\\n                    m&: \\frac{1}{8}\\sum_{o \\in N}o\\end{align*}\" code=\"\nlet m = GasMixture::new();\nfor neighbor in t.neighbors {\n    m.merge(neighbor.gas);\n}\nm.multiply(0.125);\n\">\n                Take gases from all of neighbor turfs, add them together, then multiply it by 1/8.\n            </code-math-prose>\n        As we do this, we also do the following check:\n        <code-math-prose expression=\"\\begin{align*}\n        \\exist o \\in& N:\\\\\n        &|t_T - o_T| > 4 \\land t_{tot} &\\ge 0.1 \\\\\n        &\\text{OR}\\\\\n        &\\exists n \\in G: |t_n-o_n| &> 0.1\n        \\end{align*}\" code=\"\nt.neighbors.any(|neighbor| {\n  ((t.temperature - neighbor.temperature).abs() > 4 \n    && neighbor.total_moles() > 0.1)\n    || all_gases.any(\n      |gas| (t.get_gas(gas) - neighbor.get_gas(gas)).abs() > 0.1\n    )\n})\n\">\n            If the gases are of different enough temperature and our gas has enough moles for this to matter, pass; otherwise, pass if any individual gas is more than 0.1 moles away from the neighbor's gas.\n        </code-math-prose>\n        If this statement is true, then we'll keep <katex-element expression=\"m\"/> around for later, associated with the gas ID of <katex-element expression=\"t\"/>. Once every single turf is processed this way, we go through all of the turfs that passed the condition earlier, setting their gas mixtures:<code-math-prose expression=\"t := m + t \\cdot 1-\\frac{|N|}{8}\" code=\"\nt.multiply(1 - (neighbors.count()/8))\nt.merge(m)\n\">\n            Take our turf's gas mixture, multiply it by one minus the number of neighbor turfs divided by 8, then merge it with the gas mixture from earlier, <katex-element expression=\"m\"/>.\n            </code-math-prose>And thus we have diffused, just as LINDA does.</p>\n\n        <h2>Why do things this way?</h2>\n        <p>Why <katex-element expression=\"\\frac{1}{8}\"/>, instead of <katex-element expression=\"\\frac{1}{|N|+1}\"/>? I have a few reasons. First of all, it makes the math easier to follow; if you always know gases lose exactly 1/8 of their gas per adjacent turf per tick, noticing problems is much easier. This is not a hypothetical--I had a long-running race condition solved by doing the math in my head and realizing exactly what happened. Second, <katex-element expression=\"\\frac{F}{8}\"/> always retains its exact precision in floats--precision issues are nasty to deal with, and while the error is never going to be big, it adds up over hours of doing these operations twice a second. Third, <katex-element expression=\"8 \\ge |N|+1\"/>‚Äîthe largest <katex-element expression=\"|N|+1\"/> can be in practical terms is, in fact, 8, for turfs with 6 neighbors that are on a planet. LINDA used to also have some sort of portal that makes turfs adjacent atmos-wise, but losing that is acceptable, to my eyes.</p>\n\n        <p>Second of all, why wait until we've checked every turf? Simply put, the fact that we create every to-merge gas mix first means that we have an archive built-in‚Äîduring calculations, not a single gas mixture is modified‚Äîall modifications come in the merging step, after we‚Äôve already calculated all of them‚Ä¶ and, even better, we can parallelize this step, too, because each step is completely independent of all the rest.</p>\n\n        <p>But wouldn‚Äôt this cause lag, due to both increasing the total workload by never pausing turfs and never pausing to let the game run? Well, as mentioned earlier, this is highly parallelizable. Each individual gas mixture can, in theory, be done completely independently from the others, with only some read-sharing involved. In practice, I use a <b-link href=\"https://github.com/xacrimon/dashmap\">sharded hash map implementation called DashMap</b-link> and <b-link href=\"https://crates.io/crates/rayon\">Rayon</b-link> to run each individual shard of the DashMap in parallel, which leads to a pretty much linear speedup with number of cores. On top of that, the entire process is started on another core, meaning that the game experiences no interruption as it runs‚Äîin fact, the game starts the thread, does a bunch of processing relating to atmos that isn‚Äôt on tiles while the thread is running, then waits for the thread to finish if it hasn‚Äôt yet before doing turf operations. In practice, it usually finishes far before it gets to that point, meaning that, as far as the player knows, this entire process causes zero performance impact.</p>\n\n        <p>There's other reasons to do it this way. Doing everything at once requires less bookkeeping, and is thus simpler, using less memory; the archive no longer being required means there‚Äôs further less memory being allocated. Since SS13 is still 32-bit, this provides far more breathing room.</p>\n\n        <h2>Why write this?</h2>\n        <p>This is all an open source project. I'm hoping that I won't be the only person on the planet who understands it well enough to work on it <i>and</i> cares enough to actually do it. By writing this, I want either people who care to learn how to work on it or people who can work on it to start caring. I don't mind working on these things, I enjoy it greatly<citation id=\"citation needed\"><b-link href=\"https://en.wikipedia.org/wiki/Cessna_Citation_family\">Actually, not sure anyone needs one of these.</b-link></citation>, but the <b-link href=\"https://en.wikipedia.org/wiki/Bus_factor\">bus factor</b-link> is a terrifying thing, and I hope to reduce it. Please consider <b-link href=\"https://github.com/Putnam3145/auxmos\">contributing to Auxmos</b-link>, even if it's providing insights I might not have thought of (this happens more often than you'd think).</p>\n    </b-container>\n</template>\n\n<script>\nimport Citation from \"@/components/Citation.vue\"\nimport CodeMathProse from \"@/components/CodeMathProse.vue\"\nimport fdmDemonstration from \"@/components/fdmDemonstration.vue\"\nexport default {\n    components: {\n        Citation,\n        CodeMathProse,\n        fdmDemonstration,\n    },\n}\n</script>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Atmospherics.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Atmospherics.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Atmospherics.vue?vue&type=template&id=ad8e4a38&\"\nimport script from \"./Atmospherics.vue?vue&type=script&lang=js&\"\nexport * from \"./Atmospherics.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\nimport VueRouter from 'vue-router'\nimport Home from '../views/Home.vue'\nimport Helper from '../views/Helper/Helper.vue'\nimport Roguelike from '../views/Roguelike.vue'\nimport Atmospherics from '../views/Atmospherics.vue'\nVue.use(VueRouter)\n\nconst routes = [\n  {\n    path: '/',\n    name: 'Home',\n    component: Home\n  },\n  {\n    path: '/helper',\n    name: 'Dwarf Fortress material helper',\n    component: Helper\n  },\n  {\n    path: '/about',\n    name: 'About',\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    component: () => import(/* webpackChunkName: \"about\" */ '../views/About.vue')\n  },\n  {\n    path: '/roguelike',\n    name: 'Roguelike',\n    component: Roguelike\n  },\n  {\n    path: '/atmospherics',\n    name: 'Atmospherics',\n    component: Atmospherics\n  }\n]\n\nconst router = new VueRouter({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes\n})\n\nexport default router\n","import Vue from 'vue'\nimport './app.scss'\nimport './plugins/bootstrap-vue'\nimport App from './App.vue'\nimport router from './router'\nimport VueKatex from 'vue-katex';\nimport hljs from \"highlight.js/lib/core.js\";\nimport rust from 'highlight.js/lib/languages/rust'\nimport hljsVuePlugin from \"@highlightjs/vue-plugin\"\n\nVue.use(VueKatex, {\n  globalOptions: {\n  }\n});\n\nhljs.registerLanguage('rust', rust)\n\nVue.use(hljsVuePlugin);\nVue.config.productionTip = false\n\nnew Vue({\n  router,\n  render: h => h(App)\n}).$mount('#app')\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=scss&\"","module.exports = __webpack_public_path__ + \"media/LINDA.eea20324.mp4\";","module.exports = __webpack_public_path__ + \"media/Optimize.08296f0c.mp4\";","module.exports = __webpack_public_path__ + \"media/FiniteDifference3.5a0e264f.mp4\";"],"sourceRoot":""}