(function(e){function t(t){for(var i,r,o=t[0],l=t[1],c=t[2],u=0,h=[];u<o.length;u++)r=o[u],Object.prototype.hasOwnProperty.call(n,r)&&n[r]&&h.push(n[r][0]),n[r]=0;for(i in l)Object.prototype.hasOwnProperty.call(l,i)&&(e[i]=l[i]);m&&m(t);while(h.length)h.shift()();return s.push.apply(s,c||[]),a()}function a(){for(var e,t=0;t<s.length;t++){for(var a=s[t],i=!0,r=1;r<a.length;r++){var o=a[r];0!==n[o]&&(i=!1)}i&&(s.splice(t--,1),e=c(c.s=a[0]))}return e}var i={},n={app:0},s=[];function r(e){return c.p+"js/"+({about:"about"}[e]||e)+"."+{about:"2b09ae3d","chunk-c8bde796":"ac685040"}[e]+".js"}var o={};var l={f87f:function(){return{"./putnam_github_io_bg.js":{__wbindgen_json_serialize:function(e,t){return i["675b"].exports["__wbindgen_json_serialize"](e,t)},__wbg_new_59cb74e423758ede:function(){return i["675b"].exports["__wbg_new_59cb74e423758ede"]()},__wbg_stack_558ba5917b466edd:function(e,t){return i["675b"].exports["__wbg_stack_558ba5917b466edd"](e,t)},__wbg_error_4bb6c2a97407129a:function(e,t){return i["675b"].exports["__wbg_error_4bb6c2a97407129a"](e,t)},__wbindgen_object_drop_ref:function(e){return i["675b"].exports["__wbindgen_object_drop_ref"](e)},__wbg_getRandomValues_98117e9a7e993920:function(e,t){return i["675b"].exports["__wbg_getRandomValues_98117e9a7e993920"](e,t)},__wbg_randomFillSync_64cc7d048f228ca8:function(e,t,a){return i["675b"].exports["__wbg_randomFillSync_64cc7d048f228ca8"](e,t,a)},__wbg_process_2f24d6544ea7b200:function(e){return i["675b"].exports["__wbg_process_2f24d6544ea7b200"](e)},__wbindgen_is_object:function(e){return i["675b"].exports["__wbindgen_is_object"](e)},__wbg_versions_6164651e75405d4a:function(e){return i["675b"].exports["__wbg_versions_6164651e75405d4a"](e)},__wbg_node_4b517d861cbcb3bc:function(e){return i["675b"].exports["__wbg_node_4b517d861cbcb3bc"](e)},__wbg_modulerequire_3440a4bcf44437db:function(e,t){return i["675b"].exports["__wbg_modulerequire_3440a4bcf44437db"](e,t)},__wbg_crypto_98fc271021c7d2ad:function(e){return i["675b"].exports["__wbg_crypto_98fc271021c7d2ad"](e)},__wbg_msCrypto_a2cdb043d2bfe57f:function(e){return i["675b"].exports["__wbg_msCrypto_a2cdb043d2bfe57f"](e)},__wbg_newnoargs_9fdd8f3961dd1bee:function(e,t){return i["675b"].exports["__wbg_newnoargs_9fdd8f3961dd1bee"](e,t)},__wbg_call_ba36642bd901572b:function(e,t){return i["675b"].exports["__wbg_call_ba36642bd901572b"](e,t)},__wbg_self_bb69a836a72ec6e9:function(){return i["675b"].exports["__wbg_self_bb69a836a72ec6e9"]()},__wbg_window_3304fc4b414c9693:function(){return i["675b"].exports["__wbg_window_3304fc4b414c9693"]()},__wbg_globalThis_e0d21cabc6630763:function(){return i["675b"].exports["__wbg_globalThis_e0d21cabc6630763"]()},__wbg_global_8463719227271676:function(){return i["675b"].exports["__wbg_global_8463719227271676"]()},__wbindgen_is_undefined:function(e){return i["675b"].exports["__wbindgen_is_undefined"](e)},__wbg_buffer_9e184d6f785de5ed:function(e){return i["675b"].exports["__wbg_buffer_9e184d6f785de5ed"](e)},__wbg_new_e8101319e4cf95fc:function(e){return i["675b"].exports["__wbg_new_e8101319e4cf95fc"](e)},__wbg_set_e8ae7b27314e8b98:function(e,t,a){return i["675b"].exports["__wbg_set_e8ae7b27314e8b98"](e,t,a)},__wbg_length_2d56cb37075fcfb1:function(e){return i["675b"].exports["__wbg_length_2d56cb37075fcfb1"](e)},__wbg_newwithlength_a8d1dbcbe703a5c6:function(e){return i["675b"].exports["__wbg_newwithlength_a8d1dbcbe703a5c6"](e)},__wbg_subarray_901ede8318da52a6:function(e,t,a){return i["675b"].exports["__wbg_subarray_901ede8318da52a6"](e,t,a)},__wbindgen_object_clone_ref:function(e){return i["675b"].exports["__wbindgen_object_clone_ref"](e)},__wbindgen_is_string:function(e){return i["675b"].exports["__wbindgen_is_string"](e)},__wbindgen_throw:function(e,t){return i["675b"].exports["__wbindgen_throw"](e,t)},__wbindgen_memory:function(){return i["675b"].exports["__wbindgen_memory"]()}}}}};function c(t){if(i[t])return i[t].exports;var a=i[t]={i:t,l:!1,exports:{}};return e[t].call(a.exports,a,a.exports,c),a.l=!0,a.exports}c.e=function(e){var t=[],a=n[e];if(0!==a)if(a)t.push(a[2]);else{var i=new Promise((function(t,i){a=n[e]=[t,i]}));t.push(a[2]=i);var s,u=document.createElement("script");u.charset="utf-8",u.timeout=120,c.nc&&u.setAttribute("nonce",c.nc),u.src=r(e);var h=new Error;s=function(t){u.onerror=u.onload=null,clearTimeout(d);var a=n[e];if(0!==a){if(a){var i=t&&("load"===t.type?"missing":t.type),s=t&&t.target&&t.target.src;h.message="Loading chunk "+e+" failed.\n("+i+": "+s+")",h.name="ChunkLoadError",h.type=i,h.request=s,a[1](h)}n[e]=void 0}};var d=setTimeout((function(){s({type:"timeout",target:u})}),12e4);u.onerror=u.onload=s,document.head.appendChild(u)}var m={"chunk-c8bde796":["f87f"]}[e]||[];return m.forEach((function(e){var a=o[e];if(a)t.push(a);else{var i,n=l[e](),s=fetch(c.p+""+{f87f:"b28e296eabbb5b419ada"}[e]+".module.wasm");if(n instanceof Promise&&"function"===typeof WebAssembly.compileStreaming)i=Promise.all([WebAssembly.compileStreaming(s),n]).then((function(e){return WebAssembly.instantiate(e[0],e[1])}));else if("function"===typeof WebAssembly.instantiateStreaming)i=WebAssembly.instantiateStreaming(s,n);else{var r=s.then((function(e){return e.arrayBuffer()}));i=r.then((function(e){return WebAssembly.instantiate(e,n)}))}t.push(o[e]=i.then((function(t){return c.w[e]=(t.instance||t).exports})))}})),Promise.all(t)},c.m=e,c.c=i,c.d=function(e,t,a){c.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:a})},c.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},c.t=function(e,t){if(1&t&&(e=c(e)),8&t)return e;if(4&t&&"object"===typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(c.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)c.d(a,i,function(t){return e[t]}.bind(null,i));return a},c.n=function(e){var t=e&&e.__esModule?function(){return e["default"]}:function(){return e};return c.d(t,"a",t),t},c.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},c.p="/",c.oe=function(e){throw console.error(e),e},c.w={};var u=window["webpackJsonp"]=window["webpackJsonp"]||[],h=u.push.bind(u);u.push=t,u=u.slice();for(var d=0;d<u.length;d++)t(u[d]);var m=h;s.push([0,"chunk-vendors"]),a()})({0:function(e,t,a){e.exports=a("56d7")},"41d0":function(e,t,a){},"56d7":function(e,t,a){"use strict";a.r(t);a("e260"),a("e6cf"),a("cca6"),a("a79d");var i=a("2b0e"),n=(a("41d0"),a("5f5b"));a("ab8b"),a("2dd8");i["default"].use(n["a"]);var s=function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"dark",attrs:{id:"app"}},[a("div",{attrs:{id:"nav"}},[a("router-link",{attrs:{to:"/"}},[e._v("Home")]),e._v(" | "),a("router-link",{attrs:{to:"/about"}},[e._v("About")]),e._v(" | "),a("router-link",{attrs:{to:"/helper"}},[e._v("DF material helper")]),e._v(" | "),a("router-link",{attrs:{to:"/roguelike"}},[e._v("Roguelike?")])],1),a("router-view")],1)},r=[],o=(a("5c0b"),a("2877")),l={},c=Object(o["a"])(l,s,r,!1,null,null,null),u=c.exports,h=(a("d3b7"),a("3ca3"),a("ddb0"),a("8c4f")),d=function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("b-container",[a("b-row",[a("b-col",[a("b-card",[a("b-card-title",[e._v(" Open source projects ")]),a("b-card-sub-title",[e._v(" Programming projects worth "),a("i",[e._v("something")]),e._v(". ")]),a("work-entry",{attrs:{name:"Janet-D",href:"https://github.com/Putnam3145/janet-d",blurb:"Template-based bindings for a lisp-like"}},[e._v(" A high-level interface to the "),a("b-link",{attrs:{href:"https://janet-lang.org/"}},[e._v("Janet scripting language")]),e._v(" for "),a("b-link",{attrs:{href:"https://dlang.org/"}},[e._v("D")]),e._v(". I primarily wrote this because I like D and don't particularly like Lua, so I was desparate to find another scripting language to work with. It's gone onto the backburner somewhat due to a combination of low interest and low demand, but it was and is very fun to make. ")],1),a("work-entry",{attrs:{name:"Dhatetris",href:"https://github.com/Putnam3145/dhatetris",blurb:"Hatetris TGM"}},[e._v(" A more standards-compliant version of qntm's "),a("b-link",{attrs:{href:"https://qntm.org/hatetris"}},[e._v("Hatetris")]),e._v(", whose "),a("b-link",{attrs:{href:"https://qntm.org/self"}},[e._v("Javascript love")]),e._v(" I can respect but cannot agree with. The primary differences between the original hatetris and this one are, first, that mine goes a few levels deep using an inverse-minimax algorithm to try to find the most pessimal move a few moves ahead in parallel; second, that mine controls more like the usual standards, with T-spins, wall kicks, holds and so on. Primarily I wanted to do some OpenGL. Unfortunately, the library I was using had only compatibility with OpenGL 2, so I didn't really learn much useful. ")],1),a("work-entry",{attrs:{name:"Misc. D modules",href:"https://github.com/Putnam3145/D-modules",blurb:"Higher-dimensional algebra, mostly"}},[e._v(" A few D modules I've made: a template that implements the "),a("b-link",{attrs:{href:"https://en.wikipedia.org/wiki/Cayley%E2%80%93Dickson_construction"}},[e._v("Cayley-Dickson construction")]),e._v(" over the complex numbers and beyond (the template aliases itself to complex numbers at low enough recursion), a manual implementation of quaternions, and a wrapper around an arbitrary value that lets you set that value using a function called entirely in a separate thread. That last one was made when I was pretty naive with threading, so, go easy on it. ")],1),a("work-entry",{attrs:{name:"Auxmos",href:"https://github.com/Putnam3145/auxmos",blurb:"Multithreaded atmospherics plugin for BYOND"}},[e._v(" A total rewrite of Space Station 13's atmospherics in Rust. Multithreaded, with a lot of experiments thereof in the branches. Most of my time with it has been spent on algorithmic improvements. It performs very well, but the interface with BYOND causes a lot of grief; problems with improper refcounting on the byond side lead to nights of frustration. However, overall, the project is very fun for me, and, while some of the more monolithic functions in it horrify me, I still enjoy programming it and learning new things in the process. I even wrote my own unsafe lock-free vector, which primarily works by sharding and, of course, just panicking if it might ever need to move memory, since you just can't do that without a lock. ")]),a("work-entry",{attrs:{name:"DF material helper",href:"#",blurb:"Educational modding tool"}},[e._v(" I love Dwarf Fortress, and it's sparked a mild enthusiasm in me of many subjects. This is the product of one such minor enthusiasm. This is a little online widget that helps guide you through the creation of a modded material in Dwarf Fortress, providing the physical and gameplay ramifications of various material properties. Perhaps my favorite part is the elasticity page, which uses various real properties of materials Dwarf Fortress itself doesn't quite get to, and includes an embed to an interactive graph showing how the poisson ratio can be seen as a constrained proportionality constant between the elastic moduli in isotropic homogenous materials. ")])],1)],1),a("b-col",[a("b-card",[a("b-card-title",[e._v(" Dwarf Fortress mods ")]),a("b-card-sub-title",[e._v(" How I got started. ")]),a("work-entry",{attrs:{name:"Fortbent",href:"http://www.bay12forums.com/smf/index.php?topic=89267.0",blurb:"Homestuck mod, oh no!"}},[e._v(" My first ever programming project, unfortunately. Also grew outside of scope, so hard that unlike the DBZ mod I no longer find myself able to support it. Features a new relationship system built by hacking on top of Dwarf Fortress's, a new in-game semi-economy based on goings-on elsewhere in your fortress's civilization, 144 hand-coded class/aspect combos (this was a mistake), procedurally generated combination attacks based on each of those (also a mistake), and an entire custom skills system built to support this, all in Lua. One may figure out why I said I dislike Lua. ")]),a("work-entry",{attrs:{name:"SCP",href:"http://www.bay12forums.com/smf/index.php?topic=105645.0",blurb:"SCP wiki mod"}},[e._v(" Less a mod and more a series of tech demos. Demonstration of Dwarf Fortress's unused multiple-souls vector with Dr. Bright; the robustness of Dwarf Fortress's materials system with SCP-294; demonstration of how complicated behavior can be replicated with mere interactions with SCP-173; and so on and so forth. Had the beginnings of a more \"management-sim\" like system in the form of \"trust points\" that can be gained by successfully containing SCPs and spent on equipment, safer SCPs etc., but I eventually decided that if I'm going to make an SCP management sim, I'd be better of making it standalone. I haven't, primarily because the idea doesn't actually interest me that much. ")]),a("work-entry",{attrs:{name:"Sparking",href:"http://www.bay12forums.com/smf/index.php?topic=100799.0",blurb:"Dragon Ball mod, what?"}},[e._v(" A Dragon Ball Z mod that I started when I was 17 and got waaaaaay beyond the originally planned scope. Has a fully-featured transformations system built on top of another fully-featured ki system, both written in Lua using DFHack. One may notice a pattern. The main reason this has lasted so long for me is specifically because of how much I enjoy implementing new ideas and techniques I've learned about: for a very long time, whenever I would think up a new way to interact with Dwarf Fortress, this mod is where I would do it. The overall effect is a mod that is terrifyingly fully-featured and thought-out for me; it doesn't help that I actually play it. ")]),a("work-entry",{attrs:{name:"Fantastic",href:"http://www.bay12forums.com/smf/index.php?topic=150752.0",blurb:"Mini-mods"}},[e._v(" I just throw whatever minor things I make into this mod pack whenever I make them. Primary feature is Materials+, which used an older version of the above material helper to implement nearly every metal on the periodic table, with reasonably accurate features. Bit of a silly mod: molybdenum short swords abound. Depending on how the steam release goes, I'm likely to break this into many smaller releases. ")])],1)],1),a("b-col",[a("b-card",[a("b-card-title",[e._v(" Contributions ")]),a("b-card-sub-title",[e._v(" Contributing is as important as creating ")]),a("b-modal",{attrs:{id:"cit_warn","body-bg-variant":"dark","body-text-variant":"light","header-border-variant":"dark","footer-border-variant":"dark","footer-bg-variant":"warning","header-bg-variant":"dark","header-text-variant":"light"},scopedSlots:e._u([{key:"modal-footer",fn:function(){return[a("b-button",{attrs:{variant:"success"},on:{click:function(t){return e.$bvModal.hide("cit_warn")}}},[e._v("No")]),a("b-button",{attrs:{variant:"danger",href:"https://github.com/Citadel-Station-13/Citadel-Station-13"}},[e._v("Yes")])]},proxy:!0}])},[e._v(" Repository contains NSFW content. Are you sure? ")]),a("work-entry",{attrs:{name:"Space Station 13",href:"https://spacestation13.com/",blurb:"Before Among Us and Dwarf Fortress, there was this"}},[e._v(" A simulationist social deduction game. I'm a maintainer for the "),a("b-button",{directives:[{name:"b-modal",rawName:"v-b-modal.cit_warn",modifiers:{cit_warn:!0}}],attrs:{variant:"link"}},[e._v("Citadel Station 13 fork.")]),e._v(' Actual programming work done includes overhauling the "dynamic" game mode to be more responsive to changes in game state, a '),a("b-link",{attrs:{href:"https://github.com/Putnam3145/extools"}},[e._v("port of C++-implemented atmospherics")]),e._v(", the aforementioned auxmos and optimization of NSFW game systems that it seems nobody else could tolerate dealing with. ")],1),a("work-entry",{attrs:{name:"DFHack",href:"https://github.com/DFHack/dfhack",blurb:"Memory hacking library for Dwarf Fortress"}},[e._v(' A high-level memory hacking library for Dwarf Fortress. All of the mods on this page use it extensively. I\'ve contributed various scripts and occasional data structure research to it. My excessive use of DFHack in modding eventually made me come to the realization that it\'s less "modding" that I enjoy and more "creating systems that interact with existing systems", which is why I\'m a Space Station 13 maintainer now. ')]),a("work-entry",{attrs:{name:"Auxtools",href:"https://github.com/willox/auxtools",blurb:"External tools for BYOND"}},[e._v(" In somewhat of the same vein as DFHack. A Rust-based project that hooks into BYOND's internals, allowing access to many of its features from within a Rust program. Used to make auxmos. I've personally contributed a few bugfixes and features to it, including the methods for accessing turf tiles. ")])],1)],1)],1)],1)},m=[],p=function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("b-card",[a("b-card-title",[a("b-button",{directives:[{name:"b-toggle",rawName:"v-b-toggle:[name]",arg:e.name}],attrs:{block:"",variant:"primary"}},[e._v(e._s(e.name))])],1),a("b-card-sub-title",[e._v(" "+e._s(e.blurb)+" ")]),a("b-collapse",{attrs:{id:e.name}},[a("b-card-text",[e._t("default")],2),a("b-card-footer",[a("b-link",{attrs:{href:e.href}},[e._v("Link")])],1)],1)],1)},b=[],f={props:{name:String,href:String,blurb:String}},_=f,g=Object(o["a"])(_,p,b,!1,null,null,null),v=g.exports,y={name:"Home",components:{WorkEntry:v}},w=y,k=Object(o["a"])(w,d,m,!1,null,null,null),x=k.exports,I=function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",[a("b-container",{attrs:{fluid:""}},[a("b-row",[a("b-col",{attrs:{cols:"8"}},[a("b-tabs",{attrs:{pills:"",vertical:"",card:"","content-class":"mt-3"},model:{value:e.curTab,callback:function(t){e.curTab=t},expression:"curTab"}},[e._e(),a("b-tab",{attrs:{title:"Game"}},[a("div",{staticClass:"input_category tab_content",staticStyle:{"grid-template-rows":"repeat(2,min-content)"}},[a("token",{attrs:{token:"STATE_NAME",description:"The material's noun.",placeholder:"iron"},model:{value:e.name,callback:function(t){e.name=t},expression:"name"}},[e._v(' Like "piles of '+e._s(e.name)+'". ')]),a("token",{attrs:{token:"STATE_ADJ",description:"The material's adjective.",placeholder:"iron"},model:{value:e.adj,callback:function(t){e.adj=t},expression:"adj"}},[e._v(' Like "'+e._s(e.adj)+' long sword". ')]),a("token",{attrs:{token:"COLOR",description:"The material's color. Used in graphics as of steam release.",placeholder:"GRAY"},model:{value:e.color,callback:function(t){e.color=t},expression:"color"}},[e._v(" A list of tokens is available "),a("b-link",{attrs:{href:"https://dwarffortresswiki.org/index.php/DF2014:Color#Color_tokens"}},[e._v("here.")]),e._v(" I would have a drop-down with every color, but then I'd have to make a little raw parser so you can add your own arbitrarily, and so on. Horrible. ")],1),a("token",{attrs:{type:"number",number:"",token:"MAT_VALUE",description:"Item values are multiplied by this.",placeholder:"10"},model:{value:e.matValue,callback:function(t){e.matValue=e._n(t)},expression:"matValue"}},[e._v(" You can actually set this to a negative number, forcing others to pay you to take your garbage away. Fun facts. ")])],1)]),a("b-tab",{attrs:{title:"Thermal"}},[a("b-container",[a("b-row",[a("temperature-input",{attrs:{exists:e.melting_exists,name:"Melting point",id:"MELTING_POINT",description:"The temperature at which this material becomes a liquid.",optional:""},on:{"update:exists":function(t){e.melting_exists=t}},model:{value:e.melting,callback:function(t){e.melting=t},expression:"melting"}},[e._v(" There's no special conditions that need to happen for melting. I've had materials I expected to be liquid freeze underground and thus be unusable. Keep these things in mind! ")]),a("temperature-input",{attrs:{exists:e.boiling_exists,name:"Boiling point",id:"BOILING_POINT",description:"The temperature at which this material becomes a gas.",optional:""},on:{"update:exists":function(t){e.boiling_exists=t}},model:{value:e.boiling,callback:function(t){e.boiling=t},expression:"boiling"}},[e._v(" If you set this very low, an object of this material can still be made in reactions, but it'll boil instantly. Very useful for reactions. ")])],1),a("b-row",[a("temperature-input",{attrs:{exists:e.heatdam_exists,name:"Heat damage point",id:"HEATDAM_POINT",description:"Above this temperature, any item made of this material starts taking damage.",optional:"",disabled:""},on:{"update:exists":function(t){e.heatdam_exists=t}},model:{value:e.heatdam,callback:function(t){e.heatdam=t},expression:"heatdam"}},[e._v(" Damage is tattering etc. This token is underused, I think. ")]),a("temperature-input",{attrs:{exists:e.colddam_exists,name:"Cold damage point",id:"COLDDAM_POINT",description:"Below this temperature, any item made of this material starts taking damage.",optional:"",disabled:""},on:{"update:exists":function(t){e.colddam_exists=t}},model:{value:e.colddam,callback:function(t){e.colddam=t},expression:"colddam"}},[e._v(" Damage is tattering etc. This token is underused, I think. ")])],1),a("b-row",[a("temperature-input",{attrs:{exists:e.ignition_exists,name:"Ignition point",id:"IGNITION_POINT",description:"Above this temperature, items made of this material catch fire.",optional:"",disabled:""},on:{"update:exists":function(t){e.ignition_exists=t}},model:{value:e.ignition,callback:function(t){e.ignition=t},expression:"ignition"}},[e._v(" If you don't set a heatdam point along with this, you'll end up having perma-fires. ")]),a("token",{attrs:{type:"number",number:"",token:"SPEC_HEAT",description:"The specific heat capacity, in J/kg-K.",placeholder:"450"},model:{value:e.specHeat,callback:function(t){e.specHeat=e._n(t)},expression:"specHeat"}},[e._v(" The unit is J/kg-K, but the way it actually works in-game is as follows: temperature is stored as a fixed point number and this is the denominator of the fractional part. When an object of one temperature interfaces with another, the hotter one loses fractional part equal to the temperature delta, and the colder one gains fractional part. This generally simulates specific heat pretty well, so that all works out. Input two temperatures here. They'll equalize over time, at 100 FPS, the default DF speed. "),a("heat-sim",{attrs:{specHeat:e.specHeat}})],1)],1)],1)],1),a("b-tab",{attrs:{title:"Mass"}},[a("div",{staticClass:"tab_content input_category"},[a("b-form-row",[a("token",{attrs:{type:"number",number:"",token:"SOLID_DENSITY",description:"The density of the material when solid, in kilograms/meter^3.",placeholder:"7850"},model:{value:e.solidDensity,callback:function(t){e.solidDensity=e._n(t)},expression:"solidDensity"}},[e._v(" This is actually one of the more important stats, both for blunt weapons and, surprisingly, armor. Armor of sufficient density can stop low-momentum attacks cold. ")]),a("token",{attrs:{type:"number",number:"",token:"LIQUID_DENSITY",description:"The density of the material when liquid.",placeholder:"6980"},model:{value:e.liquidDensity,callback:function(t){e.liquidDensity=e._n(t)},expression:"liquidDensity"}},[e._v(" This only matters for hauling. Can't win 'em all. ")])],1),a("token",{attrs:{type:"number",number:"",token:"MOLAR_MASS",description:"The molar of an atom of this material, in grams/mol.",placeholder:"55485"},model:{value:e.molarMass,callback:function(t){e.molarMass=e._n(t)},expression:"molarMass"}},[e._v(" Last I checked, even Toady seems somewhat baffled as to the provenance of this token. It should have to do with gases, but those do barely anything. Its presence in the raws does seem to line it up with SOLID_DENSITY and LIQUID_DENSITY. ")])],1)]),a("b-tab",{attrs:{title:"Strength"}},[a("b-container",[a("b-form-row",[a("token",{attrs:{type:"number",number:"",token:"TENSILE_YIELD",description:"The tension at which this material no longer bounces back when stretched.",placeholder:"155000"},model:{value:e.tensileYield,callback:function(t){e.tensileYield=e._n(t)},expression:"tensileYield"}},[e._v(" Only matters for edged creature attacks that latch, specifically during shaking. Higher is better. ")]),a("token",{attrs:{type:"number",number:"",token:"TENSILE_FRACTURE",description:"The tension at which this material will tear when stretched.",placeholder:"310000"},model:{value:e.tensileFracture,callback:function(t){e.tensileFracture=e._n(t)},expression:"tensileFracture"}},[e._v(' Ditto. Funnily enough, in real life, this is the usual strength category tested--"specific strength" is ultimate tensile strength divided by solid density. For your material, that\'s '+e._s(e.tensileFracture/e.solidDensity)+"! ")])],1),a("b-form-row",[a("token",{attrs:{type:"number",number:"",token:"SHEAR_YIELD",description:"The stress at which this material no longer bounces back when sheared.",placeholder:"155000"},model:{value:e.shearYield,callback:function(t){e.shearYield=e._n(t)},expression:"shearYield"}},[e._v(" Technically involved in edged attacks, but since SHEAR_FRACTURE is multiplied by the contact area, which is 5 at the very least, it doesn't matter except for bolts, and even then only barely. If you mod in ammo that has a size of 1, this will matter, otherwise not so much. Should be noted that this and shear fracture are copied to BENDING and TORSION which matter for joint locks and latching blunt attacks (none in vanilla), respectively. ")]),a("token",{attrs:{type:"number",number:"",token:"SHEAR_FRACTURE",description:"The stress at which this material will break when sheared.",placeholder:"310000"},model:{value:e.shearFracture,callback:function(t){e.shearFracture=e._n(t)},expression:"shearFracture"}},[e._v(" This is the most important material property for bladed weapons. Nothing else comes even close. The higher this stat is, the better. ")])],1),a("b-form-row",[a("token",{attrs:{type:"number",number:"",token:"COMPRESSIVE_YIELD",description:"The pressure at which this material no longer bounces back when compressed.",placeholder:"542500"},model:{value:e.compressiveYield,callback:function(t){e.compressiveYield=e._n(t)},expression:"compressiveYield"}},[e._v(" This only matters for pinching and strangulation. However, it's copied to IMPACT_YIELD, which matters quite a lot: a material with a low IMPACT_YIELD can be completely deflected by armor with high density (imagine a semi-solid material going "),a("i",[e._v("splat")]),e._v(" against a wall). Interestingly enough, though, a high impact yield actually makes armor "),a("i",[e._v("worse")]),e._v("--the material coefficient in blunt armor calculations is equal to 2*IMPACT_FRACTURE - IMPACT_YIELD--for this material, "+e._s(2*e.compressiveFracture-e.compressiveYield)+'. I would assume this is to represent the fact that a low IMPACT_FRACTURE allows armor to "absorb impact" more--any denting is energy dissipated into the armor, rather than into your squishy, squishy body. ')]),a("token",{attrs:{type:"number",number:"",token:"COMPRESSIVE_FRACTURE",description:"The pressure at which this material will break when compressed.",placeholder:"1085000"},model:{value:e.compressiveFracture,callback:function(t){e.compressiveFracture=e._n(t)},expression:"compressiveFracture"}},[e._v(" This, shear fracture and to a lesser extent density are the only properties that matter for armor, period. Everything else is related to skill, weapon and armor themselves. The higher the better, for this and shear fracture. It should also be noted that I'm not sure compressive strength is really a thing. Things don't break if you compress them hard enough, they, like, get all degenerate. Whatever. ")])],1),a("b-form-row",[a("token",{attrs:{type:"number",number:"",token:"MAX_EDGE",description:"How sharp the material can get.",placeholder:"10000"},model:{value:e.maxEdge,callback:function(t){e.maxEdge=e._n(t)},expression:"maxEdge"}},[e._v(' What it says on the tin. Sharper is better for sharp weapons. As straightforward as these things get. Consider this a flat "momentum" multiplier for edged weapons. ')])],1)],1)],1),a("b-tab",{attrs:{lazy:"",title:"Elasticity"}},[a("elasticity",{model:{value:e.elasticity,callback:function(t){e.elasticity=t},expression:"elasticity"}})],1),a("b-tab",{attrs:{title:"Simulation"}},[a("combat-sims",{attrs:{name:e.solidName,solidDensity:e.solidDensity,impactYield:e.impactYield,impactFracture:e.impactFracture,shearYield:e.shearYield,shearFracture:e.shearFracture,maxEdge:e.maxEdge}})],1)],1)],1),a("b-col",[a("b-button-toolbar",[a("b-form-checkbox",{attrs:{button:"","button-variant":e.shouldShowAll?"success":"danger"},model:{value:e.shouldShowAll,callback:function(t){e.shouldShowAll=t},expression:"shouldShowAll"}},[e._v(" Show"+e._s(e.shouldShowAll?"ing":"")+" all ")]),e.showAll?a("b-button",{attrs:{variant:"primary"},on:{click:e.copyRaw}},[e._v(e._s(e.buttonText))]):e._e()],1),a("pre",{staticStyle:{"text-align":"left"},attrs:{id:"result"}},[a("span",{directives:[{name:"show",rawName:"v-show",value:e.showGame,expression:"showGame"}]},[e.name==e.adj?a("span",[e._v("\n[STATE_NAME_ADJ:ALL_SOLID:"+e._s(e.solidName)+"]\n[STATE_NAME_ADJ:LIQUID:"+e._s(e.liquidName)+"]\n[STATE_NAME_ADJ:GAS:"+e._s(e.gasName)+"]")]):a("span",[e._v("\n[STATE_NAME:ALL_SOLID:"+e._s(e.solidName)+"]\n[STATE_NAME:LIQUID:"+e._s(e.liquidName)+"]\n[STATE_NAME:GAS:"+e._s(e.gasName)+"]\n[STATE_ADJ:ALL_SOLID:"+e._s(e.solidAdj)+"]\n[STATE_ADJ:LIQUID:"+e._s(e.liquidAdj)+"]\n[STATE_ADJ:GAS:"+e._s(e.gasAdj)+"]")]),e._v("\n[DISPLAY_COLOR:0:7:1]\n[BUILD_COLOR:0:7:1]\n[MATERIAL_VALUE:"+e._s(Math.round(e.matValue))+"]")]),a("span",{directives:[{name:"show",rawName:"v-show",value:e.showThermal,expression:"showThermal"}]},[e._v("\n[SPEC_HEAT:"+e._s(Math.round(e.specHeat))+"]"),e.melting_exists?a("span",[e._v("\n[MELTING_POINT:"+e._s(Math.round(e.melting))+"]")]):e._e(),e.boiling_exists?a("span",[e._v("\n[BOILING_POINT:"+e._s(Math.round(e.boiling))+"]")]):e._e(),e.ignition_exists?a("span",[e._v("\n[IGNITE_POINT:"+e._s(Math.round(e.ignition))+"]")]):e._e(),e.colddam_exists?a("span",[e._v("\n[COLDDAM_POINT:"+e._s(Math.round(e.colddam))+"]")]):e._e(),e.heatdam_exists?a("span",[e._v("\n[HEATDAM_POINT:"+e._s(Math.round(e.heatdam))+"]")]):e._e()]),a("span",{directives:[{name:"show",rawName:"v-show",value:e.showStrength,expression:"showStrength"}]},[e._v("\n"),e.reasonableEdged&&e.maxEdge>=1e4?a("span",[e._v("[ITEMS_WEAPON]")]):e._e(),e.solidDensity<1e4&&e.impactFracture>1e5?a("span",[e._v("[ITEMS_WEAPON_RANGED]")]):e._e(),e.solidDensity*e.shearFracture>5e8?a("span",[e._v("[ITEMS_AMMO]")]):e._e(),e.impactFracture>5e5?a("span",[e._v("[ITEMS_DIGGER]\n")]):e._e(),e.reasonableEdged&&e.bluntDefense>1e6?a("span",[e._v("[ITEMS_ARMOR]\n")]):e._e(),e.magmaSafe&&e.bluntDefense>5e5?a("span",[e._v("[ITEMS_ANVIL]\n")]):e._e()]),a("span",{directives:[{name:"show",rawName:"v-show",value:e.showGame,expression:"showGame"}]},[e._v("[ITEMS_METAL]\n[ITEMS_HARD]\n[ITEMS_SCALED]\n[ITEMS_BARRED]")]),a("span",{directives:[{name:"show",rawName:"v-show",value:e.showMass,expression:"showMass"}]},[e._v("\n[SOLID_DENSITY:"+e._s(Math.round(e.solidDensity))+"]\n[LIQUID_DENSITY:"+e._s(Math.round(e.liquidDensity))+"]\n[MOLAR_MASS:"+e._s(Math.round(e.molarMass))+"]")]),a("span",{directives:[{name:"show",rawName:"v-show",value:e.showStrength,expression:"showStrength"}]},[e._v("\n[IMPACT_YIELD:"+e._s(Math.round(e.impactYield))+"]\n[IMPACT_FRACTURE:"+e._s(Math.round(e.impactFracture))+"]\n[IMPACT_STRAIN_AT_YIELD:"+e._s(Math.round(e.impactElasticity))+"]\n[COMPRESSIVE_YIELD:"+e._s(Math.round(e.compressiveYield))+"]\n[COMPRESSIVE_FRACTURE:"+e._s(Math.round(e.compressiveFracture))+"]\n[COMPRESSIVE_STRAIN_AT_YIELD:"+e._s(Math.round(e.compressiveElasticity))+"] bulk modulus "+e._s(e.elasticity.bulk/1e3)+" GPa\n[TENSILE_YIELD:"+e._s(Math.round(e.tensileYield))+"]\n[TENSILE_FRACTURE:"+e._s(Math.round(e.tensileFracture))+"]\n[TENSILE_STRAIN_AT_YIELD:"+e._s(Math.round(e.tensileElasticity))+"] young's modulus "+e._s(e.elasticity.young/1e3)+" GPa\n[TORSION_YIELD:"+e._s(Math.round(e.shearYield))+"]\n[TORSION_FRACTURE:"+e._s(Math.round(e.shearFracture))+"]\n[TORSION_STRAIN_AT_YIELD:"+e._s(Math.round(e.shearElasticity))+"]\n[SHEAR_YIELD:"+e._s(Math.round(e.shearYield))+"]\n[SHEAR_FRACTURE:"+e._s(Math.round(e.shearFracture))+"]\n[SHEAR_STRAIN_AT_YIELD:"+e._s(Math.round(e.shearElasticity))+"] shear modulus "+e._s(e.elasticity.shear/1e3)+" GPa\n[BENDING_YIELD:"+e._s(Math.round(e.bendingYield))+"]\n[BENDING_FRACTURE:"+e._s(Math.round(e.bendingFracture))+"]\n[BENDING_STRAIN_AT_YIELD:"+e._s(Math.round(e.bendingElasticity))+"]\n[MAX_EDGE:"+e._s(Math.round(e.maxEdge))+"]")]),a("span",{directives:[{name:"show",rawName:"v-show",value:e.showGame,expression:"showGame"}]},[e._v("\n[STATE_COLOR:ALL_SOLID:"+e._s(e.color)+"]")]),e._v("\n")])],1)],1)],1)],1)},T=[],S=(a("b0c0"),function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"tab_content"},[a("b-container",[a("b-row",[a("b-form-checkbox",{model:{value:e.realisticElasticity,callback:function(t){e.realisticElasticity=t},expression:"realisticElasticity"}},[e._v(" Realistic auto-fill ")]),a("b-button",{directives:[{name:"b-toggle",rawName:"v-b-toggle.realism-help",modifiers:{"realism-help":!0}}],attrs:{variant:"info"}},[e._v("?")]),a("b-collapse",{attrs:{accordion:"elasticity-accord",id:"realism-help"}},[e._v(" All materials in Dwarf Fortress are homogenous and isotropic, and all homogonous and isotropic materials can calculate all of the below properties using any two of them. This does this automatically. Wikipedia has an ever-in-depth "),a("b-link",{attrs:{href:"https://en.wikipedia.org/wiki/Hooke%27s_law"}},[e._v("article on this")]),e._v(", with the specific table I'm using being on the "),a("b-link",{attrs:{href:"https://en.wikipedia.org/wiki/Template:Elastic_moduli"}},[e._v("elastic modulus template.")]),e._v(". ")],1)],1)],1),a("b-input-group",{scopedSlots:e._u([{key:"append",fn:function(){return[a("b-button",{directives:[{name:"b-toggle",rawName:"v-b-toggle.bulk-help",modifiers:{"bulk-help":!0}}],attrs:{variant:"info"}},[e._v("K")])]},proxy:!0}])},[a("b-input-group-prepend",[e.realisticElasticity?a("b-form-radio",{attrs:{name:"anchor",squared:"","button-variant":"outline-dark",button:"",value:"bulk"},model:{value:e.anchor,callback:function(t){e.anchor=t},expression:"anchor"}},["bulk"==e.anchor?a("b-icon-lock"):a("b-icon-unlock")],1):e._e()],1),a("b-form-input",{attrs:{number:"",type:"number",value:e.bulk},on:{input:function(t){return e.update_elasticity(t,"bulk")}}})],1),a("b-collapse",{attrs:{accordion:"elasticity-accord",id:"bulk-help"}},[a("elasticity-info",{attrs:{name:"Bulk modulus",href:"https://en.wikipedia.org/wiki/Bulk_modulus"},scopedSlots:e._u([{key:"dwarf",fn:function(){return[e._v(" Used for COMPRESSIVE_STRAIN_AT_YIELD and IMPACT_STRAIN_AT_YIELD. When an attack fails to reach the momentum threshold for breaking through an attack, the momentum of the attack will still pass through, but will have its momentum multiplied by IMPACT_STRAIN_AT_YIELD/50000. This is very near zero for most materials; however, STRAIN_AT_YIELD is assumed 50000 for chain armor. ")]},proxy:!0},{key:"science",fn:function(){return[e._v(" If you apply pressure to a sphere of material from all sides equally, the sphere will shrink; the bulk modulus is a measure of how much it shrinks, specifically how much pressure it takes to divide its radius by two. Most materials will break far before then, but this is a constant of proportionality. "),a("svg",{attrs:{width:"40",height:"40"}},[a("title",[e._v("A circle is squashed to half of its radius.")]),a("circle",{attrs:{id:"bulk",cx:"20",cy:"20",r:"20",fill:"gray"}},[a("animate",{attrs:{begin:"bulk.click",attributeName:"r",to:"10",dur:"3s",fill:"freeze"}})])])]},proxy:!0}])})],1),a("b-input-group",{scopedSlots:e._u([{key:"append",fn:function(){return[a("b-button",{directives:[{name:"b-toggle",rawName:"v-b-toggle.young-help",modifiers:{"young-help":!0}}],attrs:{variant:"info"}},[e._v("E")])]},proxy:!0}])},[a("b-input-group-prepend",[e.realisticElasticity?a("b-form-radio",{attrs:{name:"anchor",button:"",squared:"","button-variant":"outline-dark",value:"young"},model:{value:e.anchor,callback:function(t){e.anchor=t},expression:"anchor"}},["young"==e.anchor?a("b-icon-lock"):a("b-icon-unlock")],1):e._e()],1),a("b-form-input",{attrs:{number:"",type:"number",value:e.young},on:{input:function(t){return e.update_elasticity(t,"young")}}})],1),a("b-collapse",{attrs:{accordion:"elasticity-accord",id:"young-help"}},[a("elasticity-info",{attrs:{name:"Young's modulus",href:"https://en.wikipedia.org/wiki/Young%27s_modulus"},scopedSlots:e._u([{key:"dwarf",fn:function(){return[e._v(" Used for TENSILE_STRAIN_AT_YIELD and BENDING_STRAIN_AT_YIELD. Neither of these are used much by the game, if at all. If they are, it's in wrestling or, more likely, in attacks transferring momentum to parent parts via bending. ")]},proxy:!0},{key:"science",fn:function(){return[e._v(" If you pull on a rod on both sides, it'll stretch out. This is how much pressure has to be applied to stretch it so that it's at twice the length. Again, most materials will break well before this, and it's a constant of proportionality. "),a("svg",{attrs:{width:"100",height:"30"}},[a("title",[e._v("A rectangle, twice as wide as it is long, is stretched to be four times as wide as it is long when clicked.")]),a("polygon",{attrs:{id:"youngs",points:"25,0 25,25 75,25 75,0",fill:"gray"}},[a("animate",{attrs:{begin:"youngs.click",attributeName:"points",to:"0,0 0,25 100,25 100,0",dur:"3s",fill:"freeze"}})])])]},proxy:!0}])})],1),a("b-input-group",{scopedSlots:e._u([{key:"append",fn:function(){return[a("b-button",{directives:[{name:"b-toggle",rawName:"v-b-toggle.shear-help",modifiers:{"shear-help":!0}}],attrs:{variant:"info"}},[e._v("G")])]},proxy:!0}])},[a("b-input-group-prepend",[e.realisticElasticity?a("b-form-radio",{attrs:{name:"anchor",button:"",squared:"","button-variant":"outline-dark",value:"shear"},model:{value:e.anchor,callback:function(t){e.anchor=t},expression:"anchor"}},["shear"==e.anchor?a("b-icon-lock"):a("b-icon-unlock")],1):e._e()],1),a("b-form-input",{attrs:{number:"",type:"number",value:e.shear},on:{input:function(t){return e.update_elasticity(t,"shear")}}})],1),a("b-collapse",{attrs:{accordion:"elasticity-accord",id:"shear-help"}},[a("elasticity-info",{attrs:{name:"Shear modulus",href:"https://en.wikipedia.org/wiki/Shear_modulus"},scopedSlots:e._u([{key:"dwarf",fn:function(){return[e._v(" Used for SHEAR_STRAIN_AT_YIELD and TORSION_STRAIN_AT_YIELD. Used like IMPACT_STRAIN_AT_YIELD (bulk modulus), but for failed edged attacks instead. ")]},proxy:!0},{key:"science",fn:function(){return[e._v(" If you affix a cube to the ground and press on the top, the bottom will stay the same while the top will move. The shear modulus is how much pressure has to be applied to... uh, just click this. "),a("svg",{attrs:{width:"100",height:"50"}},[a("title",[e._v("Take a rectangle with points ABCD, top left then clockwise. The rectangle is skewed--sheared--so that it's a parallelogram, with diagonal AC now a vertical line.")]),a("polygon",{attrs:{id:"shear",points:"0,0 0,50 50,50 50,0",fill:"gray"}},[a("animate",{attrs:{begin:"shear.click",attributeName:"points",to:"50,0 0,50 50,50 100,0",dur:"3s",fill:"freeze"}})])]),e._v(" This is how much pressure it takes to deform a cube "),a("i",[e._v("exactly")]),e._v(" like this, when viewed face-on. ")]},proxy:!0}])})],1),e.realisticElasticity?a("div",[a("b-input-group",{scopedSlots:e._u([{key:"append",fn:function(){return[a("b-button",{directives:[{name:"b-toggle",rawName:"v-b-toggle.lamé-help",modifiers:{"lamé-help":!0}}],attrs:{variant:"info"}},[e._v("λ")])]},proxy:!0}],null,!1,2299531780)},[a("b-input-group-prepend",[e.realisticElasticity?a("b-form-radio",{attrs:{name:"anchor",button:"",squared:"","button-variant":"outline-dark",value:"lamé"},model:{value:e.anchor,callback:function(t){e.anchor=t},expression:"anchor"}},["lamé"==e.anchor?a("b-icon-lock"):a("b-icon-unlock")],1):e._e()],1),a("b-form-input",{attrs:{number:"",type:"number",value:e.lamé},on:{input:function(t){return e.update_elasticity(t,"lamé")}}})],1),a("b-collapse",{attrs:{accordion:"elasticity-accord",id:"lamé-help"}},[a("elasticity-info",{attrs:{name:"Lamé's first parameter",href:"https://en.wikipedia.org/wiki/Lam%C3%A9_parameters"},scopedSlots:e._u([{key:"dwarf",fn:function(){return[e._v(" Not used. ")]},proxy:!0},{key:"science",fn:function(){return[e._v(" Lamé's first parameter, or λ, is one of the parameters relating stress to strain in materials in 3D space. This is, of course, true of "),a("b",[e._v("all")]),e._v(" of the parameters in this tab, but Lamé's is interesting for being a lot more difficult to describe its physical consequences. Obviously it has some; one can describe all of an isomorphic homogenous material's elastic properties using nothing but λ and any of these other ones. "),a("a",{attrs:{href:"https://agilescientific.com/blog/2012/9/26/l-is-for-lambda.html"}},[e._v("Here's a post on it, I guess.")]),e._v(" It's mostly here for convenience sake: there is a small chance a material will have only λ and one other parameter. This is also why we add Poisson's ratio, below. ")]},proxy:!0}],null,!1,3911614153)})],1),a("b-input-group",{scopedSlots:e._u([{key:"append",fn:function(){return[a("b-button",{directives:[{name:"b-toggle",rawName:"v-b-toggle.poisson-help",modifiers:{"poisson-help":!0}}],attrs:{variant:"info"}},[e._v("ν")])]},proxy:!0}],null,!1,1126240706)},[a("b-input-group-prepend",[e.realisticElasticity?a("b-form-radio",{attrs:{name:"anchor",squared:"","button-variant":"outline-dark",button:"",value:"poisson"},model:{value:e.anchor,callback:function(t){e.anchor=t},expression:"anchor"}},["poisson"==e.anchor?a("b-icon-lock"):a("b-icon-unlock")],1):e._e()],1),a("b-form-input",{attrs:{lazy:"",id:"poisson",step:"0.05",max:"0.499",min:"-0.999",type:"number",number:"",state:e.poisson_state,value:e.poisson},on:{input:function(t){return e.update_elasticity(t,"poisson")}}}),a("b-form-invalid-feedback",{attrs:{id:"poisson-feedback"}},[e._v(" Poisson ratio can only be between -1 and 0.5, otherwise you get negative elastic moduli. ")])],1),a("b-collapse",{attrs:{accordion:"elasticity-accord",id:"poisson-help"}},[a("elasticity-info",{attrs:{name:"Poisson's ratio",href:"https://en.wikipedia.org/wiki/Poisson%27s_ratio"},scopedSlots:e._u([{key:"dwarf",fn:function(){return[e._v(" Not used. ")]},proxy:!0},{key:"science",fn:function(){return[a("p",[e._v("Poisson's ratio is the ratio of deformation in directions perpendicular to load to the deformation in the same direction. For example, a poisson ratio of 0.3 means that if you squeeze an object made of this material from the top hard enough to reduce its length in that direction to 50%, its width will "),a("i",[e._v("increase")]),e._v(" by 15%. This is the default lock because more than any other value here, one could consider it a proportionality constant between "),a("i",[e._v("other elasticity moduli")]),e._v(". This is aided by the fact that it's constrained: values outside the range -1 to 0.5 exclusive cause singularities or 0 or negative elasticity, which is physical nonsense.")]),a("p",[e._v("Typically, metals usually have a poisson ratio around 0.3. Poisson ratios of less than 0 are very rare excepting certain metamaterials, often designed specifically to have this property. A material like rubber, with a poisson ratio very close to 0.5, is easy to stretch but hard to compress. A poisson ratio of 0 has the shear modulus precisely 1/2 of young's modulus and bulk modulus precisely 1/3 of young's.")])]},proxy:!0}],null,!1,4057248574)})],1),a("p",[e._v("I recommend you keep poisson ratio on lock unless you only know two material properties anyway. For example, if you only know shear modulus and bulk modulus, you should input one or the other, lock the one you just input, then input the other one; the rest will fill out accordingly.")]),a("b-button",{directives:[{name:"b-toggle",rawName:"v-b-toggle.graph",modifiers:{graph:!0}}],attrs:{variant:"info"}},[e._v("Graph helper")]),a("b-collapse",{attrs:{id:"graph"}},[a("p",[e._v("This asks for your name. "),a("b",[e._v("Please do not use your real name. I will have access to it. Just put nonsense in or whatever.")])]),a("b-embed",{attrs:{type:"iframe",aspect:"4by3",src:"https://student.desmos.com/join/52gpfc"}})],1)],1):e._e()],1)}),E=[],A=a("b85c"),D=(a("6b93"),a("a9e3"),a("18a5"),a("7386")),M=function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("b-card",{attrs:{"border-variant":"transparent"}},[a("b-card-title",[a("b-button",{attrs:{block:"",variant:"primary",href:e.href}},[e._v(e._s(e.name))])],1),a("b-container",[a("b-row",[a("b-col",[a("b-card",{attrs:{"bg-variant":"dwarf","text-variant":"light"}},[a("b-card-title",[e._v("In Dwarf Fortress")]),e._t("dwarf")],2)],1),a("b-col",[a("b-card",[a("b-card-title",[e._v("In real life")]),e._t("science")],2)],1)],1)],1)],1)},N=[],F={props:{name:String,href:String}},L=F,O=Object(o["a"])(L,M,N,!1,null,null,null),R=O.exports,C={props:{elasticity:Object},components:{BIconLock:D["m"],BIconUnlock:D["s"],ElasticityInfo:R},data:function(){return{bulk:17e4,young:211e3,shear:82e3,"lamé":115e3,poisson:.293,realisticElasticity:!1,anchor:"poisson"}},model:{prop:"elasticity",event:"update:elasticity"},methods:{getSigFig:function(e){if(!e)return e;var t=0;if(Math.abs(e)>1){var a=0;while(Math.floor(e/Math.pow(10,a))==e/Math.pow(10,a))a++;return Math.floor(Math.log10(e))-(a-2)}t=0;while(Math.floor(e*Math.pow(10,t))!=e*Math.pow(10,t))t++;return t},sigFigs:function(e,t){var a=Math.pow(10,t-Math.floor(Math.log(e)/Math.LN10)-1);return Math.round(e*a)/a},getSigFigs:function(e){var t,a=-1/0,i=Object(A["a"])(e);try{for(i.s();!(t=i.n()).done;){var n=t.value;a=Math.max(this.getSigFig(n),a)}}catch(s){i.e(s)}finally{i.f()}return a},parameterize:function(e){if(this.realisticElasticity){var t=function(t){return-1==e.indexOf(t)};if(t("poisson")){if(t("young")){if(t("bulk")){var a=Math.max(this.getSigFigs([this.lamé,this.shear]),3);this.bulk=this.sigFigs(this.lamé+2*this.shear/3,a),e+="bulk"}var i=this.bulk,n=this.shear,s=Math.max(this.getSigFigs([i,n]),3);this.young=this.sigFigs(9*i*n/(3*i+n),s),e+="young"}var r=Math.max(this.getSigFigs([this.young,this.shear]),3);this.poisson=this.sigFigs(this.young/(2*this.shear)-1,r),e+="poisson"}if(t("young")){if(t("bulk")){var o=Math.max(this.getSigFigs([this.lamé,this.shear]),3);this.bulk=this.sigFigs(this.lamé+2*this.shear/3,o),e+="bulk"}var l=this.bulk,c=this.shear,u=Math.max(this.getSigFigs([l,c]),3);this.young=this.sigFigs(9*l*c/(3*l+c),u),e+="young"}var h=this.poisson,d=this.young,m=Math.max(this.getSigFigs([h,d]),3);t("bulk")&&(this.bulk=this.sigFigs(d/(3*(1-2*h)),m)),t("shear")&&(this.shear=this.sigFigs(d/(2*(1+h)),m)),t("lamé")&&(this.lamé=this.sigFigs(d*h/((1+h)*(1-2*h)),m))}this.$emit("update:elasticity",{bulk:this.bulk,young:this.young,shear:this.shear})},update_elasticity:function(e,t){e||(e=0),this[t]=Number(e),this.parameterize([t,this.anchor])}},computed:{poisson_state:function(){return this.poisson>-1&&this.poisson<.5&&null}}},Y=C,j=Object(o["a"])(Y,S,E,!1,null,null,null),P=j.exports,H=function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("b-col",{staticClass:"border"},[a("b-form-group",{attrs:{description:e.description,label:e.id,"v-for":e.id}},[e.optional?a("b-button",{attrs:{variant:e.exists?"primary":"secondary",pressed:e.exists},on:{"update:pressed":function(t){e.exists=t},click:function(t){return e.set_exists()}}},[e._v(e._s(e.name))]):e._e(),a("b-collapse",{model:{value:e.exists,callback:function(t){e.exists=t},expression:"exists"}},[a("b-input-group",{scopedSlots:e._u([{key:"append",fn:function(){return[a("b-button",{directives:[{name:"b-toggle",rawName:"v-b-toggle:[id]",arg:e.id}],attrs:{variant:"info"}},[e._v("?")])]},proxy:!0},{key:"prepend",fn:function(){return[a("b-form-select",{attrs:{options:e.tempTypes},model:{value:e.tempType,callback:function(t){e.tempType=t},expression:"tempType"}})]},proxy:!0}])},[a("b-form-input",{attrs:{number:"",type:"number",value:e.temp},on:{input:function(t){return e.set_value(t)}}})],1),a("b-collapse",{attrs:{id:e.id,right:"",width:"min-content","sidebar-class":"border-left",title:"Help"}},[e._t("default")],2)],1)],1)],1)},G=[],q={name:"TemperatureInput",props:{modelValue:Number,name:String,optional:Boolean,id:String,disabled:Boolean,description:String},model:{prop:"modelValue",event:"update:modelValue"},data:function(){return{temp:1111,tempType:"c",tempTypes:[{value:"f",text:"Fahrenheit"},{value:"u",text:"Urists"},{value:"c",text:"Celsius"},{value:"k",text:"Kelvins"}],exists:!0}},mounted:function(){this.exists=!this.disabled,this.set_exists()},methods:{set_value:function(e){this.temp=e;var t=Number(this.temp);"k"==this.tempType&&(t-=273.15),"c"!=this.tempType&&"k"!=this.tempType||(t=1.8*t+32),"u"!=this.tempType&&(t+=9968),this.$emit("update:modelValue",Math.round(t))},set_exists:function(){this.optional&&this.$emit("update:exists",this.exists)}}},B=q,U=Object(o["a"])(B,H,G,!1,null,null,null),V=U.exports,z=function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("b-col",{staticClass:"border"},[a("b-form-group",{attrs:{description:e.description,label:e.token,"v-for":e.token}},[a("b-input-group",{scopedSlots:e._u([{key:"append",fn:function(){return[a("b-button",{directives:[{name:"b-toggle",rawName:"v-b-toggle:[description]",arg:e.description}],attrs:{variant:"info"}},[e._v("?")])]},proxy:!0}])},[a("b-form-input",{attrs:{placeholder:e.placeholder,debounce:"500",number:e.number,id:e.token,value:e.tokenValue,type:e.type},on:{input:function(t){return e.$emit("input",t)}}})],1)],1),a("b-collapse",{attrs:{id:e.description}},[e._t("default")],2)],1)},$=[],W={name:"Token",props:{description:String,token:String,tokenValue:String,number:Boolean,type:String,placeholder:String}},J=W,Q=Object(o["a"])(J,z,$,!1,null,null,null),K=Q.exports,X=function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("b-tabs",[a("b-tabs",{attrs:{pills:"",card:""}},[a("b-tab",{attrs:{lazy:"",title:"Matchups"}},[a("p",[e._v("Here we have a bunch of matchup charts, how well the material does against another. It's standard matchup chart fare: 10 means it wins every time, 0 means it never wins.")]),a("p",[e._v("Matchup chart of attacks vs plate armor "),a("b-button",{directives:[{name:"b-toggle",rawName:"v-b-toggle.caveat",modifiers:{caveat:!0}}],attrs:{variant:"info"}},[e._v("?")])],1),a("b-collapse",{attrs:{id:"caveat"}},[a("b-card",[a("b-card-text",[e._v("Muscle numbers are going to be off because it's actually testing against a breastplate and a helmet. Solid-muscle plate armor. Very silly.")])],1)],1),a("b-table",{attrs:{id:"attacks-table",items:e.attacks,filter:""}}),a("p",[e._v("Matchup chart of plate armor defense")]),a("b-table",{attrs:{id:"defense-table",items:e.defense,filter:""}}),a("b-button",{directives:[{name:"b-toggle",rawName:"v-b-toggle.technical",modifiers:{technical:!0}}],attrs:{variant:"info"}},[e._v("Technical stuff/method")]),a("b-collapse",{attrs:{id:"technical"}},[a("b-card",[a("b-card-text",[e._v(" The actual simulation is a monte carlo simulation implemented in Rust, using WebAssembly. Simply put: it tests: "),a("b-container",[a("b-row",[a("b-col",[e._v("4 breastplates"),a("br"),e._v("4 -breastplates-"),a("br"),e._v("3 +breastplates+"),a("br"),e._v("2 *breastplates*"),a("br"),e._v("2 ≡breastplates≡"),a("br"),e._v("2 ☼breastplates☼"),a("br"),e._v("1 artifact breastplate")]),e._v("against each individual attack you see above, multiplied by"),a("b-col",[e._v("3 weapons"),a("br"),e._v("2 -weapons-"),a("br"),e._v("2 +weapons+"),a("br"),e._v("2 *weapons*"),a("br"),e._v("2 ≡weapons≡"),a("br"),e._v("2 ☼weapons☼.")])],1)],1),e._v(" It then does the same for helmets, For each material you see. This gives us a total of "+e._s(22464)+' trials. Each individual trial is between two dwarves of random body size and strength, using the very same algorithm as Dwarf Fortress does for the randomness as well as determining whether the attack "wins". The attack is assumed square, and no attack modifiers are taken into account. If you\'re interested, '),a("b-link",{attrs:{href:"https://github.com/Putnam3145/putnam3145-github-io-wasm/blob/master/src/lib.rs"}},[e._v("the Rust code is here.")])],1)],1)],1)],1),a("b-tab",{attrs:{lazy:"",title:"Values"}},[a("b-table",{attrs:{id:"values-table",items:e.values,filter:""}})],1)],1)],1)},Z=[],ee=a.e("chunk-c8bde796").then(a.bind(null,"675b")),te=function(e,t,a,i,n,s,r,o){return{name:e,solidDensity:t,impactYield:a,impactFracture:i,shearYield:n,shearFracture:s,maxEdge:r,armor:o}},ae=function(e,t,a){return{name:e,size:t,attacks:a}},ie=function(e,t,a,i){return{name:e,edged:t,velocity:a,area:i}},ne=[new ae("mace",800,[new ie("bash",!1,2,20)]),new ae("short sword",300,[new ie("slash",!0,1.25,2e4),new ie("stab",!0,1,50)]),new ae("spear",400,[new ie("stab",!0,1,20)])],se=[new te("muscle",1060,1e4,1e4,2e4,2e4,0,!0),new te("iron",7850,542500,1085e3,155e3,31e4,1e4,!0),new te("copper",8930,245e3,77e4,7e4,22e4,1e4,!0),new te("bronze",8250,602e3,843500,172e3,241e3,1e4,!0),new te("silver",10490,35e4,595e3,1e5,17e4,1e4,!1),new te("steel",7850,1505e3,252e4,43e4,72e4,1e4,!0),new te("adamantine",200,5e6,5e6,5e6,5e6,1e5,!0)];function re(e){return"number"==typeof e?e:0}var oe={name:"CombatSims",props:{name:String,solidDensity:Number,impactYield:Number,impactFracture:Number,shearYield:Number,shearFracture:Number,maxEdge:Number},computed:{mat:function(){return new te(name,re(this.solidDensity),re(this.impactYield),re(this.impactFracture),re(this.shearYield),re(this.shearFracture),re(this.maxEdge),!0)}},watch:{$props:{handler:function(){this.$root.$emit("bv::refresh::table","attacks-table"),this.$root.$emit("bv::refresh::table","defense-table")},deep:!0,immediate:!0}},methods:{attacks:function(e,t){var a=this.mat;return ee.then((function(e){var i,n=[],s=Object(A["a"])(ne);try{for(s.s();!(i=s.n()).done;){var r,o=i.value,l=a.solidDensity*o.size/1e6,c=Object(A["a"])(o.attacks);try{for(c.s();!(r=c.n()).done;){var u,h=r.value,d={attack:o.name+" "+h.name,_cellVariants:{}},m=Object(A["a"])(se);try{for(m.s();!(u=m.n()).done;){var p=u.value;if(p.armor){var b=e.attack_score(h,a,p,o,l);d[p.name]=b,b>=7?d._cellVariants[p.name]="success":b<3&&(d._cellVariants[p.name]="danger")}}}catch(f){m.e(f)}finally{m.f()}n.push(d)}}catch(f){c.e(f)}finally{c.f()}}}catch(f){s.e(f)}finally{s.f()}t(n)})),null},defense:function(e,t){var a=this.mat;return ee.then((function(e){var i,n={},s=Object(A["a"])(ne);try{for(s.s();!(i=s.n()).done;){var r,o=i.value,l=Object(A["a"])(se);try{for(l.s();!(r=l.n()).done;){var c,u=r.value,h=u.solidDensity*o.size/1e3,d=Object(A["a"])(o.attacks);try{for(d.s();!(c=d.n()).done;){var m=c.value,p=o.name+" "+m.name,b=10-e.attack_score(m,u,a,o,h);n[p]=n[p]||{attack:p,_cellVariants:{}},n[p][u.name]=b,b>=8?n[p]._cellVariants[u.name]="success":b<2&&(n[p]._cellVariants[u.name]="danger")}}catch(g){d.e(g)}finally{d.f()}}}catch(g){l.e(g)}finally{l.f()}}}catch(g){s.e(g)}finally{s.f()}var f=[];for(var _ in n)f.push(n[_]);t(f)})),null},values:function(){var e=[];e.push({name:this.mat.name,density:this.mat.solidDensity/1e3,impact_yield:this.mat.impactYield/1e6,blunt_defense:this.mat.impactFracture/1e6*2-this.mat.impactYield/1e6,edge_defense:this.mat.shearFracture/1e6,edge_attack:this.mat.shearFracture/1e6*this.mat.maxEdge/1e4});var t,a=Object(A["a"])(se);try{for(a.s();!(t=a.n()).done;){var i=t.value;e.push({name:i.name,density:i.solidDensity/1e3,impact_yield:i.impactYield/1e6,blunt_defense:i.impactFracture/1e6*2-i.impactYield/1e6,edge_defense:i.shearFracture/1e6,edge_attack:i.shearFracture/1e6*i.maxEdge/1e4})}}catch(n){a.e(n)}finally{a.f()}return e}}},le=oe,ce=Object(o["a"])(le,X,Z,!1,null,null,null),ue=ce.exports,he=function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("b-container",[a("b-row",[a("b-col",[a("b-form-input",{attrs:{number:""},model:{value:e.temp_one,callback:function(t){e.temp_one=t},expression:"temp_one"}}),a("b-form-input",{attrs:{number:"",disabled:""},model:{value:e.specHeat,callback:function(t){e.specHeat=t},expression:"specHeat"}})],1),a("b-col",[a("b-form-input",{attrs:{number:""},model:{value:e.temp_two,callback:function(t){e.temp_two=t},expression:"temp_two"}}),a("b-form-input",{attrs:{number:"",placeholder:"SPEC_HEAT"},model:{value:e.other_spec_heat,callback:function(t){e.other_spec_heat=t},expression:"other_spec_heat"}})],1),a("b-col",[a("b-form-checkbox",{attrs:{"button-variant":e.running?"danger":"success",button:""},model:{value:e.running,callback:function(t){e.running=t},expression:"running"}},[e._v(e._s(e.running?"Stop":"Go"))])],1)],1)],1)},de=[],me={name:"HeatSim",props:{specHeat:Number},data:function(){return{temp_one:1e4,temp_two:1e4,running:!1,interval:null,other_spec_heat:null}},watch:{running:function(e){this.other_spec_heat||(this.other_spec_heat=this.specHeat);var t=this;clearInterval(this.interval),e&&(this.interval=setInterval((function(){return t.do_heat_transfer()}),10))}},methods:{do_heat_transfer:function(){var e=this.temp_two-this.temp_one;this.temp_two-=e/this.other_spec_heat,this.temp_one+=e/this.specHeat,Math.abs(e)<1&&(this.running=!1,this.other_spec_heat>this.specHeat?(this.temp_two=Math.round(this.temp_two),this.temp_one=this.temp_two):(this.temp_one=Math.round(this.temp_one),this.temp_two=this.temp_one))}}},pe=me,be=Object(o["a"])(pe,he,de,!1,null,null,null),fe=be.exports,_e={components:{Elasticity:P,TemperatureInput:V,Token:K,CombatSims:ue,HeatSim:fe},name:"Helper",data:function(){return{name:"iron",adj:"iron",nameAdj:"iron",color:"GRAY",melting_exists:!0,boiling_exists:!0,ignition_exists:!0,colddam_exists:!0,heatdam_exists:!0,maxEdge:1e4,matValue:10,melting:11e3,boiling:12e3,heatdam:1e4,colddam:1e4,ignition:1e4,specHeat:450,solidDensity:5e3,liquidDensity:5e3,molarMass:55485,compressiveYield:1e5,compressiveFracture:1e5,shearYield:1e5,shearFracture:1e5,tensileYield:1e5,tensileFracture:1e5,elasticity:{bulk:17e4,young:211e3,shear:82e3},showResult:!1,realisticElasticity:!0,curTab:0,buttonText:"📋 Copy text",shouldShowAll:!1}},computed:{solidName:function(){return!this.melting_exists||this.melting<10032?"frozen "+this.name:this.name},liquidName:function(){return this.melting_exists&&this.melting>=10032?"molten "+this.name:this.name},gasName:function(){return this.boiling_exists&&this.boiling>=10032?"boiling "+this.name:this.name},solidAdj:function(){return this.melting_exists&&this.melting<10032?"frozen "+this.adj:this.adj},liquidAdj:function(){return this.melting>=10032?"molten "+this.adj:this.adj},gasAdj:function(){return this.boiling>=10032?"boiling "+this.adj:this.adj},impactYield:function(){return this.compressiveYield},impactFracture:function(){return this.compressiveFracture},impactElasticity:function(){return 100*this.impactYield/this.elasticity.bulk},compressiveElasticity:function(){return 100*this.compressiveYield/this.elasticity.bulk},tensileElasticity:function(){return 100*this.tensileYield/this.elasticity.young},shearElasticity:function(){return 100*this.shearYield/this.elasticity.shear},bendingYield:function(){return this.tensileYield},bendingFracture:function(){return this.tensileFracture},bendingElasticity:function(){return 100*this.bendingYield/this.elasticity.shear},showAll:function(){return this.shouldShowAll||5==this.curTab},showGame:function(){return this.showAll||0==this.curTab},showThermal:function(){return this.showAll||1==this.curTab},showMass:function(){return this.showAll||2==this.curTab},showStrength:function(){return this.showAll||3==this.curTab||4==this.curTab},showName:function(){return this.showGame||this.showThermal},reasonableEdged:function(){return this.shearFracture>2e5},magmaSafe:function(){return!(this.melting_exists&&this.melting<12e3||this.boiling_exists&&this.boiling<12e3||this.heatdam_exists&&this.heatdam<12e3||this.ignition_exists&&this.ignition<12e3)},bluntDefense:function(){return 2*this.impactFracture-this.impactYield}},methods:{copyRaw:function(){var e=document.getElementById("result");window.getSelection().removeAllRanges(),window.getSelection().selectAllChildren(e),document.execCommand("copy"),window.getSelection().removeAllRanges(),this.buttonText="Copied!✔️"},resetCopyBtn:function(){this.buttonText="📋 Copy text"}}},ge=_e,ve=Object(o["a"])(ge,I,T,!1,null,null,null),ye=ve.exports,we=function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("b-container",[a("h1",[e._v("Is it a roguelike?")]),a("b-form-checkbox-group",{attrs:{stacked:"",options:e.options},model:{value:e.selected,callback:function(t){e.selected=t},expression:"selected"}}),e._v(" Your game is "+e._s(e.score)),a("br"),a("b-button",{directives:[{name:"b-toggle",rawName:"v-b-toggle.help",modifiers:{help:!0}}],attrs:{variant:"info"}},[e._v("What do these mean")]),a("b-collapse",{attrs:{id:"help"}},[a("p",[e._v('"Heavy use of procedural generation": I personally wouldn\'t check this box unless the '),a("i",[e._v("maps")]),e._v(" are procgen. So, Borderlands 2 doesn't get this, despite the obviously Angband-like loot, but Diablo definitely does.")]),a("p",[e._v('"Highly tactical" means that the moment-to-moment gameplay is primarily to do with making the right choices. For example, Slay the Spire passes this easily by virtue of being a deckbuilder, and in fact almost all turn-based games will pass this, and even some non-turn-based games, such as FTL.')]),a("p",[e._v('"Requires technical skill": anti-correlated with "highly tactical", but not strictly so. There are games that will pass both, such as Noita or even The Binding of Isaac, depending on the character. FTL fails this because it\'s real-time-with-pause.')]),a("p",[e._v(' "Game flow organized around "floors" and/or "rooms"": this one\'s a bit hard to pin down, and one of the least valuable entries in this checklist. Basically, the gameplay\'s progression will likely appear to be a series of "setpieces" that are very similar run after run--Nethack has special rooms, FTL, Slay the Spire and The Binding of Isaac are all obviously room/floor-based, Tales of Maj\'Eyal is dungeon-to-dungeon but still passes this. Diablo does too, actually.')]),a("p",[e._v('"Death is a part of the game flow in a way that is not game over": if you make '),a("i",[e._v("actual game progress")]),e._v(" by dying, it fits this condition. Hades is my go-to example these days. Notably, a lot of games that are "),a("i",[e._v("very much not")]),e._v(" roguelikes fail this: The Elder Scrolls series, most platformers... really, it's hard to find games that "),a("i",[e._v("do")]),e._v(". Roguelites are, oddly, one of the places you see this the most. The least roguelike games I can think of that fit this are Dark Souls and those it inspired.")]),a("p",[e._v('"Character building with visible stats or abilities": could not be simpler. If you have a character sheet, you pass. If you have a talent tree, you probably pass. If you have a '),a("i",[e._v("deck")]),e._v(', you pass. FTL passes by virtue of having, yes, a character sheet. Noita passes by virtue of wands, HP and perks being all the "character building" there is, and you get to see all of that at all times.')]),a("p",[e._v('"Movement entirely on a grid": Berlin definition. Included for posterity. Does not affect score. I think it\'s irrelevant.')]),a("p",[e._v('"ASCII graphics as an option or default": Berlin definition. Included for posterity. Does not affect score. I think it\'s irrelevant. Dolphin emulator used to pass this. They removed the shader right as soon as graphics cards could run it (a 3090 just manages). Sad.')])])],1)},ke=[],xe=(a("caad"),a("2532"),{procgen:3,tactical:2,twitchy:-3,rooms:1,permadeath:4,death_progression:-3,rpg_elements:1}),Ie={name:"Roguelike",data:function(){return{selected:["procgen","tactical","rooms","permadeath","rpg_elements","grid_based","ASCII"],options:[{text:"Heavy use of procedural generation",value:"procgen"},{text:"Highly tactical",value:"tactical"},{text:"Requires technical skill (dodging, twitch aiming etc.)",value:"twitchy"},{text:'Game flow organized around "floors" and/or "rooms"',value:"rooms"},{text:'Game has "runs" which end upon either death or victory',value:"permadeath"},{text:"Death is a part of the game flow in a way that is not game over",value:"death_progression"},{text:"Character building with visible stats or abilities",value:"rpg_elements"},{text:"Movement entirely on a grid",value:"grid_based"},{text:"ASCII graphics as an option or default",value:"ASCII"}]}},computed:{score:function(){var e,t=0,a=Object(A["a"])(this.selected);try{for(a.s();!(e=a.n()).done;){var i=e.value;t+=xe[i]||0}}catch(n){a.e(n)}finally{a.f()}return 11==t&&this.selected.includes("grid_based")&&this.selected.includes("ASCII")?"a classic(-style) roguelike":t>8?"roguelike":t>5?this.selected.includes("twitchy")?"a roguelite":"roguelike...like?":t>0?"maybe rogueish":"not roguelike"}}},Te=Ie,Se=Object(o["a"])(Te,we,ke,!1,null,null,null),Ee=Se.exports;i["default"].use(h["a"]);var Ae=[{path:"/",name:"Home",component:x},{path:"/helper",name:"Dwarf Fortress material helper",component:ye},{path:"/about",name:"About",component:function(){return a.e("about").then(a.bind(null,"f820"))}},{path:"/roguelike",name:"Roguelike",component:Ee}],De=new h["a"]({mode:"history",base:"/",routes:Ae}),Me=De;i["default"].config.productionTip=!1,new i["default"]({router:Me,render:function(e){return e(u)}}).$mount("#app")},"5c0b":function(e,t,a){"use strict";a("9c0c")},"9c0c":function(e,t,a){}});
//# sourceMappingURL=app.05067692.js.map